,dep,version,filepath,bloated,cve,affected versions,advisory
0,setuptools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2013-1633,<0.7,"Setuptools version 0.7 includes a fix for CVE-2013-1633: Easy_install in setuptools before 0.7 uses HTTP to retrieve packages from the PyPI repository, and does not perform integrity checks on package contents, which allows man-in-the-middle attackers to execute arbitrary code via a crafted response to the default use of the product."
1,setuptools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,PVE-2021-26129,<0.9.5,setuptools 0.9.5 fixes a security vulnerability in SSL certificate validation.
2,setuptools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,PVE-2021-26132,<1.3,"Setuptools before 1.3 has a security vulnerability in SSL match_hostname check, similar to CVE-2013-7440."
3,setuptools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,PVE-2021-26133,<3.0,setuptools 3.0 avoids the potential security vulnerabilities presented by use of tar archives in ez_setup.py. It also leverages the security features added to ZipFile.extract in Python 2.7.4.
4,setuptools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2022-40897,<65.5.1,"Python Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py.
https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-in-top-python-packages"
5,boto3,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,PVE-2021-41708,<1.4.5,"Boto3 version 1.4.5 fixes an information exposure vulnerability: The boto logger boto3.resources.action, which propagates to root logger, logs the entire uploaded bytes at INFO level.
https://github.com/boto/boto3/issues/1017"
6,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2014-1830,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. This fixes CVE-2014-1830.
7,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2014-1829,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. See: CVE-2014-1829.
8,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2018-18074,<=2.19.1,"Requests before 2.20.0 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
9,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
10,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
11,wheel,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2022-40898,<0.38.1,"Wheel 0.38.1 includes a fix for CVE-2022-40898: An issue discovered in Python Packaging Authority (PyPA) Wheel 0.37.1 and earlier allows remote attackers to cause a denial of service via attacker controlled input to wheel cli.
https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-in-top-python-packages"
12,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2023-23934,<2.2.3,"Werkzeug 2.2.3 includes a fix for CVE-2023-23934: Browsers may allow ""nameless"" cookies that look like '=value' instead of 'key=value'. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like '=__Host-test=bad' for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie '=__Host-test=bad' as __Host-test=bad'. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key.
https://github.com/pallets/werkzeug/security/advisories/GHSA-px8h-6qxv-m22q"
13,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2023-25577,<2.2.3,"Werkzeug 2.2.3 includes a fix for CVE-2023-25577: Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses 'request.data', 'request.form', 'request.files', or 'request.get_data(parse_form_data=False)', it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers.
https://github.com/pallets/werkzeug/security/advisories/GHSA-xg9f-g7g7-2323"
14,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2019-14806,">=0,<0.15.3","Pallets Werkzeug before 0.15.3, when used with Docker, has insufficient debugger PIN randomness because Docker containers share the same machine id."
15,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2019-14322,">=0,<0.15.5","In Pallets Werkzeug before 0.15.5, SharedDataMiddleware mishandles drive names (such as C:) in Windows pathnames."
16,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2022-29361,">=0,<2.1.1",** DISPUTED ** Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project.
17,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,PVE-2021-37276,">=0.15.0,<0.15.5",:class:`~exceptions.BadRequestKeyError` in werkzeug 0.15.5 adds the ``KeyError`` message to the description if ``e.show_exception`` is set to ``True``. This is a more secure default than the original 0.15.0 behavior and makes it easier to control without losing information.
18,sklearn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,no one,no one,no one
19,flask-cors,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2020-25032,<3.0.9,Flask-CORS before 3.0.9 allows ../ directory traversal to access private resources because resource matching does not ensure that pathnames are in a canonical format. See CVE-2020-25032.
20,tqdm,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2016-10075,<4.11.2,The tqdm._version module in tqdm versions before 4.11.2 allows local users to execute arbitrary code via a crafted repo with a malicious git log in the current working directory.
21,scipy,>=1.3.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
22,mlflow,<=1.13.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2023-1177,<2.2.1,"Mlflow 2.2.1 includes a fix for CVE-2023-1177: Path Traversal: '\..\filename' in GitHub repository mlflow/mlflow prior to 2.2.1.
https://github.com/advisories/GHSA-xg73-94fp-g449"
23,mlflow,<=1.13.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2023-1176,<2.2.1,"Mlflow 2.2.1 includes a fix for CVE-2023-1176: Remote file existence check vulnerability in 'mlflow server' and 'mlflow ui' CLIs.
https://github.com/advisories/GHSA-wp72-7hj9-5265"
24,mlflow,<=1.13.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,PVE-2023-58929,<2.3.1,"Mlflow 2.3.1 includes a fix for LFI vulnerability by disabling the ability to provide relative paths in registered model sources. 
https://github.com/mlflow/mlflow/pull/8281
https://github.com/mlflow/mlflow/security/advisories/GHSA-xg73-94fp-g449"
25,mlflow,<=1.13.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,PVE-2023-58982,<2.4.1,"Mlflow 2.4.1 includes a fix for a local file inclusion vulnerability. 
https://github.com/mlflow/mlflow/pull/8648"
26,mlflow,<=1.13.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2022-0736,">=0,<1.23.1",Insecure Temporary File in GitHub repository mlflow/mlflow prior to 1.23.1.
27,flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2019-1010083,<0.12.3,"Flask 0.12.3 includes a fix for CVE-2019-1010083: Unexpected memory usage. The impact is denial of service. The attack vector is crafted encoded JSON data. NOTE: this may overlap CVE-2018-1000656.
https://github.com/pallets/flask/pull/2695/commits/0e1e9a04aaf29ab78f721cfc79ac2a691f6e3929"
28,flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2018-1000656,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.
29,flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,PVE-2021-25820,<0.6.1,flask 0.6.1 fixes a security problem that allowed clients to download arbitrary files  if the host server was a windows based operating system and the client  uses backslashes to escape the directory the files where exposed from.
30,flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2023-30861,"<2.2.5,>=2.3.0,<2.3.2","Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches 'Set-Cookie' headers, it may send one client's 'session' cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets 'session.permanent = True'
3. The application does not access or modify the session at any point during a request.
4. 'SESSION_REFRESH_EACH_REQUEST' enabled (the default).
5. The application does not set a 'Cache-Control' header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the 'Vary: Cookie' header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5."
31,torch,">1.5,<1.10",/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
32,dotmap,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,no one,no one,no one
33,psutil,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2019-18874,<=5.6.5,psutil (aka python-psutil) through 5.6.5 can have a double free. This occurs because of refcount mishandling within a while or for loop that converts system data into a Python object. See CVE-2019-18874.
34,seqeval,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,no one,no one,no one
35,flask-restplus,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,no one,no one,no one
36,sentencepiece,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,no one,no one,no one
37,dill,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,no one,no one,no one
38,sentence-transformers,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,no one,no one,no one
39,transformers,==4.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,CVE-2022-1941,<4.23.0,Transformers 4.23.0 updates its dependency 'protobuf' requirement to '<=3.20.2' to include a security fix.
40,transformers,==4.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/requirements.txt,False,PVE-2022-51450,<4.23.0,"Transformers 4.23.0 includes a fix for a link vulnerable to repojacking.
https://github.com/huggingface/transformers/commit/ce2620194b4a8f070cd29504d34a79758affdf95"
41,fasttext,==0.9.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,no one,no one,no one
42,onnxruntime,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2022-1941,<1.13.1,Onnxruntime 1.13.1 updates 'protobuf' to v3.18.3 to include a security fix.
43,onnxruntime,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2022-25882,<1.13.1,"Onnxruntime 1.13.1 updates 'onnx' to v1.12.1 to fix a vulnerability that allows reading of tensor_data outside the model directory.
https://github.com/microsoft/onnxruntime/pull/12915"
44,pytest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,no one,no one,no one
45,setuptools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2013-1633,<0.7,"Setuptools version 0.7 includes a fix for CVE-2013-1633: Easy_install in setuptools before 0.7 uses HTTP to retrieve packages from the PyPI repository, and does not perform integrity checks on package contents, which allows man-in-the-middle attackers to execute arbitrary code via a crafted response to the default use of the product."
46,setuptools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,PVE-2021-26129,<0.9.5,setuptools 0.9.5 fixes a security vulnerability in SSL certificate validation.
47,setuptools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,PVE-2021-26132,<1.3,"Setuptools before 1.3 has a security vulnerability in SSL match_hostname check, similar to CVE-2013-7440."
48,setuptools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,PVE-2021-26133,<3.0,setuptools 3.0 avoids the potential security vulnerabilities presented by use of tar archives in ez_setup.py. It also leverages the security features added to ZipFile.extract in Python 2.7.4.
49,setuptools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2022-40897,<65.5.1,"Python Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py.
https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-in-top-python-packages"
50,boto3,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,PVE-2021-41708,<1.4.5,"Boto3 version 1.4.5 fixes an information exposure vulnerability: The boto logger boto3.resources.action, which propagates to root logger, logs the entire uploaded bytes at INFO level.
https://github.com/boto/boto3/issues/1017"
51,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2014-1830,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. This fixes CVE-2014-1830.
52,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2014-1829,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. See: CVE-2014-1829.
53,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2018-18074,<=2.19.1,"Requests before 2.20.0 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
54,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
55,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
56,wheel,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2022-40898,<0.38.1,"Wheel 0.38.1 includes a fix for CVE-2022-40898: An issue discovered in Python Packaging Authority (PyPA) Wheel 0.37.1 and earlier allows remote attackers to cause a denial of service via attacker controlled input to wheel cli.
https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-in-top-python-packages"
57,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2023-23934,<2.2.3,"Werkzeug 2.2.3 includes a fix for CVE-2023-23934: Browsers may allow ""nameless"" cookies that look like '=value' instead of 'key=value'. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like '=__Host-test=bad' for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie '=__Host-test=bad' as __Host-test=bad'. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key.
https://github.com/pallets/werkzeug/security/advisories/GHSA-px8h-6qxv-m22q"
58,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2023-25577,<2.2.3,"Werkzeug 2.2.3 includes a fix for CVE-2023-25577: Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses 'request.data', 'request.form', 'request.files', or 'request.get_data(parse_form_data=False)', it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers.
https://github.com/pallets/werkzeug/security/advisories/GHSA-xg9f-g7g7-2323"
59,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2019-14806,">=0,<0.15.3","Pallets Werkzeug before 0.15.3, when used with Docker, has insufficient debugger PIN randomness because Docker containers share the same machine id."
60,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2019-14322,">=0,<0.15.5","In Pallets Werkzeug before 0.15.5, SharedDataMiddleware mishandles drive names (such as C:) in Windows pathnames."
61,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2022-29361,">=0,<2.1.1",** DISPUTED ** Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project.
62,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,PVE-2021-37276,">=0.15.0,<0.15.5",:class:`~exceptions.BadRequestKeyError` in werkzeug 0.15.5 adds the ``KeyError`` message to the description if ``e.show_exception`` is set to ``True``. This is a more secure default than the original 0.15.0 behavior and makes it easier to control without losing information.
63,sklearn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,no one,no one,no one
64,flask-cors,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2020-25032,<3.0.9,Flask-CORS before 3.0.9 allows ../ directory traversal to access private resources because resource matching does not ensure that pathnames are in a canonical format. See CVE-2020-25032.
65,tqdm,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2016-10075,<4.11.2,The tqdm._version module in tqdm versions before 4.11.2 allows local users to execute arbitrary code via a crafted repo with a malicious git log in the current working directory.
66,scipy,>=1.3.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
67,mlflow,<=1.13.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2023-1177,<2.2.1,"Mlflow 2.2.1 includes a fix for CVE-2023-1177: Path Traversal: '\..\filename' in GitHub repository mlflow/mlflow prior to 2.2.1.
https://github.com/advisories/GHSA-xg73-94fp-g449"
68,mlflow,<=1.13.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2023-1176,<2.2.1,"Mlflow 2.2.1 includes a fix for CVE-2023-1176: Remote file existence check vulnerability in 'mlflow server' and 'mlflow ui' CLIs.
https://github.com/advisories/GHSA-wp72-7hj9-5265"
69,mlflow,<=1.13.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,PVE-2023-58929,<2.3.1,"Mlflow 2.3.1 includes a fix for LFI vulnerability by disabling the ability to provide relative paths in registered model sources. 
https://github.com/mlflow/mlflow/pull/8281
https://github.com/mlflow/mlflow/security/advisories/GHSA-xg73-94fp-g449"
70,mlflow,<=1.13.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,PVE-2023-58982,<2.4.1,"Mlflow 2.4.1 includes a fix for a local file inclusion vulnerability. 
https://github.com/mlflow/mlflow/pull/8648"
71,mlflow,<=1.13.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2022-0736,">=0,<1.23.1",Insecure Temporary File in GitHub repository mlflow/mlflow prior to 1.23.1.
72,flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2019-1010083,<0.12.3,"Flask 0.12.3 includes a fix for CVE-2019-1010083: Unexpected memory usage. The impact is denial of service. The attack vector is crafted encoded JSON data. NOTE: this may overlap CVE-2018-1000656.
https://github.com/pallets/flask/pull/2695/commits/0e1e9a04aaf29ab78f721cfc79ac2a691f6e3929"
73,flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2018-1000656,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.
74,flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,PVE-2021-25820,<0.6.1,flask 0.6.1 fixes a security problem that allowed clients to download arbitrary files  if the host server was a windows based operating system and the client  uses backslashes to escape the directory the files where exposed from.
75,flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2023-30861,"<2.2.5,>=2.3.0,<2.3.2","Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches 'Set-Cookie' headers, it may send one client's 'session' cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets 'session.permanent = True'
3. The application does not access or modify the session at any point during a request.
4. 'SESSION_REFRESH_EACH_REQUEST' enabled (the default).
5. The application does not set a 'Cache-Control' header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the 'Vary: Cookie' header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5."
76,torch,">1.5,<1.10",/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
77,dotmap,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,no one,no one,no one
78,psutil,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2019-18874,<=5.6.5,psutil (aka python-psutil) through 5.6.5 can have a double free. This occurs because of refcount mishandling within a while or for loop that converts system data into a Python object. See CVE-2019-18874.
79,seqeval,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,no one,no one,no one
80,flask-restplus,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,no one,no one,no one
81,sentencepiece,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,no one,no one,no one
82,dill,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,no one,no one,no one
83,sentence-transformers,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,no one,no one,no one
84,transformers,==4.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,CVE-2022-1941,<4.23.0,Transformers 4.23.0 updates its dependency 'protobuf' requirement to '<=3.20.2' to include a security fix.
85,transformers,==4.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,PVE-2022-51450,<4.23.0,"Transformers 4.23.0 includes a fix for a link vulnerable to repojacking.
https://github.com/huggingface/transformers/commit/ce2620194b4a8f070cd29504d34a79758affdf95"
86,farm,==c2e86cdd52242d27702f5f383883b8e3421489ee,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/setup.py,False,no one,no one,no one
87,farm,==c2e86cdd52242d27702f5f383883b8e3421489ee,/home/daniele/git/NICHE_projects/Repo/Cloneables/FARM/tutorials/sagemaker/source/requirements.txt,False,no one,no one,no one
