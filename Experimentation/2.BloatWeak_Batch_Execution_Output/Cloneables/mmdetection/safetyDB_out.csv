,dep,version,filepath,bloated,cve,affected versions,advisory
0,urllib3,<2.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/readthedocs.txt,False,CVE-2020-7212,">=1.25.2,<=1.25.7","The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2). See: CVE-2020-7212."
1,urllib3,<2.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/readthedocs.txt,False,CVE-2021-28363,">=1.26.0,<1.26.4","Urllib3 1.26.4 includes a fix for CVE-2021-28363: The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.
https://github.com/urllib3/urllib3/security/advisories/GHSA-5phf-pp7p-vc2r"
2,scipy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/readthedocs.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
3,mmcv,">=2.0.0rc4,<2.1.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/readthedocs.txt,False,no one,no one,no one
4,torchvision,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/readthedocs.txt,False,no one,no one,no one
5,mmengine,">=0.7.1,<1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/readthedocs.txt,False,no one,no one,no one
6,torch,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/readthedocs.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
7,albumentations,">=0.3.2 --no-binary qudida,albumentations",/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/albu.txt,False,no one,no one,no one
8,transformers,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,CVE-2022-1941,<4.23.0,Transformers 4.23.0 updates its dependency 'protobuf' requirement to '<=3.20.2' to include a security fix.
9,transformers,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,PVE-2022-51450,<4.23.0,"Transformers 4.23.0 includes a fix for a link vulnerable to repojacking.
https://github.com/huggingface/transformers/commit/ce2620194b4a8f070cd29504d34a79758affdf95"
10,transformers,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,PVE-2021-40187,<4.5.0,Transformers 4.5.0 includes various vulnerability fixes.
11,memory_profiler,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
12,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,PVE-2023-54914,<3.6,"Nltk 3.6 includes a fix for a REDoS vulnerability.
https://github.com/nltk/nltk/pull/2597"
13,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,CVE-2021-43854,<3.6.5,"Nltk 3.6.5 includes a fix for CVE-2021-43854: Versions prior to 3.6.5 are vulnerable to regular expression denial of service (ReDoS) attacks. The vulnerability is present in PunktSentenceTokenizer, sent_tokenize and word_tokenize. Any users of this class, or these two functions, are vulnerable to the ReDoS attack. In short, a specifically crafted long input to any of these vulnerable functions will cause them to take a significant amount of execution time. If your program relies on any of the vulnerable functions for tokenizing unpredictable user input, it's strongly recommended upgrading to a version of NLTK without the vulnerability. For users unable to upgrade the execution time can be bounded by limiting the maximum length of an input to any of the vulnerable functions.
https://github.com/nltk/nltk/security/advisories/GHSA-f8m6-h2c7-8h9x
https://github.com/nltk/nltk/issues/2866"
14,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,CVE-2019-14751,">=0,<3.4.5","NLTK Downloader before 3.4.5 is vulnerable to a directory traversal, allowing attackers to write arbitrary files via a (dot dot slash) in an NLTK package (ZIP archive) that is mishandled during extraction."
15,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,CVE-2021-3828,">=0,<3.6.4",Nltk before 3.6.4 is vulnerable to Inefficient Regular Expression Complexity.
16,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,CVE-2021-3842,">=0,<3.6.6",Nltk before 3.6.6 is vulnerable to Inefficient Regular Expression Complexity.
17,pytest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
18,parameterized,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
19,isort,==4.3.21,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
20,xdoctest,>=0.10.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
21,mmtrack,==dev-1.x,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
22,kwarray,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
23,asynctest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
24,ubelt,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
25,imagecorruptions,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
26,interrogate,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
27,prettytable,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
28,onnxruntime,>=1.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,CVE-2022-1941,<1.13.1,Onnxruntime 1.13.1 updates 'protobuf' to v3.18.3 to include a security fix.
29,onnxruntime,>=1.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,CVE-2022-25882,<1.13.1,"Onnxruntime 1.13.1 updates 'onnx' to v1.12.1 to fix a vulnerability that allows reading of tensor_data outside the model directory.
https://github.com/microsoft/onnxruntime/pull/12915"
30,cityscapesscripts,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
31,protobuf,<=3.20.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,CVE-2022-1941,"<3.18.3,>=3.19.0rc0,<3.19.5,>=3.20.0rc0,<3.20.2,>=4.0.0rc0,<4.21.6","A parsing vulnerability for the MessageSet type in the ProtocolBuffers versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 3.21.5 for protobuf-cpp, and versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 4.21.5 for protobuf-python can lead to out of memory failures. A specially crafted message with multiple key-value per elements creates parsing issues, and can lead to a Denial of Service against services receiving unsanitized input. We recommend upgrading to versions 3.18.3, 3.19.5, 3.20.2, 3.21.6 for protobuf-cpp and 3.18.3, 3.19.5, 3.20.2, 4.21.6 for protobuf-python. Versions for 3.16 and 3.17 are no longer updated."
32,onnx,==1.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,CVE-2022-25882,<1.13.0,Onnx 1.13.0 includes a fix for CVE-2022-25882: Versions of the package onnx before 1.13.0 are vulnerable to Directory Traversal as the external_data field of the tensor proto can have a path to the file which is outside the model current directory or user-provided directory.
33,codecov,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,CVE-2019-10800,<2.0.16,"Codecov 2.0.16 includes a fix for CVE-2019-10800: Remote code execution. The vulnerability exists due to improper sanitization of ""gcov"" arguments before being provided to the ""popen"" method. A remote authenticated attacker can execute arbitrary OS commands on the target system."
34,codecov,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,PVE-2021-38075,<2.0.17,Codecov 2.0.17 fixes a reported command injection vulnerability.
35,instaboostfast,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
36,psutil,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,CVE-2019-18874,<=5.6.5,psutil (aka python-psutil) through 5.6.5 can have a double free. This occurs because of refcount mishandling within a while or for loop that converts system data into a Python object. See CVE-2019-18874.
37,yapf,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
38,flake8,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tests.txt,False,no one,no one,no one
39,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/multimodal.txt,False,PVE-2023-54914,<3.6,"Nltk 3.6 includes a fix for a REDoS vulnerability.
https://github.com/nltk/nltk/pull/2597"
40,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/multimodal.txt,False,CVE-2021-43854,<3.6.5,"Nltk 3.6.5 includes a fix for CVE-2021-43854: Versions prior to 3.6.5 are vulnerable to regular expression denial of service (ReDoS) attacks. The vulnerability is present in PunktSentenceTokenizer, sent_tokenize and word_tokenize. Any users of this class, or these two functions, are vulnerable to the ReDoS attack. In short, a specifically crafted long input to any of these vulnerable functions will cause them to take a significant amount of execution time. If your program relies on any of the vulnerable functions for tokenizing unpredictable user input, it's strongly recommended upgrading to a version of NLTK without the vulnerability. For users unable to upgrade the execution time can be bounded by limiting the maximum length of an input to any of the vulnerable functions.
https://github.com/nltk/nltk/security/advisories/GHSA-f8m6-h2c7-8h9x
https://github.com/nltk/nltk/issues/2866"
41,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/multimodal.txt,False,CVE-2019-14751,">=0,<3.4.5","NLTK Downloader before 3.4.5 is vulnerable to a directory traversal, allowing attackers to write arbitrary files via a (dot dot slash) in an NLTK package (ZIP archive) that is mishandled during extraction."
42,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/multimodal.txt,False,CVE-2021-3828,">=0,<3.6.4",Nltk before 3.6.4 is vulnerable to Inefficient Regular Expression Complexity.
43,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/multimodal.txt,False,CVE-2021-3842,">=0,<3.6.6",Nltk before 3.6.6 is vulnerable to Inefficient Regular Expression Complexity.
44,pycocoevalcap,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/multimodal.txt,False,no one,no one,no one
45,transformers,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/multimodal.txt,False,CVE-2022-1941,<4.23.0,Transformers 4.23.0 updates its dependency 'protobuf' requirement to '<=3.20.2' to include a security fix.
46,transformers,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/multimodal.txt,False,PVE-2022-51450,<4.23.0,"Transformers 4.23.0 includes a fix for a link vulnerable to repojacking.
https://github.com/huggingface/transformers/commit/ce2620194b4a8f070cd29504d34a79758affdf95"
47,transformers,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/multimodal.txt,False,PVE-2021-40187,<4.5.0,Transformers 4.5.0 includes various vulnerability fixes.
48,seaborn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tracking.txt,False,no one,no one,no one
49,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tracking.txt,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
50,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tracking.txt,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
51,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tracking.txt,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
52,numpy,<1.24.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tracking.txt,False,no one,no one,no one
53,motmetrics,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tracking.txt,False,no one,no one,no one
54,mmpretrain,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/tracking.txt,False,no one,no one,no one
55,six,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/runtime.txt,False,no one,no one,no one
56,pycocotools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/runtime.txt,False,no one,no one,no one
57,matplotlib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/runtime.txt,False,no one,no one,no one
58,scipy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/runtime.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
59,terminaltables,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/runtime.txt,False,no one,no one,no one
60,shapely,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/runtime.txt,False,no one,no one,no one
61,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/runtime.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
62,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/runtime.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
63,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/runtime.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
64,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/runtime.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
65,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/runtime.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
66,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/runtime.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
67,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/runtime.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
68,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/runtime.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
69,cython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/build.txt,False,no one,no one,no one
70,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/build.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
71,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/build.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
72,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/build.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
73,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/build.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
74,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/build.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
75,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/build.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
76,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/build.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
77,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/build.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
78,mmcv,">=2.0.0rc4,<2.1.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/mminstall.txt,False,no one,no one,no one
79,mmengine,">=0.7.1,<1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/mminstall.txt,False,no one,no one,no one
80,cityscapesscripts,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/optional.txt,False,no one,no one,no one
81,imagecorruptions,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/optional.txt,False,no one,no one,no one
82,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/optional.txt,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
83,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/optional.txt,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
84,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/optional.txt,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
85,urllib3,<2.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/docs.txt,False,CVE-2020-7212,">=1.25.2,<=1.25.7","The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2). See: CVE-2020-7212."
86,urllib3,<2.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/docs.txt,False,CVE-2021-28363,">=1.26.0,<1.26.4","Urllib3 1.26.4 includes a fix for CVE-2021-28363: The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.
https://github.com/urllib3/urllib3/security/advisories/GHSA-5phf-pp7p-vc2r"
87,pytorch_sphinx_theme,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/docs.txt,False,no one,no one,no one
88,sphinx-copybutton,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/docs.txt,False,no one,no one,no one
89,sphinx_markdown_tables,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/docs.txt,False,no one,no one,no one
90,sphinx,==4.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/docs.txt,False,no one,no one,no one
91,sphinx_rtd_theme,==0.5.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/docs.txt,False,no one,no one,no one
92,myst-parser,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/docs.txt,False,no one,no one,no one
93,docutils,==0.16.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mmdetection/requirements/docs.txt,False,CVE-2009-5042,">=0.5,<0.6","Docutils 0.6 includes a fix for CVE-2009-5042: Python-docutils allows insecure usage of temporary files.
https://github.com/advisories/GHSA-cg75-6938-wx58"
