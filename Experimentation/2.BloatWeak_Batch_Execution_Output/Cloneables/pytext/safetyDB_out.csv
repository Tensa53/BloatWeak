,dep,version,filepath,bloated,cve,affected versions,advisory
0,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2014-1830,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. This fixes CVE-2014-1830.
1,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2014-1829,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. See: CVE-2014-1829.
2,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2018-18074,<=2.19.1,"Requests before 2.20.0 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
3,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
4,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
5,transformers,==3.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2022-1941,<4.23.0,Transformers 4.23.0 updates its dependency 'protobuf' requirement to '<=3.20.2' to include a security fix.
6,transformers,==3.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,PVE-2022-51450,<4.23.0,"Transformers 4.23.0 includes a fix for a link vulnerable to repojacking.
https://github.com/huggingface/transformers/commit/ce2620194b4a8f070cd29504d34a79758affdf95"
7,transformers,==3.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,PVE-2021-40187,<4.5.0,Transformers 4.5.0 includes various vulnerability fixes.
8,click,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,PVE-2022-47833,<8.0.0,"Click 8.0.0 uses 'mkstemp()' instead of the deprecated & insecure 'mktemp()'.
https://github.com/pallets/click/issues/1752"
9,mock,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,no one,no one,no one
10,future,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2022-40899,<=0.18.2,"Future 0.18.2 and earlier allows remote attackers to cause a denial of service via crafted Set-Cookie header from malicious web server.
https://github.com/PythonCharmers/python-future/blob/master/src/future/backports/http/cookiejar.py#L215
https://github.com/python/cpython/pull/17157"
11,onnx,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2022-25882,<1.13.0,Onnx 1.13.0 includes a fix for CVE-2022-25882: Versions of the package onnx before 1.13.0 are vulnerable to Directory Traversal as the external_data field of the tensor proto can have a path to the file which is outside the model current directory or user-provided directory.
12,sentencepiece,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,no one,no one,no one
13,tensorboard,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,no one,no one,no one
14,torch,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
15,iopath,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,no one,no one,no one
16,hypothesis,<4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,no one,no one,no one
17,fairseq,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,no one,no one,no one
18,torchtext,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,no one,no one,no one
19,pandas,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
20,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
21,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
22,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
23,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
24,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
25,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
26,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
27,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
28,pytorch-pretrained-bert,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/docs_requirements.txt,False,no one,no one,no one
29,onnx,>=1.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2022-25882,<1.13.0,Onnx 1.13.0 includes a fix for CVE-2022-25882: Versions of the package onnx before 1.13.0 are vulnerable to Directory Traversal as the external_data field of the tensor proto can have a path to the file which is outside the model current directory or user-provided directory.
30,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2014-1830,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. This fixes CVE-2014-1830.
31,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2014-1829,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. See: CVE-2014-1829.
32,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2018-18074,<=2.19.1,"Requests before 2.20.0 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
33,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
34,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
35,transformers,==3.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2022-1941,<4.23.0,Transformers 4.23.0 updates its dependency 'protobuf' requirement to '<=3.20.2' to include a security fix.
36,transformers,==3.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,PVE-2022-51450,<4.23.0,"Transformers 4.23.0 includes a fix for a link vulnerable to repojacking.
https://github.com/huggingface/transformers/commit/ce2620194b4a8f070cd29504d34a79758affdf95"
37,transformers,==3.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,PVE-2021-40187,<4.5.0,Transformers 4.5.0 includes various vulnerability fixes.
38,click,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,PVE-2022-47833,<8.0.0,"Click 8.0.0 uses 'mkstemp()' instead of the deprecated & insecure 'mktemp()'.
https://github.com/pallets/click/issues/1752"
39,future,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2022-40899,<=0.18.2,"Future 0.18.2 and earlier allows remote attackers to cause a denial of service via crafted Set-Cookie header from malicious web server.
https://github.com/PythonCharmers/python-future/blob/master/src/future/backports/http/cookiejar.py#L215
https://github.com/python/cpython/pull/17157"
40,sentencepiece,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,no one,no one,no one
41,tensorboard,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,no one,no one,no one
42,torch,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
43,iopath,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,no one,no one,no one
44,scipy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
45,hypothesis,<4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,no one,no one,no one
46,fairseq,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,no one,no one,no one
47,joblib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,PVE-2022-51394,<1.1.1,"Joblib 1.1.1 fixes a security issue where 'eval(pre_dispatch)' could potentially run arbitrary code. Now only basic numerics are supported.
https://github.com/joblib/joblib/pull/1327"
48,joblib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2022-21797,<1.2.0,"Joblib 1.2.0 includes a fix for CVE-2022-21797: The package joblib from 0 and before 1.2.0 is vulnerable to Arbitrary Code Execution via the pre_dispatch flag in Parallel() class due to the eval() statement.
https://github.com/joblib/joblib/issues/1128"
49,joblib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,PVE-2022-51041,<1.2.0,"Joblib 1.2.0 fixes a security issue where 'eval(pre_dispatch)' could potentially run arbitrary code. Now only basic numerics are supported.
https://github.com/joblib/joblib/pull/1327"
50,pandas,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
51,regex,==2019.11.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,no one,no one,no one
52,torchtext,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,no one,no one,no one
53,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
54,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
55,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
56,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
57,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
58,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
59,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
60,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/requirements.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
61,sphinx_rtd_theme,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/pytext/docs/requirements.txt,False,no one,no one,no one
62,sphinx,<2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/pytext/docs/requirements.txt,False,CVE-2020-11023,<3.0.4,Sphinx 3.0.4 updates jQuery version from 3.4.1 to 3.5.1 for security reasons.
63,sphinx,<2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/pytext/pytext/docs/requirements.txt,False,CVE-2020-11022,<3.0.4,Sphinx 3.0.4 updates jQuery version from 3.4.1 to 3.5.1 for security reasons.
