,dep,version,filepath,bloated,cve,affected versions,advisory
0,numpy,>=1.16.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
1,numpy,>=1.16.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
2,numpy,>=1.16.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
3,numpy,>=1.16.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
4,scipy,>=1.10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
5,torch,">=1.8.0,<2.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
6,asteroid-filterbanks,>=0.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,no one,no one,no one
7,SoundFile,>=0.10.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,no one,no one,no one
8,huggingface_hub,>=0.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,no one,no one,no one
9,PyYAML,>=5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,CVE-2020-1747,<5.3.1,"Pyyaml 5.3.1 includes a fix for CVE-2020-1747: A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
10,PyYAML,>=5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
11,PyYAML,>=5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
12,pandas,>=0.23.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
13,pytorch-lightning,">=1.5.0,<=1.7.7",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,CVE-2020-1747,<1.6.0,Pytorch-lightning 1.6.0 updates its dependency 'pyyaml' to v5.4 and uses yaml.safe_load() to fix code execution vulnerabilities.
14,pytorch-lightning,">=1.5.0,<=1.7.7",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,CVE-2020-14343,<1.6.0,Pytorch-lightning 1.6.0 updates its dependency 'pyyaml' to v5.4 and uses yaml.safe_load() to fix code execution vulnerabilities.
15,pytorch-lightning,">=1.5.0,<=1.7.7",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,CVE-2021-4118,">=0,<1.6.0",Pytorch-lightning before 1.6.0 is vulnerable to Deserialization of Untrusted Data.
16,pytorch-lightning,">=1.5.0,<=1.7.7",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,CVE-2022-0845,">=0,<1.6.0","PyTorch Lightning version 1.5.10 and prior is vulnerable to code injection. An attacker could execute commands on the target OS running the operating system by setting the `PL_TRAINER_GPUS` when using the `Trainer` module. A [patch](https://github.com/pytorchlightning/pytorch-lightning/commit/8b7a12c52e52a06408e9231647839ddb4665e8ae) is included in the `1.6.0` release.
Affected functions:
pytorch_lightning.utilities.argparse.parse_env_variables"
17,torchmetrics,<=0.11.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,True,no one,no one,no one
18,torchaudio,>=0.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,no one,no one,no one
19,pb_bss_eval,>=0.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,no one,no one,no one
20,torch_stoi,>=0.1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,no one,no one,no one
21,torch_optimizer,">=0.0.1a12,<0.2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,no one,no one,no one
22,julius,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/setup.py,False,no one,no one,no one
23,scikit-learn,>=0.20.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wsj0-mix/DeepClustering/requirements.txt,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
24,scikit-learn,>=0.20.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wsj0-mix/DeepClustering/requirements.txt,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
25,scikit-learn,>=0.20.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wsj0-mix/DeepClustering/requirements.txt,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
26,asteroid,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wsj0-mix-var/Multi-Decoder-DPRNN/requirements.txt,False,no one,no one,no one
27,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wsj0-mix-var/Multi-Decoder-DPRNN/requirements.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
28,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wsj0-mix-var/Multi-Decoder-DPRNN/requirements.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
29,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wsj0-mix-var/Multi-Decoder-DPRNN/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
30,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wsj0-mix-var/Multi-Decoder-DPRNN/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
31,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wsj0-mix-var/Multi-Decoder-DPRNN/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
32,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wsj0-mix-var/Multi-Decoder-DPRNN/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
33,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wsj0-mix-var/Multi-Decoder-DPRNN/requirements.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
34,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wsj0-mix-var/Multi-Decoder-DPRNN/requirements.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
35,librosa,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wsj0-mix-var/Multi-Decoder-DPRNN/requirements.txt,False,no one,no one,no one
36,scipy,>=1.4.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wham/DynamicMixing/requirements.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
37,pysndfx,>=1.16.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/wham/DynamicMixing/requirements.txt,False,no one,no one,no one
38,scikit-learn,>=0.20.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/kinect-wsj/DeepClustering/requirements.txt,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
39,scikit-learn,>=0.20.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/kinect-wsj/DeepClustering/requirements.txt,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
40,scikit-learn,>=0.20.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/kinect-wsj/DeepClustering/requirements.txt,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
41,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2019-7317,"<3.4.18,>=4.0.0,<4.6.0",Opencv-python 3.4.18 and 4.6.0 pin its dependency 'libpng' to v1.6.37 to include a security fix.
42,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2022-0778,"<3.4.18,>=4.0.0,<4.6.0",Opencv-python 3.4.18 and 4.6.0 update its dependency 'openssl' to v1_1_1o to include security fixes.
43,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2022-1292,"<3.4.18,>=4.0.0,<4.6.0",Opencv-python 3.4.18 and 4.6.0 update its dependency 'openssl' to v1_1_1o to include security fixes.
44,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2022-27406,"<3.4.18,>=4.0.0,<4.6.0",Opencv-python 3.4.18 and 4.6.0 pin its dependency 'freetype' to v2.12.1 to include a security fix.
45,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2022-37434,<4.7.0,Opencv-python 4.7.0 updates its C dependency 'zlib' to v1.2.13 to include a security fix.
46,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2022-2097,<4.7.0,Opencv-python 4.7.0 updates its dependency 'OpenSSL' to v1.1.1s to include security fixes.
47,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2022-1475,<4.7.0,Opencv-python 4.7.0 updates its C dependency 'FFmpeg' to v5.1.2 to include a security fix.
48,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2022-2068,<4.7.0,Opencv-python 4.7.0 updates its dependency 'OpenSSL' to v1.1.1s to include security fixes.
49,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2017-12864,">=0,<3.3.1.11","In opencv/modules/imgcodecs/src/grfmt_pxm.cpp, function ReadNumber did not checkout the input length, which lead to integer overflow. If the image is from remote, may lead to remote code execution or denial of service. This affects OpenCV 3.3 (corresponding with OpenCV-Python version 3.3.0.9) and earlier."
50,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2017-12605,">=0,<3.3.1.11",OpenCV (Open Source Computer Vision Library) through 3.3 (corresponding to OpenCV-Python and OpenCV-Contrib-Python 3.3.0.9) has an out-of-bounds write error in the FillColorRow8 function in utils.cpp when reading an image file by using cv::imread.
51,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2017-1000450,">=0,<3.3.1.11","In opencv/modules/imgcodecs/src/utils.cpp, functions FillUniColor and FillUniGray do not check the input length, which can lead to integer overflow. If the image is from remote, may lead to remote code execution or denial of service. This affects Opencv 3.3 (corresponding with OpenCV-Python 3.3.0.9) and earlier."
52,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2017-12863,">=0,<3.3.1.11","In opencv/modules/imgcodecs/src/grfmt_pxm.cpp, function PxMDecoder::readData has an integer overflow when calculate src_pitch. If the image is from remote, may lead to remote code execution or denial of service. This affects OpenCV 3.3 (corresponding to OpenCV-Python 3.3.0.9) and earlier."
53,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2016-1516,">=0,<3.3.1.11",OpenCV 3.0.0 has a double free issue that allows attackers to execute arbitrary code. This issue was fixed in OpenCV version 3.3.1 (corresponding to OpenCV-Python and and OpenCV-Contrib-Python 3.3.1.11).
54,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2017-14136,">=0,<3.3.1.11",OpenCV (Open Source Computer Vision Library) 3.3 (corresponding to OpenCV-Python 3.3.0.9) has an out-of-bounds write error in the function FillColorRow1 in utils.cpp when reading an image file by using cv::imread. NOTE: this vulnerability exists because of an incomplete fix for CVE-2017-12597.
55,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2017-12862,">=0,<3.3.1.11","In modules/imgcodecs/src/grfmt_pxm.cpp, the length of buffer AutoBuffer _src is small than expected, which will cause copy buffer overflow later. If the image is from remote, may lead to remote code execution or denial of service. This affects OpenCV 3.3 (corresponding to OpenCV-Python 3.3.0.9) and earlier."
56,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2017-17760,">=0,<3.4.0.12","OpenCV 3.3.1 (corresponding with opencv-python and opencv-contrib-python 3.3.1.11) has a Buffer Overflow in the cv::PxMDecoder::readData function in grfmt_pxm.cpp, because an incorrect size value is used."
57,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2017-18009,">=0,<3.4.1.15","In OpenCV 3.3.1 (corresponding with OpenCV-Python 3.3.1.11), a heap-based buffer over-read exists in the function cv::HdrDecoder::checkSignature in modules/imgcodecs/src/grfmt_hdr.cpp."
58,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2018-5268,">=0,<3.4.1.15","In OpenCV 3.3.1 (corresponding with OpenCV-Python 3.3.1.11), a heap-based buffer overflow happens in cv::Jpeg2KDecoder::readComponent8u in modules/imgcodecs/src/grfmt_jpeg2000.cpp when parsing a crafted image file."
59,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2018-5269,">=0,<3.4.1.15","In OpenCV 3.3.1 (corresponds with OpenCV-Python 3.3.1.11), an assertion failure happens in cv::RBaseStream::setPos in modules/imgcodecs/src/bitstrm.cpp because of an incorrect integer cast."
60,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2019-14493,">=0,<4.1.1.26",An issue was discovered in OpenCV before 4.1.1 (OpenCV-Python before 4.1.1.26). There is a NULL pointer dereference in the function cv::XMLParser::parse at modules/core/src/persistence.cpp.
61,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2019-14492,">=4.0.0.21,<4.1.1.26,<3.4.7.28","Opencv-python 4.1.1.26 and 3.4.7.28 include a fix for CVE-2019-14492: An issue was discovered in OpenCV before 3.4.7 and 4.x before 4.1.1. There is an out of bounds read/write in the function HaarEvaluator::OptFeature::calc in modules/objdetect/src/cascadedetect.hpp, which leads to denial of service."
62,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2019-14491,">=4.0.0.21,<4.1.1.26,<3.4.7.28","Opencv-python 4.1.1.26 and 3.4.7.28 include a fix for CVE-2019-14491: An issue was discovered in OpenCV before 3.4.7 and 4.x before 4.1.1. There is an out of bounds read in the function cv::predictOrdered<cv::HaarEvaluator> in modules/objdetect/src/cascadedetect.hpp, which leads to denial of service."
63,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2019-5063,">=4.0.0.21,<4.2.0.32","Opencv-python 4.2.0.32 includes a fix for CVE-2019-5063: An exploitable heap buffer overflow vulnerability exists in the data structure persistence functionality of OpenCV 4.1.0. A specially crafted XML file can cause a buffer overflow, resulting in multiple heap corruptions and potential code execution. An attacker can provide a specially crafted file to trigger this vulnerability."
64,opencv-python,==4.2.0.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2019-5064,">=4.0.0.21,<4.2.0.32","Opencv-python 4.2.0.32 includes a fix for  CVE-2019-5064: An exploitable heap buffer overflow vulnerability exists in the data structure persistence functionality of OpenCV, before version 4.2.0. A specially crafted JSON file can cause a buffer overflow, resulting in multiple heap corruptions and potentially code execution. An attacker can provide a specially crafted file to trigger this vulnerability."
65,torchvision,>=0.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,no one,no one,no one
66,mir-eval,>=0.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,no one,no one,no one
67,zipp,>=3.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,no one,no one,no one
68,pysndfx,>=0.3.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,no one,no one,no one
69,catalyst,==20.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2020-11022,<=22.4,"Catalyst 22.4 and prior releases ship with a vulnerable dependency (sphinx==2.2.1), when installing dev version (pip install catalyst[dev])."
70,catalyst,==20.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,CVE-2020-11023,<=22.4,"Catalyst 22.4 and prior releases ship with a vulnerable dependency (sphinx==2.2.1), when installing dev version (pip install catalyst[dev])."
71,librosa,>=0.7.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,no one,no one,no one
72,threadpoolctl,>=2.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,no one,no one,no one
73,facenet-pytorch,>=2.2.9,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/avspeech/looking-to-listen/local/requirements.txt,False,no one,no one,no one
74,scikit-learn,>=0.22,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/musdb18/X-UMX/requirements.txt,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
75,scikit-learn,>=0.22,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/musdb18/X-UMX/requirements.txt,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
76,scikit-learn,>=0.22,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/musdb18/X-UMX/requirements.txt,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
77,musdb,>=0.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/musdb18/X-UMX/requirements.txt,False,no one,no one,no one
78,museval,>=0.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/musdb18/X-UMX/requirements.txt,False,no one,no one,no one
79,norbert,>=0.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/egs/musdb18/X-UMX/requirements.txt,False,no one,no one,no one
80,torchaudio,>=0.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/install.txt,False,no one,no one,no one
81,torch_stoi,>=0.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/install.txt,False,no one,no one,no one
82,julius,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/install.txt,False,no one,no one,no one
83,torch_optimizer,">=0.0.1a12,<0.2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/install.txt,False,no one,no one,no one
84,pytorch-lightning,">=1.5.0,<=1.7.7",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/install.txt,False,CVE-2020-1747,<1.6.0,Pytorch-lightning 1.6.0 updates its dependency 'pyyaml' to v5.4 and uses yaml.safe_load() to fix code execution vulnerabilities.
85,pytorch-lightning,">=1.5.0,<=1.7.7",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/install.txt,False,CVE-2020-14343,<1.6.0,Pytorch-lightning 1.6.0 updates its dependency 'pyyaml' to v5.4 and uses yaml.safe_load() to fix code execution vulnerabilities.
86,pytorch-lightning,">=1.5.0,<=1.7.7",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/install.txt,False,CVE-2021-4118,">=0,<1.6.0",Pytorch-lightning before 1.6.0 is vulnerable to Deserialization of Untrusted Data.
87,pytorch-lightning,">=1.5.0,<=1.7.7",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/install.txt,False,CVE-2022-0845,">=0,<1.6.0","PyTorch Lightning version 1.5.10 and prior is vulnerable to code injection. An attacker could execute commands on the target OS running the operating system by setting the `PL_TRAINER_GPUS` when using the `Trainer` module. A [patch](https://github.com/pytorchlightning/pytorch-lightning/commit/8b7a12c52e52a06408e9231647839ddb4665e8ae) is included in the `1.6.0` release.
Affected functions:
pytorch_lightning.utilities.argparse.parse_env_variables"
88,torchmetrics,<=0.11.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/install.txt,False,no one,no one,no one
89,pandas,>=0.23.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/install.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
90,PyYAML,>=5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/install.txt,False,CVE-2020-1747,<5.3.1,"Pyyaml 5.3.1 includes a fix for CVE-2020-1747: A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
91,PyYAML,>=5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/install.txt,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
92,PyYAML,>=5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/install.txt,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
93,pb_bss_eval,>=0.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/install.txt,False,no one,no one,no one
94,filelock,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,no one,no one,no one
95,numpy,>=1.16.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
96,numpy,>=1.16.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
97,numpy,>=1.16.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
98,numpy,>=1.16.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
99,huggingface_hub,>=0.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,no one,no one,no one
100,scipy,>=1.10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
101,asteroid-filterbanks,>=0.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,no one,no one,no one
102,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,CVE-2014-1830,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. This fixes CVE-2014-1830.
103,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,CVE-2014-1829,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. See: CVE-2014-1829.
104,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,CVE-2018-18074,<=2.19.1,"Requests before 2.20.0 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
105,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
106,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
107,SoundFile,>=0.10.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,no one,no one,no one
108,torch,">=1.8.0,<2.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/torchhub.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
109,pre-commit,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/dev.txt,False,CVE-2017-18342,<1.10.4,"Pre-commit 1.10.4 replaces 'yaml.load' with safe alternative to avoid a remote code execution vulnerability.
https://github.com/pre-commit/pre-commit/commit/6853f4aa4c8d7e411839bacc66876baea443186a"
110,pytest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/dev.txt,False,no one,no one,no one
111,black,==22.3.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/dev.txt,False,no one,no one,no one
112,librosa,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/dev.txt,False,no one,no one,no one
113,codecov,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/dev.txt,False,CVE-2019-10800,<2.0.16,"Codecov 2.0.16 includes a fix for CVE-2019-10800: Remote code execution. The vulnerability exists due to improper sanitization of ""gcov"" arguments before being provided to the ""popen"" method. A remote authenticated attacker can execute arbitrary OS commands on the target system."
114,codecov,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/dev.txt,False,PVE-2021-38075,<2.0.17,Codecov 2.0.17 fixes a reported command injection vulnerability.
115,coverage,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/dev.txt,False,no one,no one,no one
116,jinja2,">=3.0.0,<3.1.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/docs.txt,False,CVE-2019-10906,">=0,<2.10.1","In Pallets Jinja before 2.10.1, str.format_map allows a sandbox escape."
117,jinja2,">=3.0.0,<3.1.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/docs.txt,False,CVE-2014-0012,">=0,<2.7.3","FileSystemBytecodeCache in Jinja2 2.7.2 does not properly create temporary directories, which allows local users to gain privileges by pre-creating a temporary directory with a user's uid.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-1402."
118,sphinx-rtd-theme,==0.4.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/docs.txt,False,no one,no one,no one
119,sphinxcontrib-programoutput,>=0.16,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/docs.txt,False,no one,no one,no one
120,m2r2,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/docs.txt,False,no one,no one,no one
121,nbsphinx,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/docs.txt,False,no one,no one,no one
122,sphinx,">=1.8.3, <3.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/docs.txt,False,CVE-2020-11023,<3.0.4,Sphinx 3.0.4 updates jQuery version from 3.4.1 to 3.5.1 for security reasons.
123,sphinx,">=1.8.3, <3.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/docs.txt,False,CVE-2020-11022,<3.0.4,Sphinx 3.0.4 updates jQuery version from 3.4.1 to 3.5.1 for security reasons.
124,recommonmark,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/docs.txt,False,no one,no one,no one
125,asteroid_sphinx_theme,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/docs.txt,False,no one,no one,no one
126,sphinxcontrib-jsmath,==1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/asteroid/requirements/docs.txt,False,no one,no one,no one
