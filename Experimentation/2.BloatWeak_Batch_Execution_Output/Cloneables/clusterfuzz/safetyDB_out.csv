,dep,version,filepath,bloated,cve,affected versions,advisory
0,isort,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,no one,no one,no one
1,psutil,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2019-18874,<=5.6.5,psutil (aka python-psutil) through 5.6.5 can have a double free. This occurs because of refcount mishandling within a while or for loop that converts system data into a Python object. See CVE-2019-18874.
2,WebTest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,no one,no one,no one
3,twine,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2018-18074,<2.0.0,Twine 2.0.0 updates requests to 2.20 (or later) to include a security fix.
4,pyfakefs,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,no one,no one,no one
5,selenium,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,no one,no one,no one
6,paramiko,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2018-7750,"<1.17.6,>=2.0.0,<2.0.8,>=2.1.0,<2.1.5,>=2.2.0,<2.2.3,>=2.3.0,<2.3.2,==2.4.0,>=1.18.0,<1.18.5","transport.py in the SSH server implementation of Paramiko before 1.17.6, 1.18.x before 1.18.5, 2.0.x before 2.0.8, 2.1.x before 2.1.5, 2.2.x before 2.2.3, 2.3.x before 2.3.2, and 2.4.x before 2.4.1 does not properly check whether authentication is completed before processing other requests, as demonstrated by channel-open. A customized SSH client can simply skip the authentication step."
7,paramiko,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2008-0299,<1.7.2,"Paramiko 1.7.2 includes a fix for CVE-2008-0299: common.py in Paramiko 1.7.1 and earlier, when using threads or forked processes, does not properly use RandomPool, which allows one session to obtain sensitive information from another session by predicting the state of the pool."
8,paramiko,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2022-24302,">=0,<2.9.3,>=2.10.0,<2.10.1","In Paramiko before 2.10.1, a race condition (between creation and chmod) in the write_private_key_file function could allow unauthorized information disclosure."
9,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,PVE-2021-25678,<0.9.1,"Cryptography 0.9.1 fixes a double free in the OpenSSL backend when using DSA  to verify signatures.
https://github.com/pyca/cryptography/pull/2013"
10,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,PVE-2021-25679,<1.0.2,"Cryptography 1.0.2 fixes a vulnerability. The OpenSSL backend prior to 1.0.2 made extensive use  of assertions to check response codes where our tests could not trigger a  failure.  However, when Python is run with '-O' these asserts are optimized  away.  If a user ran Python with this flag and got an invalid response code, this could lead to undefined behavior or worse."
11,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2016-9243,<1.5.3,"Cryptography 1.5.3 includes a fix for CVE-2016-9243: HKDF in cryptography before 1.5.2 returns an empty byte-string if used with a length less than algorithm.digest_size.
https://github.com/pyca/cryptography/commit/b924696b2e8731f39696584d12cceeb3aeb2d874"
12,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2017-3736,<2.1.3,"Cryptography 2.1.3 updates Windows, macOS, and manylinux1 wheels to be compiled with OpenSSL 1.1.0g, that includes security fixes."
13,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2017-3735,<2.1.3,"Cryptography 2.1.3 updates Windows, macOS, and manylinux1 wheels to be compiled with OpenSSL 1.1.0g, that includes security fixes."
14,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,PVE-2021-39252,<3.3,"Cryptography 3.3 no longer allows loading of finite field Diffie-Hellman parameters of less than 512 bits in length. This change is to conform with an upcoming OpenSSL release that no longer supports smaller sizes. These keys were already wildly insecure and should not have been used in any application outside of testing.
https://github.com/pyca/cryptography/pull/5592"
15,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2020-36242,<3.3.2,"Cryptography 3.3.2 includes a fix for CVE-2020-36242: certain sequences of update calls to symmetrically encrypt multi-GB values could result in an integer overflow and buffer overflow, as demonstrated by the Fernet class."
16,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2023-0215,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
17,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2023-0401,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
18,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2023-0217,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
19,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2022-3996,<39.0.1,"Cryptography 39.0.1 includes a fix for CVE-2022-3996, a DoS vulnerability affecting openssl.
https://github.com/pyca/cryptography/issues/7940"
20,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2023-0216,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
21,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2022-4203,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
22,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2022-4304,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
23,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2023-0286,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
24,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2022-4450,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
25,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2023-2650,<41.0.0,"Cryptography 41.0.0 updates its dependency 'OpenSSL' to v3.1.1 to include a security fix.
https://github.com/pyca/cryptography/commit/8708245ccdeaff21d65eea68a4f8d2a7c5949a22"
26,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2020-25659,<=3.2,"Cryptography 3.2 and prior are vulnerable to Bleichenbacher timing attacks in the RSA decryption API, via timed processing of valid PKCS#1 v1.5 ciphertext."
27,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2023-23931,">=1.8,<39.0.1","Cryptography 39.0.1 includes a fix for CVE-2023-23931: In affected versions 'Cipher.update_into' would accept Python objects which implement the buffer protocol, but provide only immutable buffers. This would allow immutable objects (such as 'bytes') to be mutated, thus violating fundamental rules of Python and resulting in corrupted output. This issue has been present since 'update_into' was originally introduced in cryptography 1.8.
https://github.com/pyca/cryptography/security/advisories/GHSA-w7pp-m8wf-vj6r"
28,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2018-10903,">=1.9.0,<2.3",A flaw was found in python-cryptography versions between >=1.9.0 and <2.3. The finalize_with_tag API did not enforce a minimum tag length. If a user did not validate the input length prior to passing it to finalize_with_tag an attacker could craft an invalid payload with a shortened tag (e.g. 1 byte) such that they would have a 1 in 256 chance of passing the MAC check. GCM tag forgeries can cause key leakage. See: CVE-2018-10903.
29,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2022-3786,">=37.0.0,<38.0.3","Cryptography versions from 37.0.0 and before 38.0.2 include a statically linked copy of OpenSSL that has known vulnerabilities.
https://github.com/pyca/cryptography/security/advisories/GHSA-39hc-v87j-747x"
30,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2022-3602,">=37.0.0,<38.0.3","Cryptography versions from 37.0.0 and before 38.0.2 include a statically linked copy of OpenSSL that has known vulnerabilities.
https://github.com/pyca/cryptography/security/advisories/GHSA-39hc-v87j-747x"
31,crcmod,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,no one,no one,no one
32,pipenv,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2019-11324,<2020.5.28,Pipenv 2020.5.28 updates its dependency 'urllib3' to v1.25.9 to include security fixes.
33,pipenv,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2017-18342,<2020.5.28,Pipenv 2020.5.28 updates its dependency 'pyyaml' minimum requirement to v5.3.1 to include security fixes.
34,pipenv,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2020-26137,<2020.5.28,Pipenv 2020.5.28 updates its dependency 'urllib3' to v1.25.9 to include security fixes.
35,pipenv,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2020-1747,<2020.5.28,Pipenv 2020.5.28 updates its dependency 'pyyaml' minimum requirement to v5.3.1 to include security fixes.
36,pipenv,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2019-11236,<2020.5.28,Pipenv 2020.5.28 updates its dependency 'urllib3' to v1.25.9 to include security fixes.
37,pipenv,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2019-10906,<2020.5.28,Pipenv 2020.5.28 updates its dependency 'jinja2' to v2.11.2 to include a security fix.
38,pipenv,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2022-21668,">=2018.10.9,<=2021.11.23","Pipenv 2022.1.8 includes a fix for CVE-2022-21668: Starting with version 2018.10.9 and prior to version 2022.1.8, a flaw in pipenv's parsing of requirements files allows an attacker to insert a specially crafted string inside a comment anywhere within a requirements.txt file, which will cause victims who use pipenv to install the requirements file to download dependencies from a package index server controlled by the attacker. By embedding malicious code in packages served from their malicious index server, the attacker can trigger arbitrary remote code execution (RCE) on the victims' systems. If an attacker is able to hide a malicious '--index-url' option in a requirements file that a victim installs with pipenv, the attacker can embed arbitrary malicious code in packages served from their malicious index server that will be executed on the victim's host during installation (remote code execution/RCE). When pip installs from a source distribution, any code in the setup.py is executed by the install process.
https://github.com/pypa/pipenv/security/advisories/GHSA-qc9x-gjcv-465w"
39,gunicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,PVE-2021-40104,"<19.10.0,>=20.0.0,<20.0.1","Gunicorn 20.0.1 fixes chunked encoding support to prevent http request smuggling attacks.
https://github.com/benoitc/gunicorn/issues/2176
https://github.com/p4k03n4t0r/http-request-smuggling#request-smuggling-using-mitmproxy-and-gunicorn"
40,gunicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,PVE-2021-40103,<19.4.0,Gunicorn 19.4.0 includes a security fix to raise 'InvalidRequestLine' exception when the line contains malicious data.
41,gunicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2018-1000164,<19.5.0,"Gunicorn 19.5.0 includes a fix for CVE-2018-1000164: gunicorn version 19.4.5 contains a CWE-113 - Improper Neutralization of CRLF Sequences in HTTP Headers vulnerability in ""process_headers"" function in ""gunicorn/http/wsgi.py"" that can result in an attacker causing the server to return arbitrary HTTP headers."
42,grpcio-tools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2017-7861,<1.2.0,"Grpcio-tools 1.2.0 depends on 'grpcio' v1.2.0, which includes security fixes."
43,grpcio-tools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2017-7860,<1.2.0,"Grpcio-tools 1.2.0 depends on 'grpcio' v1.2.0, which includes security fixes."
44,grpcio-tools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2017-9431,<1.3.0,"Grpcio-tools 1.3.0 depends on 'grpcio' v1.3.0, which includes security fixes."
45,grpcio-tools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2017-9431,<1.3.0,"Grpcio-tools 1.3.0 depends on 'grpcio' v1.3.0, which includes security fixes."
46,grpcio-tools,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2017-8359,<1.3.0,"Grpcio-tools 1.3.0 depends on 'grpcio' v1.3.0, which includes security fixes."
47,protobuf,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2021-22570,<3.15.0,"Protobuf 3.15.0 includes a fix for CVE-2021-22570: Nullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr."
48,protobuf,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2022-1941,"<3.18.3,>=3.19.0rc0,<3.19.5,>=3.20.0rc0,<3.20.2,>=4.0.0rc0,<4.21.6","A parsing vulnerability for the MessageSet type in the ProtocolBuffers versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 3.21.5 for protobuf-cpp, and versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 4.21.5 for protobuf-python can lead to out of memory failures. A specially crafted message with multiple key-value per elements creates parsing issues, and can lead to a Denial of Service against services receiving unsanitized input. We recommend upgrading to versions 3.18.3, 3.19.5, 3.20.2, 3.21.6 for protobuf-cpp and 3.18.3, 3.19.5, 3.20.2, 4.21.6 for protobuf-python. Versions for 3.16 and 3.17 are no longer updated."
49,protobuf,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,CVE-2015-5237,<3.4.0,"Protobuf 3.4.0 includes a fix for CVE-2015-5237: Integer overflow in serialization.
https://github.com/protocolbuffers/protobuf/issues/760"
50,pylint,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,PVE-2022-45185,<2.13.0,"Pylint 2.13.0 fixes a crash when using the doc_params extension.
https://github.com/PyCQA/pylint/issues/5322"
51,pylint,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,PVE-2021-38224,<2.5.0,"Pylint 2.5.0 no longer allows ``python -m pylint ...`` to import user code. Previously, it added the current working directory as the first element of ``sys.path``. This opened up a potential security hole where ``pylint`` would import user level code as long as that code resided in modules having the same name as stdlib or pylint's own modules."
52,pylint,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,PVE-2021-39621,<2.7.0,Pylint 2.7.0 includes a fix for vulnerable regular expressions in 'pyreverse'.
53,parameterized,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,no one,no one,no one
54,yapf,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,no one,no one,no one
55,nodeenv,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,no one,no one,no one
56,Fabric,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/Pipfile,False,no one,no one,no one
57,protobuf,==4.23.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/platform_requirements.txt,False,CVE-2022-1941,"<3.18.3,>=3.19.0rc0,<3.19.5,>=3.20.0rc0,<3.20.2,>=4.0.0rc0,<4.21.6","A parsing vulnerability for the MessageSet type in the ProtocolBuffers versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 3.21.5 for protobuf-cpp, and versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 4.21.5 for protobuf-python can lead to out of memory failures. A specially crafted message with multiple key-value per elements creates parsing issues, and can lead to a Denial of Service against services receiving unsanitized input. We recommend upgrading to versions 3.18.3, 3.19.5, 3.20.2, 3.21.6 for protobuf-cpp and 3.18.3, 3.19.5, 3.20.2, 4.21.6 for protobuf-python. Versions for 3.16 and 3.17 are no longer updated."
58,grpcio,==1.56.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/platform_requirements.txt,False,no one,no one,no one
59,pyopenssl,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2013-4314,<0.13.1,"The X509Extension in pyOpenSSL before 0.13.1 does not properly handle a '\0' character in a domain name in the Subject Alternative Name field of an X.509 certificate, which allows man-in-the-middle attackers to spoof arbitrary SSL servers via a crafted certificate issued by a legitimate Certification Authority."
60,pyopenssl,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2018-1000807,">=0.14,<17.5.0","Pyopenssl 17.5.0 includes a fix for CVE-2018-1000807: Use After Free vulnerability in X509 object handling that can possibly lead to denial of service or remote code execution. This attack appears to be exploitable via Depends on the calling application and if it retains a reference to the memory.
https://github.com/pyca/pyopenssl/pull/723"
61,pyopenssl,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2018-1000808,">=0.14,<17.5.0","Pyopenssl 17.5.0 includes a fix for CVE-2018-1000808: Failure to Release Memory Before Removing Last Reference vulnerability in PKCS #12 store that can result in denial-of-service if memory runs low or is exhausted. This attack appears to be exploitable via Depends upon calling application, however it could be as simple as initiating a TLS connection. Anything that would cause the calling application to reload certificates from a PKCS #12 store.
https://github.com/pyca/pyopenssl/pull/723"
62,oauth2client,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
63,google-api-core,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
64,Flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2019-1010083,<0.12.3,"Flask 0.12.3 includes a fix for CVE-2019-1010083: Unexpected memory usage. The impact is denial of service. The attack vector is crafted encoded JSON data. NOTE: this may overlap CVE-2018-1000656.
https://github.com/pallets/flask/pull/2695/commits/0e1e9a04aaf29ab78f721cfc79ac2a691f6e3929"
65,Flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2018-1000656,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.
66,Flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,PVE-2021-25820,<0.6.1,flask 0.6.1 fixes a security problem that allowed clients to download arbitrary files  if the host server was a windows based operating system and the client  uses backslashes to escape the directory the files where exposed from.
67,Flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2023-30861,"<2.2.5,>=2.3.0,<2.3.2","Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches 'Set-Cookie' headers, it may send one client's 'session' cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets 'session.permanent = True'
3. The application does not access or modify the session at any point during a request.
4. 'SESSION_REFRESH_EACH_REQUEST' enabled (the default).
5. The application does not set a 'Cache-Control' header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the 'Vary: Cookie' header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5."
68,google-cloud-ndb,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
69,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,PVE-2021-25678,<0.9.1,"Cryptography 0.9.1 fixes a double free in the OpenSSL backend when using DSA  to verify signatures.
https://github.com/pyca/cryptography/pull/2013"
70,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,PVE-2021-25679,<1.0.2,"Cryptography 1.0.2 fixes a vulnerability. The OpenSSL backend prior to 1.0.2 made extensive use  of assertions to check response codes where our tests could not trigger a  failure.  However, when Python is run with '-O' these asserts are optimized  away.  If a user ran Python with this flag and got an invalid response code, this could lead to undefined behavior or worse."
71,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2016-9243,<1.5.3,"Cryptography 1.5.3 includes a fix for CVE-2016-9243: HKDF in cryptography before 1.5.2 returns an empty byte-string if used with a length less than algorithm.digest_size.
https://github.com/pyca/cryptography/commit/b924696b2e8731f39696584d12cceeb3aeb2d874"
72,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2017-3736,<2.1.3,"Cryptography 2.1.3 updates Windows, macOS, and manylinux1 wheels to be compiled with OpenSSL 1.1.0g, that includes security fixes."
73,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2017-3735,<2.1.3,"Cryptography 2.1.3 updates Windows, macOS, and manylinux1 wheels to be compiled with OpenSSL 1.1.0g, that includes security fixes."
74,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,PVE-2021-39252,<3.3,"Cryptography 3.3 no longer allows loading of finite field Diffie-Hellman parameters of less than 512 bits in length. This change is to conform with an upcoming OpenSSL release that no longer supports smaller sizes. These keys were already wildly insecure and should not have been used in any application outside of testing.
https://github.com/pyca/cryptography/pull/5592"
75,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2020-36242,<3.3.2,"Cryptography 3.3.2 includes a fix for CVE-2020-36242: certain sequences of update calls to symmetrically encrypt multi-GB values could result in an integer overflow and buffer overflow, as demonstrated by the Fernet class."
76,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2023-0215,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
77,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2023-0401,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
78,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2023-0217,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
79,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2022-3996,<39.0.1,"Cryptography 39.0.1 includes a fix for CVE-2022-3996, a DoS vulnerability affecting openssl.
https://github.com/pyca/cryptography/issues/7940"
80,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2023-0216,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
81,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2022-4203,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
82,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2022-4304,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
83,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2023-0286,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
84,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2022-4450,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
85,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2023-2650,<41.0.0,"Cryptography 41.0.0 updates its dependency 'OpenSSL' to v3.1.1 to include a security fix.
https://github.com/pyca/cryptography/commit/8708245ccdeaff21d65eea68a4f8d2a7c5949a22"
86,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2020-25659,<=3.2,"Cryptography 3.2 and prior are vulnerable to Bleichenbacher timing attacks in the RSA decryption API, via timed processing of valid PKCS#1 v1.5 ciphertext."
87,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2023-23931,">=1.8,<39.0.1","Cryptography 39.0.1 includes a fix for CVE-2023-23931: In affected versions 'Cipher.update_into' would accept Python objects which implement the buffer protocol, but provide only immutable buffers. This would allow immutable objects (such as 'bytes') to be mutated, thus violating fundamental rules of Python and resulting in corrupted output. This issue has been present since 'update_into' was originally introduced in cryptography 1.8.
https://github.com/pyca/cryptography/security/advisories/GHSA-w7pp-m8wf-vj6r"
88,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2018-10903,">=1.9.0,<2.3",A flaw was found in python-cryptography versions between >=1.9.0 and <2.3. The finalize_with_tag API did not enforce a minimum tag length. If a user did not validate the input length prior to passing it to finalize_with_tag an attacker could craft an invalid payload with a shortened tag (e.g. 1 byte) such that they would have a 1 in 256 chance of passing the MAC check. GCM tag forgeries can cause key leakage. See: CVE-2018-10903.
89,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2022-3786,">=37.0.0,<38.0.3","Cryptography versions from 37.0.0 and before 38.0.2 include a statically linked copy of OpenSSL that has known vulnerabilities.
https://github.com/pyca/cryptography/security/advisories/GHSA-39hc-v87j-747x"
90,cryptography,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2022-3602,">=37.0.0,<38.0.3","Cryptography versions from 37.0.0 and before 38.0.2 include a statically linked copy of OpenSSL that has known vulnerabilities.
https://github.com/pyca/cryptography/security/advisories/GHSA-39hc-v87j-747x"
91,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2014-1830,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. This fixes CVE-2014-1830.
92,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2014-1829,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. See: CVE-2014-1829.
93,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2018-18074,<=2.19.1,"Requests before 2.20.0 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
94,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
95,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
96,firebase-admin,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
97,google-auth-oauthlib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
98,werkzeug,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2016-10516,<0.11.11,Cross-site scripting (XSS) vulnerability in the render_full function in debug/tbtools.py in the debugger in Pallets Werkzeug before 0.11.11 (as used in Pallets Flask and other products) allows remote attackers to inject arbitrary web script or HTML via a field that contains an exception message.
99,werkzeug,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2020-28724,<0.11.6,Werkzeug before 0.11.6 includes an open redirect vulnerability via a double slash in the URL. See CVE-2020-28724.
100,werkzeug,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,PVE-2021-26435,<0.12,"The defaults of 'generate_password_hash' in werkzeug 0.12 have been changed to more secure ones.
https://github.com/pallets/werkzeug/pull/753"
101,werkzeug,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,PVE-2021-36967,<0.15.0,"Werkzeug 0.15.0 refactors class:`~middleware.proxy_fix.ProxyFix` to support more headers, multiple values, and a more secure configuration."
102,werkzeug,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,PVE-2021-26428,<0.3.1,"Werkzeug 0.3.1 prevents a timing attack against 'werkzeug.contrib.SecureCookie'.
https://github.com/pallets/werkzeug/commit/3b1cb999459f564c8d2cc15063f878e381d0d355"
103,werkzeug,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,PVE-2021-26437,<0.6.1,Werkzeug 0.6.1 adds secure password hashing and checking functions.
104,werkzeug,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,PVE-2021-26175,<0.8,"werkzeug before 0.8 allowed newlines in the header datastructure, allowing header injection attacks."
105,werkzeug,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,PVE-2021-26427,<0.8.3,"Werkzeug 0.8.3 fixes an XSS problem with redirect targets coming from untrusted sources.
https://github.com/pallets/werkzeug/commit/7b8d887d33c768a77f40dd15ff5ac6ebbbab25b9"
106,werkzeug,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2023-23934,<2.2.3,"Werkzeug 2.2.3 includes a fix for CVE-2023-23934: Browsers may allow ""nameless"" cookies that look like '=value' instead of 'key=value'. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like '=__Host-test=bad' for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie '=__Host-test=bad' as __Host-test=bad'. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key.
https://github.com/pallets/werkzeug/security/advisories/GHSA-px8h-6qxv-m22q"
107,werkzeug,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2023-25577,<2.2.3,"Werkzeug 2.2.3 includes a fix for CVE-2023-25577: Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses 'request.data', 'request.form', 'request.files', or 'request.get_data(parse_form_data=False)', it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers.
https://github.com/pallets/werkzeug/security/advisories/GHSA-xg9f-g7g7-2323"
108,werkzeug,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2019-14806,">=0,<0.15.3","Pallets Werkzeug before 0.15.3, when used with Docker, has insufficient debugger PIN randomness because Docker containers share the same machine id."
109,werkzeug,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2019-14322,">=0,<0.15.5","In Pallets Werkzeug before 0.15.5, SharedDataMiddleware mishandles drive names (such as C:) in Windows pathnames."
110,werkzeug,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2022-29361,">=0,<2.1.1",** DISPUTED ** Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project.
111,werkzeug,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,PVE-2021-37276,">=0.15.0,<0.15.5",:class:`~exceptions.BadRequestKeyError` in werkzeug 0.15.5 adds the ``KeyError`` message to the description if ``e.show_exception`` is set to ``True``. This is a more secure default than the original 0.15.0 behavior and makes it easier to control without losing information.
112,google-cloud-datastore,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
113,google-cloud-storage,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
114,google-cloud-core,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
115,sendgrid,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2021-43572,">=6.4.1,<6.9.1",Sendgrid 6.9.1 updates its dependency minimum 'starbank-ecdsa' to v2.0.1 to include a security fix.
116,protobuf,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2021-22570,<3.15.0,"Protobuf 3.15.0 includes a fix for CVE-2021-22570: Nullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr."
117,protobuf,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2022-1941,"<3.18.3,>=3.19.0rc0,<3.19.5,>=3.20.0rc0,<3.20.2,>=4.0.0rc0,<4.21.6","A parsing vulnerability for the MessageSet type in the ProtocolBuffers versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 3.21.5 for protobuf-cpp, and versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 4.21.5 for protobuf-python can lead to out of memory failures. A specially crafted message with multiple key-value per elements creates parsing issues, and can lead to a Denial of Service against services receiving unsanitized input. We recommend upgrading to versions 3.18.3, 3.19.5, 3.20.2, 3.21.6 for protobuf-cpp and 3.18.3, 3.19.5, 3.20.2, 4.21.6 for protobuf-python. Versions for 3.16 and 3.17 are no longer updated."
118,protobuf,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2015-5237,<3.4.0,"Protobuf 3.4.0 includes a fix for CVE-2015-5237: Integer overflow in serialization.
https://github.com/protocolbuffers/protobuf/issues/760"
119,google-api-python-client,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
120,python-dateutil,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
121,jira,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
122,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2017-18342,<4,Pyyaml before 4 uses ``yaml.load`` which has been assigned CVE-2017-18342.
123,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2020-1747,<5.3.1,"Pyyaml 5.3.1 includes a fix for CVE-2020-1747: A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
124,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
125,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
126,redis,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2023-28858,"<4.3.6,>=4.4.0rc1,<4.4.3,>=4.5.0rc1,<4.5.3","Redis before 4.5.3 leaves a connection open after canceling an async Redis command at an inopportune time, and can send response data to the client of an unrelated request in an off-by-one manner. NOTE: this CVE Record was initially created in response to reports about ChatGPT, and 4.3.6, 4.4.3, and 4.5.3 were released (changing the behavior for pipeline operations); however, please see CVE-2023-28859 about addressing data leakage across AsyncIO connections in general."
127,redis,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2023-28859,"<4.4.4,>=4.5.0rc0,<4.5.4","Redis 4.4.4 and 4.5.4 include a fix for CVE-2023-28859: Redis-py before 4.4.4 and 4.5.x before 4.5.4 leaves a connection open after canceling an async Redis command at an inopportune time, and can send response data to the client of an unrelated request. (This could, for example, happen for a non-pipeline operation.) NOTE: the solutions for CVE-2023-28859 address data leakage across AsyncIO connections in general."
128,pyOpenSSL,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2013-4314,<0.13.1,"The X509Extension in pyOpenSSL before 0.13.1 does not properly handle a '\0' character in a domain name in the Subject Alternative Name field of an X.509 certificate, which allows man-in-the-middle attackers to spoof arbitrary SSL servers via a crafted certificate issued by a legitimate Certification Authority."
129,pyOpenSSL,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2018-1000807,">=0.14,<17.5.0","Pyopenssl 17.5.0 includes a fix for CVE-2018-1000807: Use After Free vulnerability in X509 object handling that can possibly lead to denial of service or remote code execution. This attack appears to be exploitable via Depends on the calling application and if it retains a reference to the memory.
https://github.com/pyca/pyopenssl/pull/723"
130,pyOpenSSL,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2018-1000808,">=0.14,<17.5.0","Pyopenssl 17.5.0 includes a fix for CVE-2018-1000808: Failure to Release Memory Before Removing Last Reference vulnerability in PKCS #12 store that can result in denial-of-service if memory runs low or is exhausted. This attack appears to be exploitable via Depends upon calling application, however it could be as simple as initiating a TLS connection. Anything that would cause the calling application to reload certificates from a PKCS #12 store.
https://github.com/pyca/pyopenssl/pull/723"
131,PyJWT,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,PVE-2021-39458,<1.0.0,"Pyjwt 1.0.0 includes a security fix: 'alg=None' header could bypass signature verification.
https://github.com/jpadilla/pyjwt/pull/109"
132,PyJWT,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2017-11424,<1.5.1,"In PyJWT 1.5.0 and below the `invalid_strings` check in `HMACAlgorithm.prepare_key` does not account for all PEM encoded public keys. Specifically, the PKCS1 PEM encoded format would be allowed because it is prefaced with the string `-----BEGIN RSA PUBLIC KEY-----` which is not accounted for. This enables symmetric/asymmetric key confusion attacks against users using the PKCS1 PEM encoded public keys, which would allow an attacker to craft JWTs from scratch."
133,PyJWT,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2022-29217,">=1.5.0,<2.4.0","PyJWT 2.4.0 includes a fix for CVE-2022-29217: An attacker submitting the JWT token can choose the used signing algorithm. The PyJWT library requires that the application chooses what algorithms are supported. The application can specify 'jwt.algorithms.get_default_algorithms()' to get support for all algorithms, or specify a single algorithm. The issue is not that big as 'algorithms=jwt.algorithms.get_default_algorithms()' has to be used. As a workaround, always be explicit with the algorithms that are accepted and expected when decoding."
134,antlr4-python3-runtime,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
135,google-cloud-logging,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
136,mozprocess,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
137,requests-toolbelt,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
138,Jinja2,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2020-28493,<2.11.3,"This affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the '_punctuation_re regex' operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory."
139,Jinja2,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2014-1402,<2.7.2,"Jinja2 2.7.2 includes a fix for CVE-2014-1402: The default configuration for bccache.FileSystemBytecodeCache in Jinja2 before 2.7.2 does not properly create temporary files, which allows local users to gain privileges via a crafted .cache file with a name starting with __jinja2_ in /tmp."
140,Jinja2,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2016-10745,<2.8.1,Jinja2 2.8.1 sandboxes format expressions with the same rules as in Jinja if the sandbox mode is used. This solves various information leakage problems that could occur with format strings.
141,Jinja2,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2019-10906,">=0,<2.10.1","In Pallets Jinja before 2.10.1, str.format_map allows a sandbox escape."
142,Jinja2,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2014-0012,">=0,<2.7.3","FileSystemBytecodeCache in Jinja2 2.7.2 does not properly create temporary directories, which allows local users to gain privileges by pre-creating a temporary directory with a user's uid.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-1402."
143,google-auth,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
144,httplib2,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2020-11078,<0.18.0,"In httplib2 before version 0.18.0, an attacker controlling unescaped part of uri for `httplib2.Http.request()` could change request headers and body, send additional hidden requests to same server. This vulnerability impacts software that uses httplib2 with uri constructed by string concatenation, as opposed to proper urllib building with escaping. This has been fixed in 0.18.0. See CVE-2020-11078."
145,httplib2,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2021-21240,<0.19.0,"httplib2 is a comprehensive HTTP client library for Python. In httplib2 before version 0.19.0, a malicious server which responds with long series of ""\xa0"" characters in the ""www-authenticate"" header may cause Denial of Service (CPU burn while parsing header) of the httplib2 client accessing said server. This is fixed in version 0.19.0 which contains a new implementation of auth headers parsing using the pyparsing library. See CVE-2021-21240."
146,httplib2,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,PVE-2021-25848,<=0.9.2,"httplib2 before and including 0.9.2 on ""SSL certificate hostname mismatch"" it is checked only once: https://github.com/httplib2/httplib2/issues/5"
147,httplib2,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2013-2037,">=0,<0.9","httplib2 0.7.2, 0.8, and earlier, after an initial connection is made, does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate."
148,markupsafe,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
149,grpcio,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2017-7860,<1.2.0,"Grpcio 1.2.0 includes a fix for CVE-2017-7860: Google gRPC before 2017-02-22 has an out-of-bounds write caused by a heap-based buffer overflow related to the parse_unix function in core/ext/client_channel/parse_address.c.
https://github.com/grpc/grpc/pull/9833/commits/bcd5f12e4bca2ed2c00cddb5ffd046aef6f4fb31"
150,grpcio,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2017-7861,<1.2.0,"Grpcio 1.2.0 includes a fix for CVE-2017-7861: Google gRPC before 2017-02-22 has an out-of-bounds write related to the gpr_free function in core/lib/support/alloc.c.
https://github.com/grpc/grpc/pull/9833/commits/bcd5f12e4bca2ed2c00cddb5ffd046aef6f4fb31"
151,grpcio,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2017-8359,<1.3.0,"Grpcio 1.3.0 includes a fix for CVE-2017-8359: Google gRPC before 2017-03-29 has an out-of-bounds write caused by a heap-based use-after-free related to the grpc_call_destroy function in core/lib/surface/call.c.
https://github.com/grpc/grpc/pull/10353/commits/aab6992c006be6fb80df73fd9f218365099c016d"
152,grpcio,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,CVE-2017-9431,<1.3.0,"Grpcio 1.3.0 includes a fix for CVE-2017-9431: Google gRPC before 2017-04-05 has an out-of-bounds write caused by a heap-based buffer overflow related to core/lib/iomgr/error.c.
https://github.com/grpc/grpc/pull/10492/commits/c6ec1155d026c91b1badb07ef1605bb747cff064"
153,pytz,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
154,google-cloud-monitoring,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
155,pygithub,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
156,itsdangerous,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
157,google-cloud-batch,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/Pipfile,False,no one,no one,no one
158,google-api-python-client,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,no one,no one,no one
159,google-auth,>=1.22.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,no one,no one,no one
160,google-auth-oauthlib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,no one,no one,no one
161,google-cloud-core,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,no one,no one,no one
162,google-cloud-datastore,==1.12.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,no one,no one,no one
163,google-cloud-logging,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,no one,no one,no one
164,google-cloud-monitoring,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,no one,no one,no one
165,google-cloud-ndb,<2.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,no one,no one,no one
166,google-cloud-storage,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,no one,no one,no one
167,grpcio,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2017-7860,<1.2.0,"Grpcio 1.2.0 includes a fix for CVE-2017-7860: Google gRPC before 2017-02-22 has an out-of-bounds write caused by a heap-based buffer overflow related to the parse_unix function in core/ext/client_channel/parse_address.c.
https://github.com/grpc/grpc/pull/9833/commits/bcd5f12e4bca2ed2c00cddb5ffd046aef6f4fb31"
168,grpcio,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2017-7861,<1.2.0,"Grpcio 1.2.0 includes a fix for CVE-2017-7861: Google gRPC before 2017-02-22 has an out-of-bounds write related to the gpr_free function in core/lib/support/alloc.c.
https://github.com/grpc/grpc/pull/9833/commits/bcd5f12e4bca2ed2c00cddb5ffd046aef6f4fb31"
169,grpcio,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2017-8359,<1.3.0,"Grpcio 1.3.0 includes a fix for CVE-2017-8359: Google gRPC before 2017-03-29 has an out-of-bounds write caused by a heap-based use-after-free related to the grpc_call_destroy function in core/lib/surface/call.c.
https://github.com/grpc/grpc/pull/10353/commits/aab6992c006be6fb80df73fd9f218365099c016d"
170,grpcio,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2017-9431,<1.3.0,"Grpcio 1.3.0 includes a fix for CVE-2017-9431: Google gRPC before 2017-04-05 has an out-of-bounds write caused by a heap-based buffer overflow related to core/lib/iomgr/error.c.
https://github.com/grpc/grpc/pull/10492/commits/c6ec1155d026c91b1badb07ef1605bb747cff064"
171,httplib2,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2020-11078,<0.18.0,"In httplib2 before version 0.18.0, an attacker controlling unescaped part of uri for `httplib2.Http.request()` could change request headers and body, send additional hidden requests to same server. This vulnerability impacts software that uses httplib2 with uri constructed by string concatenation, as opposed to proper urllib building with escaping. This has been fixed in 0.18.0. See CVE-2020-11078."
172,httplib2,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2021-21240,<0.19.0,"httplib2 is a comprehensive HTTP client library for Python. In httplib2 before version 0.19.0, a malicious server which responds with long series of ""\xa0"" characters in the ""www-authenticate"" header may cause Denial of Service (CPU burn while parsing header) of the httplib2 client accessing said server. This is fixed in version 0.19.0 which contains a new implementation of auth headers parsing using the pyparsing library. See CVE-2021-21240."
173,httplib2,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,PVE-2021-25848,<=0.9.2,"httplib2 before and including 0.9.2 on ""SSL certificate hostname mismatch"" it is checked only once: https://github.com/httplib2/httplib2/issues/5"
174,httplib2,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2013-2037,">=0,<0.9","httplib2 0.7.2, 0.8, and earlier, after an initial connection is made, does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate."
175,mozprocess,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,no one,no one,no one
176,oauth2client,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,no one,no one,no one
177,protobuf,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2021-22570,<3.15.0,"Protobuf 3.15.0 includes a fix for CVE-2021-22570: Nullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr."
178,protobuf,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2022-1941,"<3.18.3,>=3.19.0rc0,<3.19.5,>=3.20.0rc0,<3.20.2,>=4.0.0rc0,<4.21.6","A parsing vulnerability for the MessageSet type in the ProtocolBuffers versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 3.21.5 for protobuf-cpp, and versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 4.21.5 for protobuf-python can lead to out of memory failures. A specially crafted message with multiple key-value per elements creates parsing issues, and can lead to a Denial of Service against services receiving unsanitized input. We recommend upgrading to versions 3.18.3, 3.19.5, 3.20.2, 3.21.6 for protobuf-cpp and 3.18.3, 3.19.5, 3.20.2, 4.21.6 for protobuf-python. Versions for 3.16 and 3.17 are no longer updated."
179,protobuf,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2015-5237,<3.4.0,"Protobuf 3.4.0 includes a fix for CVE-2015-5237: Integer overflow in serialization.
https://github.com/protocolbuffers/protobuf/issues/760"
180,psutil,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2019-18874,<=5.6.5,psutil (aka python-psutil) through 5.6.5 can have a double free. This occurs because of refcount mishandling within a while or for loop that converts system data into a Python object. See CVE-2019-18874.
181,pytz,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,no one,no one,no one
182,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2017-18342,<4,Pyyaml before 4 uses ``yaml.load`` which has been assigned CVE-2017-18342.
183,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2020-1747,<5.3.1,"Pyyaml 5.3.1 includes a fix for CVE-2020-1747: A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
184,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
185,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
186,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2014-1830,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. This fixes CVE-2014-1830.
187,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2014-1829,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. See: CVE-2014-1829.
188,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2018-18074,<=2.19.1,"Requests before 2.20.0 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
189,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
190,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
191,six,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/clusterfuzz/src/setup.py,False,no one,no one,no one
