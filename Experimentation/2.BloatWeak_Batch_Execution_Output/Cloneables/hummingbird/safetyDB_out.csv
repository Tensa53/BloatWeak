,dep,version,filepath,bloated,cve,affected versions,advisory
0,flake8,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,no one,no one,no one
1,pytest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,no one,no one,no one
2,coverage,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,no one,no one,no one
3,pre-commit,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2017-18342,<1.10.4,"Pre-commit 1.10.4 replaces 'yaml.load' with safe alternative to avoid a remote code execution vulnerability.
https://github.com/pre-commit/pre-commit/commit/6853f4aa4c8d7e411839bacc66876baea443186a"
4,pyspark,>=2.4.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2020-9480,">=0,<2.4.6","In Apache Spark 2.4.5 and earlier, a standalone resource manager's master may be configured to require authentication (spark.authenticate) via a shared secret. When enabled, however, a specially-crafted RPC to the master can succeed in starting an application's resources on the Spark cluster, even without the shared key. This can be leveraged to execute shell commands on the host machine. This does not affect Spark clusters using other resource managers (YARN, Mesos, etc)."
5,pyspark,>=2.4.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2021-38296,">=0,<3.1.3","Apache Spark supports end-to-end encryption of RPC connections via ""spark.authenticate"" and ""spark.network.crypto.enabled"". In versions 3.1.2 and earlier, it uses a bespoke mutual authentication protocol that allows for full encryption key recovery. After an initial interactive attack, this would allow someone to decrypt plaintext traffic offline. Note that this does not affect security mechanisms controlled by ""spark.authenticate.enableSaslEncryption"", ""spark.io.encryption.enabled"", ""spark.ssl"", ""spark.ui.strictTransportSecurity"". Update to Apache Spark 3.1.3 or later"
6,pyspark,>=2.4.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2022-31777,">=0,<3.2.2","A stored cross-site scripting (XSS) vulnerability in Apache Spark 3.2.1 and earlier, and 3.3.0, allows remote attackers to execute arbitrary JavaScript in the web browser of a user, by including a malicious payload into the logs which would be returned in logs rendered in the UI."
7,pyspark,>=2.4.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2018-1334,">=2.2.0,<2.2.2,>=0,<2.1.3","In Apache Spark 1.0.0 to 2.1.2, 2.2.0 to 2.2.1, and 2.3.0, when using PySpark or SparkR, it's possible for a different local user to connect to the Spark application and impersonate the user running the Spark application."
8,pyspark,>=2.4.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2018-11760,">=2.3.0,<2.3.2,>=1.0.2,<2.2.3","When using PySpark , it's possible for a different local user to connect to the Spark application and impersonate the user running the Spark application. This affects versions 1.x, 2.0.x, 2.1.x, 2.2.0 to 2.2.2, and 2.3.0 to 2.3.1."
9,pyspark,>=2.4.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2022-33891,">=3.2.0,<3.2.2,>=3.1.1,<3.1.3,<=3.0.3","Pyspark 3.1.3 and 3.2.2 includes a fix for CVE-2022-33891: The Apache Spark UI offers the possibility to enable ACLs via the configuration option spark.acls.enable. With an authentication filter, this checks whether a user has access permissions to view or modify the application. If ACLs are enabled, a code path in HttpSecurityFilter can allow someone to perform impersonation by providing an arbitrary user name. A malicious user might then be able to reach a permission check function that will ultimately build a Unix shell command based on their input, and execute it. This will result in arbitrary shell command execution as the user Spark is currently running as. This affects Apache Spark versions 3.0.3 and earlier, versions 3.1.1 to 3.1.2, and versions 3.2.0 to 3.2.1."
10,pyarrow,>1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2019-12410,">=0.12.0,<=0.14.1","While investigating UBSAN errors in https://github.com/apache/arrow/pull/5365 it was discovered Apache Arrow versions 0.12.0 to 0.14.1 left memory Array data uninitialized when reading RLE null data from parquet. This affected the C++, Python, Ruby and R implementations. The uninitialized memory could potentially be shared if are transmitted over the wire (for instance with Flight) or persisted in the streaming IPC and file formats."
11,pyarrow,>1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2019-12408,">=0.14.0,<=0.14.1","It was discovered that the C++ implementation (which underlies the R, Python and Ruby implementations) of Apache Arrow 0.14.0 to 0.14.1 had a uninitialized memory bug when building arrays with null values in some cases. This can lead to uninitialized memory being unintentionally shared if Arrow Arrays are transmitted over the wire (for instance with Flight) or persisted in the streaming IPC and file formats."
12,memory-profiler,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,no one,no one,no one
13,psutil,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2019-18874,<=5.6.5,psutil (aka python-psutil) through 5.6.5 can have a double free. This occurs because of refcount mishandling within a while or for loop that converts system data into a Python object. See CVE-2019-18874.
14,numpy,>=1.15,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
15,numpy,>=1.15,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
16,numpy,>=1.15,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
17,numpy,>=1.15,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
18,numpy,>=1.15,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
19,onnxconverter-common,>=1.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,no one,no one,no one
20,scipy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
21,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
22,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
23,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
24,torch,>1.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
25,dill,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,no one,no one,no one
26,protobuf,>=3.20.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,True,CVE-2022-1941,"<3.18.3,>=3.19.0rc0,<3.19.5,>=3.20.0rc0,<3.20.2,>=4.0.0rc0,<4.21.6","A parsing vulnerability for the MessageSet type in the ProtocolBuffers versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 3.21.5 for protobuf-cpp, and versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 4.21.5 for protobuf-python can lead to out of memory failures. A specially crafted message with multiple key-value per elements creates parsing issues, and can lead to a Denial of Service against services receiving unsanitized input. We recommend upgrading to versions 3.18.3, 3.19.5, 3.20.2, 3.21.6 for protobuf-cpp and 3.18.3, 3.19.5, 3.20.2, 4.21.6 for protobuf-python. Versions for 3.16 and 3.17 are no longer updated."
27,onnxruntime,>=1.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2022-1941,<1.13.1,Onnxruntime 1.13.1 updates 'protobuf' to v3.18.3 to include a security fix.
28,onnxruntime,>=1.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,CVE-2022-25882,<1.13.1,"Onnxruntime 1.13.1 updates 'onnx' to v1.12.1 to fix a vulnerability that allows reading of tensor_data outside the model directory.
https://github.com/microsoft/onnxruntime/pull/12915"
29,onnxmltools,">=1.6.0,<=1.11.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,no one,no one,no one
30,skl2onnx,>=1.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,no one,no one,no one
31,xgboost,>=0.90,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,no one,no one,no one
32,lightgbm,">=2.2,<=3.3.5",/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,no one,no one,no one
33,holidays,==0.24,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,no one,no one,no one
34,prophet,==1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/hummingbird/setup.py,False,no one,no one,no one
