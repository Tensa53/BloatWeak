,dep,version,filepath,bloated,cve,affected versions,advisory
0,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
1,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
2,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
3,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
4,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
5,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
6,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
7,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
8,pyqrcode,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,no one,no one,no one
9,qgrid,==1.3.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,no one,no one,no one
10,subsurface,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,no one,no one,no one
11,welly,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,no one,no one,no one
12,pyvistaqt,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,no one,no one,no one
13,pymc,>=4.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,no one,no one,no one
14,mplstereonet,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,no one,no one,no one
15,arviz,>=0.12.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/optional-requirements.txt,False,no one,no one,no one
16,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/dev-requirements.txt,False,CVE-2014-1830,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. This fixes CVE-2014-1830.
17,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/dev-requirements.txt,False,CVE-2014-1829,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. See: CVE-2014-1829.
18,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/dev-requirements.txt,False,CVE-2018-18074,<=2.19.1,"Requests before 2.20.0 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
19,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/dev-requirements.txt,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
20,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/dev-requirements.txt,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
21,emg3d,==0.11.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/dev-requirements.txt,False,no one,no one,no one
22,ipywidgets,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/dev-requirements.txt,False,PVE-2022-50664,<8.0.0,"Ipywidgets 8.0.0 sanitizes descriptions by default.
https://github.com/jupyter-widgets/ipywidgets/pull/2785"
23,ipywidgets,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/dev-requirements.txt,False,PVE-2022-50463,<8.0.0rc2,"Ipywidgets 8.0.0rc2 makes descriptions plaintext by default for security.
https://github.com/jupyter-widgets/ipywidgets/pull/2785"
24,welly,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/dev-requirements.txt,False,no one,no one,no one
25,sphinx,==3.5.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/dev-requirements.txt,False,no one,no one,no one
26,pooch,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/dev-requirements.txt,False,no one,no one,no one
27,sphinx_gallery,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/dev-requirements.txt,False,no one,no one,no one
28,pandas,==2.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
29,aesara,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,no one,no one,no one
30,pymc,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,no one,no one,no one
31,matplotlib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,no one,no one,no one
32,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
33,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
34,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
35,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
36,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
37,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
38,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
39,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
40,pytest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,no one,no one,no one
41,seaborn,>=0.9,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,no one,no one,no one
42,networkx,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,True,no one,no one,no one
43,scikit-image,>=0.17,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,no one,no one,no one
44,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
45,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
46,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
47,pyvista,==0.39.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,no one,no one,no one
48,pyvistaqt,==0.10.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,no one,no one,no one
49,pyqt5,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,no one,no one,no one
50,iPython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2015-4707,<3.2.0,Cross-site scripting (XSS) vulnerability in IPython before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/notebooks path.
51,iPython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2015-5607,<3.2.1,"Ipython 3.2.1 includes a fix for CVE-2015-5607: Cross-site request forgery in the REST API in IPython 2 and 3.
https://github.com/ipython/ipython/commit/1415a9710407e7c14900531813c15ba6165f0816"
52,iPython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2015-6938,<3.2.2,"Cross-site scripting (XSS) vulnerability in the file browser in notebook/notebookapp.py in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to inject arbitrary web script or HTML via a folder name.  NOTE: this was originally reported as a cross-site request forgery (CSRF) vulnerability, but this may be inaccurate."
53,iPython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2015-7337,<3.2.2,"The editor in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to execute arbitrary JavaScript code via a crafted file, which triggers a redirect to files/, related to MIME types."
54,iPython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2023-24816,<8.10.0,"IPython 8.10.0 includes a fix for CVE-2023-24816: Versions prior to 8.10.0 are subject to a command injection vulnerability with very specific prerequisites. This vulnerability requires that the function 'IPython.utils.terminal.set_term_title' be called on Windows in a Python environment where ctypes is not available. The dependency on 'ctypes' in 'IPython.utils._process_win32' prevents the vulnerable code from ever being reached in the ipython binary. However, as a library that could be used by another tool 'set_term_title' could be called and hence introduce a vulnerability. If an attacker get untrusted input to an instance of this function they would be able to inject shell commands as current process and limited to the scope of the current process. As a workaround, users should ensure that any calls to the 'IPython.utils.terminal.set_term_title' function are done with trusted or filtered input.
https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7"
55,iPython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2014-3429,">=0.12,<1.2","IPython Notebook 0.12 through 1.x before 1.2 does not validate the origin of websocket requests, which allows remote attackers to execute arbitrary code by leveraging knowledge of the kernel id and a crafted page."
56,iPython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2016-6524,">=2.0.0,<4.0.0",Ipython 4.0 includes a fix for CVE-2016-6524: Untrusted LaTeX output could be added to the page in a way that could execute javascript.
57,iPython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2015-4706,">=3.0.0,<3.2.0",Cross-site scripting (XSS) vulnerability in IPython 3.x before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/contents path.
58,iPython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,CVE-2022-21699,">=8.0.0a0,<8.0.1,>=7.17.0,<7.31.1,>=6.0.0a0,<7.16.3,<5.11","Ipython versions 8.0.1, 7.31.1, 7.16.3 and 5.11 include a fix for CVE-2022-21699: Affected versions are subject to an arbitrary code execution vulnerability achieved by not properly managing cross user temporary files. This vulnerability allows one user to run code as another on the same machine.
https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x"
59,xarray,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gempy/setup.py,False,no one,no one,no one
