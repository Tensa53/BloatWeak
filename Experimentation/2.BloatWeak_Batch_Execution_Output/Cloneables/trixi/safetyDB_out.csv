,dep,version,filepath,bloated,cve,affected versions,advisory
0,python-telegram-bot,>=10.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements_full.txt,False,no one,no one,no one
1,tensorboard,>=2.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements_full.txt,False,no one,no one,no one
2,slackclient,>=1.3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements_full.txt,False,no one,no one,no one
3,umap-learn,>=0.3.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements_full.txt,False,no one,no one,no one
4,scikit-learn,>=0.20.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements_full.txt,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
5,scikit-learn,>=0.20.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements_full.txt,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
6,scikit-learn,>=0.20.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements_full.txt,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
7,torchvision,>=0.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements_full.txt,False,no one,no one,no one
8,torch,>=1.3.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements_full.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
9,scipy,>=0.19.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
10,seaborn,>=0.8.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,no one,no one,no one
11,portalocker,>=1.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,no one,no one,no one
12,matplotlib,>=3.3.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,no one,no one,no one
13,Flask,>=0.12.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2019-1010083,<0.12.3,"Flask 0.12.3 includes a fix for CVE-2019-1010083: Unexpected memory usage. The impact is denial of service. The attack vector is crafted encoded JSON data. NOTE: this may overlap CVE-2018-1000656.
https://github.com/pallets/flask/pull/2695/commits/0e1e9a04aaf29ab78f721cfc79ac2a691f6e3929"
14,Flask,>=0.12.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2018-1000656,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.
15,Flask,>=0.12.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2023-30861,"<2.2.5,>=2.3.0,<2.3.2","Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches 'Set-Cookie' headers, it may send one client's 'session' cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets 'session.permanent = True'
3. The application does not access or modify the session at any point during a request.
4. 'SESSION_REFRESH_EACH_REQUEST' enabled (the default).
5. The application does not set a 'Cache-Control' header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the 'Vary: Cookie' header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5."
16,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2014-3589,"<2.3.2,>=2.5.0,<2.5.2","Pillow versions 2.3.2 and 2.5.2 include a fix for CVE-2014-3589: PIL/IcnsImagePlugin.py in Python Imaging Library (PIL) and Pillow before 2.3.2 and 2.5.x before 2.5.2 allows remote attackers to cause a denial of service via a crafted block size.
https://github.com/python-pillow/Pillow/commit/205e056f8f9b06ed7b925cf8aa0874bc4aaf8a7d"
17,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2019-16865,<6.2.0,"Pillow 6.2.0 includes a fix for CVE-2019-16865: An issue was discovered in Pillow before 6.2.0. When reading specially crafted invalid image files, the library can either allocate very large amounts of memory or take an extremely long period of time to process the image."
18,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2020-5310,<6.2.2,"libImaging/TiffDecode.c in Pillow before 6.2.2 has a TIFF decoding integer overflow, related to realloc."
19,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2020-5311,<6.2.2,libImaging/SgiRleDecode.c in Pillow before 6.2.2 has an SGI buffer overflow.
20,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2020-5313,<6.2.2,libImaging/FliDecode.c in Pillow before 6.2.2 has an FLI buffer overflow.
21,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2020-5312,<6.2.2,libImaging/PcxDecode.c in Pillow before 6.2.2 has a PCX P mode buffer overflow.
22,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2019-19911,<6.2.2,"There is a DoS vulnerability in Pillow before 6.2.2 caused by FpxImagePlugin.py calling the range function on an unvalidated 32-bit integer if the number of bands is large. On Windows running 32-bit Python, this results in an OverflowError or MemoryError due to the 2 GB limit. However, on Linux running 64-bit Python this results in the process being terminated by the OOM killer."
23,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2020-10177,<7.1.0,Pillow before 7.1.0 has multiple out-of-bounds reads in libImaging/FliDecode.c.
24,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2020-10994,<7.1.0,"In libImaging/Jpeg2KDecode.c in Pillow before 7.1.0, there are multiple out-of-bounds reads via a crafted JP2 file."
25,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2020-10379,<7.1.0,"In Pillow before 7.1.0, there are two Buffer Overflows in libImaging/TiffDecode.c."
26,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2020-10378,<7.1.0,"In libImaging/PcxDecode.c in Pillow before 7.1.0, an out-of-bounds read can occur when reading PCX files where state->shuffle is instructed to read beyond state->buffer."
27,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2020-15999,<8.0.1,Pillow 8.0.1 updates 'FreeType' used in binary wheels to v2.10.4 to include a security fix.
28,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2020-35654,<8.1.0,Pillow 8.1.0 fixes TIFF OOB Write error. CVE-2020-35654 #5175.
29,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2020-35653,<8.1.0,"In Pillow before 8.1.0, PcxDecode has a buffer over-read when decoding a crafted PCX file because the user-supplied stride value is trusted for buffer calculations."
30,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2020-35655,<8.1.0,Pillow 8.1.0 includes a fix for SGI Decode buffer overrun. CVE-2020-35655 #5173.
31,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-25289,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25289: TiffDecode has a heap-based buffer overflow when decoding crafted YCbCr files because of certain interpretation conflicts with LibTIFF in RGBA mode. NOTE: this issue exists because of an incomplete fix for CVE-2020-35654.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
32,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-25290,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25290: In TiffDecode.c, there is a negative-offset memcpy with an invalid size.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
33,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-27922,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-27922: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICNS container, and thus an attempted memory allocation can be very large.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
34,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-25291,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25291: In TiffDecode.c, there is an out-of-bounds read in TiffreadRGBATile via invalid tile boundaries.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
35,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-27921,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-27921: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
36,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-25293,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25293: There is an out-of-bounds read in SGIRleDecode.c.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
37,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-25292,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25292: The PDF parser allows a regular expression DoS (ReDoS) attack via a crafted PDF file because of a catastrophic backtracking regex.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
38,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-25288,<8.2.0,"Pillow 8.2.0 includes a fix for CVE-2021-25288: There is an out-of-bounds read in J2kDecode, in j2ku_gray_i.
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-25287-cve-2021-25288-fix-oob-read-in-jpeg2kdecode"
39,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-28677,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28677: For EPS data, the readline implementation used in EPSImageFile has to deal with any combination of \r and \n as line endings. It used an accidentally quadratic method of accumulating lines while looking for a line ending. A malicious EPS file could use this to perform a DoS of Pillow in the open phase, before an image was accepted for opening.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28677-fix-eps-dos-on-open"
40,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-28678,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28678: For BLP data, BlpImagePlugin did not properly check that reads (after jumping to file offsets) returned data. This could lead to a DoS where the decoder could be run a large number of times on empty data.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28678-fix-blp-dos"
41,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-28676,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28676: For FLI data, FliDecode did not properly check that the block advance was non-zero, potentially leading to an infinite loop on load.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28676-fix-fli-dos"
42,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-25287,<8.2.0,"Pillow 8.2.0 includes a fix for CVE-2021-25287: There is an out-of-bounds read in J2kDecode, in j2ku_graya_la.
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-25287-cve-2021-25288-fix-oob-read-in-jpeg2kdecode"
43,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-34552,<8.3.0,"Pillow 8.3.0 includes a fix for CVE-2021-34552: Pillow through 8.2.0 and PIL (also known as Python Imaging Library) through 1.1.7 allow an attacker to pass controlled parameters directly into a convert function to trigger a buffer overflow in Convert.c
https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html#buffer-overflow
https://pillow.readthedocs.io/en/stable/releasenotes/index.html"
44,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2022-22816,<9.0.0,"Pillow 9.0.0 includes a fix for CVE-2022-22816: path_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling"
45,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,PVE-2021-44525,<9.0.0,"Pillow 9.0.0 excludes carriage return in PDF regex to help prevent ReDoS.
https://github.com/python-pillow/Pillow/pull/5912
https://github.com/python-pillow/Pillow/commit/43b800d933c996226e4d7df00c33fcbe46d97363"
46,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,PVE-2022-44524,<9.0.0,"Pillow 9.0.0 ensures JpegImagePlugin stops at the end of a truncated file to avoid Denial of Service attacks.
https://github.com/python-pillow/Pillow/pull/5921
https://github.com/advisories/GHSA-4fx9-vc88-q2xc"
47,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2022-22815,<9.0.0,"Pillow 9.0.0 includes a fix for CVE-2022-22815: path_getbbox in path.c in Pillow before 9.0.0 improperly initializes ImagePath.Path.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling"
48,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2022-24303,<9.0.1,Pillow before 9.0.1 allows attackers to delete files because spaces in temporary pathnames are mishandled.
49,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2022-22817,<9.0.1,"Pillow 9.0.1 includes a fix for CVE-2022-22817: PIL.ImageMath.eval in Pillow before 9.0.0 allows evaluation of arbitrary expressions, such as ones that use the Python exec method. A first patch was issued for version 9.0.0 but it did not prevent builtins available to lambda expressions.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html#security"
50,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2022-45198,<9.2.0,Pillow before 9.2.0 performs Improper Handling of Highly Compressed GIF Data (Data Amplification).
51,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2020-11538,<=7.0.0,"In libImaging/SgiRleDecode.c in Pillow through 7.0.0, a number of out-of-bounds reads exist in the parsing of SGI image files, a different issue than CVE-2020-5311."
52,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-28675,">=0,<8.2.0",An issue was discovered in Pillow before 8.2.0. PSDImagePlugin.PsdImageFile lacked a sanity check on the number of input layers relative to the size of the data block. This could lead to a DoS on Image.open prior to Image.load.
53,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-27923,">=4.3.0,<8.1.1","Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large."
54,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-23437,">=5.2.0,<8.3.2","Pillow from 5.2.0 and before 8.3.2 is vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function.
https://github.com/python-pillow/Pillow/commit/9e08eb8f78fdfd2f476e1b20b7cf38683754866b
https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html"
55,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2022-30595,">=9.1.0,<9.1.1",libImaging/TgaRleDecode.c in Pillow 9.1.0 has a heap buffer overflow in the processing of invalid TGA image files.
56,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,PVE-2023-55182,">=9.1.0,<9.3.0","Pillow 9.3.0 includes a security fix: Pillow will now decode the data in its natural CMYK mode, then convert it to RGB and rearrange the channels afterwards. Trying to load the data in an incorrect mode could result in a segmentation fault.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#decode-jpeg-compressed-blp1-data-in-original-mode"
57,Pillow,>=5.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2022-45199,">=9.2.0,<9.3.0","Pillow before 9.3.0 allows denial of service via SAMPLESPERPIXEL.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#limit-samplesperpixel-to-avoid-runtime-dos"
58,visdom,>=0.1.8.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,no one,no one,no one
59,numpy,>=1.14.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
60,numpy,>=1.14.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
61,numpy,>=1.14.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
62,numpy,>=1.14.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
63,numpy,>=1.14.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
64,pathos,>=0.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,no one,no one,no one
65,graphviz,>=0.8.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,no one,no one,no one
66,imageio,>=2.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,PVE-2021-37902,<2.6.0,"Imageio 2.6.0 fixes a code injection vulnerability for Windows users that have dcmtk installed, and where an attacker can set the filename.
https://github.com/imageio/imageio/commit/5b398716d518cd14e8b978ea3cd8ec6c0236c1d8"
67,plotly,>=2.5.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2019-10775,<4.8.2,"Plotly 4.8.2 includes plotly.js version 1.54.5, which contains a security fix of a transitive dependency (ecstatic)."
68,plotly,>=2.5.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,CVE-2020-7598,<4.9.0,Plotly 4.9.0 builds Javascript extensions using Node 12 with an updated 'package-lock.json' that has many fewer security warnings.
69,colorlover,>=0.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/requirements.txt,False,no one,no one,no one
70,python-telegram-bot,>=10.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/setup.py,False,no one,no one,no one
71,tensorboard,>=2.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/setup.py,False,no one,no one,no one
72,slackclient,>=1.3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/setup.py,False,no one,no one,no one
73,umap-learn,>=0.3.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/setup.py,False,no one,no one,no one
74,scikit-learn,>=0.20.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/setup.py,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
75,scikit-learn,>=0.20.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/setup.py,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
76,scikit-learn,>=0.20.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/setup.py,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
77,torchvision,>=0.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/setup.py,False,no one,no one,no one
78,torch,>=1.3.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/trixi/setup.py,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
