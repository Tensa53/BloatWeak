,dep,version,filepath,bloated,cve,affected versions,advisory
0,ufmt,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,no one,no one,no one
1,twine,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2018-18074,<2.0.0,Twine 2.0.0 updates requests to 2.20 (or later) to include a security fix.
2,pre-commit,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2017-18342,<1.10.4,"Pre-commit 1.10.4 replaces 'yaml.load' with safe alternative to avoid a remote code execution vulnerability.
https://github.com/pre-commit/pre-commit/commit/6853f4aa4c8d7e411839bacc66876baea443186a"
3,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2015-4707,<3.2.0,Cross-site scripting (XSS) vulnerability in IPython before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/notebooks path.
4,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2015-5607,<3.2.1,"Ipython 3.2.1 includes a fix for CVE-2015-5607: Cross-site request forgery in the REST API in IPython 2 and 3.
https://github.com/ipython/ipython/commit/1415a9710407e7c14900531813c15ba6165f0816"
5,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2015-6938,<3.2.2,"Cross-site scripting (XSS) vulnerability in the file browser in notebook/notebookapp.py in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to inject arbitrary web script or HTML via a folder name.  NOTE: this was originally reported as a cross-site request forgery (CSRF) vulnerability, but this may be inaccurate."
6,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2015-7337,<3.2.2,"The editor in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to execute arbitrary JavaScript code via a crafted file, which triggers a redirect to files/, related to MIME types."
7,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2023-24816,<8.10.0,"IPython 8.10.0 includes a fix for CVE-2023-24816: Versions prior to 8.10.0 are subject to a command injection vulnerability with very specific prerequisites. This vulnerability requires that the function 'IPython.utils.terminal.set_term_title' be called on Windows in a Python environment where ctypes is not available. The dependency on 'ctypes' in 'IPython.utils._process_win32' prevents the vulnerable code from ever being reached in the ipython binary. However, as a library that could be used by another tool 'set_term_title' could be called and hence introduce a vulnerability. If an attacker get untrusted input to an instance of this function they would be able to inject shell commands as current process and limited to the scope of the current process. As a workaround, users should ensure that any calls to the 'IPython.utils.terminal.set_term_title' function are done with trusted or filtered input.
https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7"
8,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2014-3429,">=0.12,<1.2","IPython Notebook 0.12 through 1.x before 1.2 does not validate the origin of websocket requests, which allows remote attackers to execute arbitrary code by leveraging knowledge of the kernel id and a crafted page."
9,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2016-6524,">=2.0.0,<4.0.0",Ipython 4.0 includes a fix for CVE-2016-6524: Untrusted LaTeX output could be added to the page in a way that could execute javascript.
10,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2015-4706,">=3.0.0,<3.2.0",Cross-site scripting (XSS) vulnerability in IPython 3.x before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/contents path.
11,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2022-21699,">=8.0.0a0,<8.0.1,>=7.17.0,<7.31.1,>=6.0.0a0,<7.16.3,<5.11","Ipython versions 8.0.1, 7.31.1, 7.16.3 and 5.11 include a fix for CVE-2022-21699: Affected versions are subject to an arbitrary code execution vulnerability achieved by not properly managing cross user temporary files. This vulnerability allows one user to run code as another on the same machine.
https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x"
12,jupyter,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,no one,no one,no one
13,matplotlib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,no one,no one,no one
14,scipy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
15,torchvision,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,no one,no one,no one
16,tqdm,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2016-10075,<4.11.2,The tqdm._version module in tqdm versions before 4.11.2 allows local users to execute arbitrary code via a crafted repo with a malicious git log in the current working directory.
17,pyro-ppl,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,no one,no one,no one
18,pykeops,>=1.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,no one,no one,no one
19,flake8,==4.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,no one,no one,no one
20,flake8-print,==4.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,no one,no one,no one
21,pytest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,no one,no one,no one
22,nbval,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,no one,no one,no one
23,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
24,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
25,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
26,linear_operator,>=0.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/setup.py,False,no one,no one,no one
27,torch,>=1.11,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
28,sphinx_rtd_theme,<0.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,no one,no one,no one
29,sphinx,<=6.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,no one,no one,no one
30,nbformat,<=5.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,no one,no one,no one
31,nbsphinx,<=0.9.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,no one,no one,no one
32,ipykernel,<=6.17.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,no one,no one,no one
33,sphinx_autodoc_typehints,<=1.23.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,no one,no one,no one
34,linear_operator,>=0.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,no one,no one,no one
35,m2r2,<=0.3.3.post2,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,no one,no one,no one
36,pyro-ppl,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,no one,no one,no one
37,platformdirs,<=3.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,no one,no one,no one
38,ipython,<=8.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,CVE-2023-24816,<8.10.0,"IPython 8.10.0 includes a fix for CVE-2023-24816: Versions prior to 8.10.0 are subject to a command injection vulnerability with very specific prerequisites. This vulnerability requires that the function 'IPython.utils.terminal.set_term_title' be called on Windows in a Python environment where ctypes is not available. The dependency on 'ctypes' in 'IPython.utils._process_win32' prevents the vulnerable code from ever being reached in the ipython binary. However, as a library that could be used by another tool 'set_term_title' could be called and hence introduce a vulnerability. If an attacker get untrusted input to an instance of this function they would be able to inject shell commands as current process and limited to the scope of the current process. As a workaround, users should ensure that any calls to the 'IPython.utils.terminal.set_term_title' function are done with trusted or filtered input.
https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7"
39,ipython,<=8.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,CVE-2014-3429,">=0.12,<1.2","IPython Notebook 0.12 through 1.x before 1.2 does not validate the origin of websocket requests, which allows remote attackers to execute arbitrary code by leveraging knowledge of the kernel id and a crafted page."
40,ipython,<=8.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,CVE-2016-6524,">=2.0.0,<4.0.0",Ipython 4.0 includes a fix for CVE-2016-6524: Untrusted LaTeX output could be added to the page in a way that could execute javascript.
41,ipython,<=8.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,CVE-2015-4706,">=3.0.0,<3.2.0",Cross-site scripting (XSS) vulnerability in IPython 3.x before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/contents path.
42,ipython,<=8.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,CVE-2022-21699,">=8.0.0a0,<8.0.1,>=7.17.0,<7.31.1,>=6.0.0a0,<7.16.3,<5.11","Ipython versions 8.0.1, 7.31.1, 7.16.3 and 5.11 include a fix for CVE-2022-21699: Affected versions are subject to an arbitrary code execution vulnerability achieved by not properly managing cross user temporary files. This vulnerability allows one user to run code as another on the same machine.
https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x"
43,nbclient,<=0.7.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,no one,no one,no one
44,setuptools_scm,<=7.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/gpytorch/docs/requirements.txt,False,no one,no one,no one
