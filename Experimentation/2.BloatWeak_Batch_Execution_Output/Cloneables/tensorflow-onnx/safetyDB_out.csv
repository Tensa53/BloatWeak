,dep,version,filepath,bloated,cve,affected versions,advisory
0,pytest-runner,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,no one,no one,no one
1,graphviz,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,no one,no one,no one
2,parameterized,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,no one,no one,no one
3,pytest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,no one,no one,no one
4,pytest-cov,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,no one,no one,no one
5,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2017-18342,<4,Pyyaml before 4 uses ``yaml.load`` which has been assigned CVE-2017-18342.
6,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2020-1747,<5.3.1,"Pyyaml 5.3.1 includes a fix for CVE-2020-1747: A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
7,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
8,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
9,timeout-decorator,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,no one,no one,no one
10,numpy,>=1.14.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
11,numpy,>=1.14.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
12,numpy,>=1.14.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
13,numpy,>=1.14.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
14,numpy,>=1.14.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
15,onnx,>=1.4.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2022-25882,<1.13.0,Onnx 1.13.0 includes a fix for CVE-2022-25882: Versions of the package onnx before 1.13.0 are vulnerable to Directory Traversal as the external_data field of the tensor proto can have a path to the file which is outside the model current directory or user-provided directory.
16,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2014-1830,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. This fixes CVE-2014-1830.
17,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2014-1829,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. See: CVE-2014-1829.
18,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2018-18074,<=2.19.1,"Requests before 2.20.0 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
19,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
20,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
21,six,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,no one,no one,no one
22,flatbuffers,"<3.0,>=1.12",/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,no one,no one,no one
23,protobuf,~=3.20.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/tensorflow-onnx/setup.py,False,CVE-2022-1941,"<3.18.3,>=3.19.0rc0,<3.19.5,>=3.20.0rc0,<3.20.2,>=4.0.0rc0,<4.21.6","A parsing vulnerability for the MessageSet type in the ProtocolBuffers versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 3.21.5 for protobuf-cpp, and versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 4.21.5 for protobuf-python can lead to out of memory failures. A specially crafted message with multiple key-value per elements creates parsing issues, and can lead to a Denial of Service against services receiving unsanitized input. We recommend upgrading to versions 3.18.3, 3.19.5, 3.20.2, 3.21.6 for protobuf-cpp and 3.18.3, 3.19.5, 3.20.2, 4.21.6 for protobuf-python. Versions for 3.16 and 3.17 are no longer updated."
