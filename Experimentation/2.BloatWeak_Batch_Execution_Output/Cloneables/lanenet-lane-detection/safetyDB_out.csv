,dep,version,filepath,bloated,cve,affected versions,advisory
0,loguru,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,CVE-2022-0338,">=0,<0.5.3",Improper Privilege Management in Conda loguru prior to 0.5.3.
1,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
2,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
3,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
4,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
5,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
6,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
7,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
8,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
9,scikit_learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,no one,no one,no one
10,matplotlib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,no one,no one,no one
11,opencv_contrib_python,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,no one,no one,no one
12,tqdm,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,CVE-2016-10075,<4.11.2,The tqdm._version module in tqdm versions before 4.11.2 allows local users to execute arbitrary code via a crafted repo with a malicious git log in the current working directory.
13,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,CVE-2017-18342,<4,Pyyaml before 4 uses ``yaml.load`` which has been assigned CVE-2017-18342.
14,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,CVE-2020-1747,<5.3.1,"Pyyaml 5.3.1 includes a fix for CVE-2020-1747: A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
15,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
16,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
17,tensorflow_gpu,==1.15.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/lanenet-lane-detection/requirements.txt,False,no one,no one,no one
