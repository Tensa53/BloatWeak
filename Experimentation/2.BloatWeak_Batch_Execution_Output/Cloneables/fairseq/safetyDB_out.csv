,dep,version,filepath,bloated,cve,affected versions,advisory
0,cffi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,True,no one,no one,no one
1,cython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,no one,no one,no one
2,hydra-core,">=1.0.7,<1.1",/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,no one,no one,no one
3,omegaconf,<2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,no one,no one,no one
4,numpy,>=1.21.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
5,numpy,>=1.21.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
6,numpy,>=1.21.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
7,regex,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,no one,no one,no one
8,sacrebleu,>=1.4.12,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,no one,no one,no one
9,torch,>=1.13,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
10,tqdm,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,CVE-2016-10075,<4.11.2,The tqdm._version module in tqdm versions before 4.11.2 allows local users to execute arbitrary code via a crafted repo with a malicious git log in the current working directory.
11,bitarray,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,no one,no one,no one
12,torchaudio,>=0.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,no one,no one,no one
13,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
14,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
15,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
16,packaging,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,no one,no one,no one
17,flake8,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,no one,no one,no one
18,pytest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,no one,no one,no one
19,black,==22.3.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,no one,no one,no one
20,sphinx,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,CVE-2020-11023,<3.0.4,Sphinx 3.0.4 updates jQuery version from 3.4.1 to 3.5.1 for security reasons.
21,sphinx,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,CVE-2020-11022,<3.0.4,Sphinx 3.0.4 updates jQuery version from 3.4.1 to 3.5.1 for security reasons.
22,sphinx-argparse,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/setup.py,False,no one,no one,no one
23,hydra-core,>=1.0.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/hydra_plugins/dependency_submitit_launcher/setup.py,False,no one,no one,no one
24,submitit,>=1.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/hydra_plugins/dependency_submitit_launcher/setup.py,False,no one,no one,no one
25,fairseq,==0.12.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/speech_to_speech/asr_bleu/requirements.txt,False,no one,no one,no one
26,torch,==1.12.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/speech_to_speech/asr_bleu/requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
27,sacrebleu,==2.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/speech_to_speech/asr_bleu/requirements.txt,False,no one,no one,no one
28,tqdm,==4.64.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/speech_to_speech/asr_bleu/requirements.txt,False,no one,no one,no one
29,torchaudio,==0.12.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/speech_to_speech/asr_bleu/requirements.txt,False,no one,no one,no one
30,pandas,==1.4.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/speech_to_speech/asr_bleu/requirements.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
31,transformers,==4.21.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/speech_to_speech/asr_bleu/requirements.txt,False,CVE-2022-1941,<4.23.0,Transformers 4.23.0 updates its dependency 'protobuf' requirement to '<=3.20.2' to include a security fix.
32,transformers,==4.21.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/speech_to_speech/asr_bleu/requirements.txt,False,PVE-2022-51450,<4.23.0,"Transformers 4.23.0 includes a fix for a link vulnerable to repojacking.
https://github.com/huggingface/transformers/commit/ce2620194b4a8f070cd29504d34a79758affdf95"
33,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,CVE-2014-1830,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. This fixes CVE-2014-1830.
34,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,CVE-2014-1829,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. See: CVE-2014-1829.
35,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,CVE-2018-18074,<=2.19.1,"Requests before 2.20.0 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
36,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
37,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
38,sklearn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,no one,no one,no one
39,scipy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
40,six,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,no one,no one,no one
41,appdirs,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,no one,no one,no one
42,decorator,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,no one,no one,no one
43,amfm_decompy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,no one,no one,no one
44,packaging,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,no one,no one,no one
45,numba,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,PVE-2021-38983,<0.49.0,"Numba 0.49.0 fixes a frame injection vulnerability in the dispatcher tracing path, that lead to DoS."
46,joblib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,PVE-2022-51394,<1.1.1,"Joblib 1.1.1 fixes a security issue where 'eval(pre_dispatch)' could potentially run arbitrary code. Now only basic numerics are supported.
https://github.com/joblib/joblib/pull/1327"
47,joblib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,CVE-2022-21797,<1.2.0,"Joblib 1.2.0 includes a fix for CVE-2022-21797: The package joblib from 0 and before 1.2.0 is vulnerable to Arbitrary Code Execution via the pre_dispatch flag in Parallel() class due to the eval() statement.
https://github.com/joblib/joblib/issues/1128"
48,joblib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,PVE-2022-51041,<1.2.0,"Joblib 1.2.0 fixes a security issue where 'eval(pre_dispatch)' could potentially run arbitrary code. Now only basic numerics are supported.
https://github.com/joblib/joblib/pull/1327"
49,einops,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/emotion_conversion/requirements.txt,False,no one,no one,no one
50,pandas,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/multilingual/data_scripts/requirement.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
51,wget,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fairseq/examples/multilingual/data_scripts/requirement.txt,False,no one,no one,no one
