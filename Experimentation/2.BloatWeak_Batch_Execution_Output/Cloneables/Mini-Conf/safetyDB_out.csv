,dep,version,filepath,bloated,cve,affected versions,advisory
0,flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements.txt,False,CVE-2019-1010083,<0.12.3,"Flask 0.12.3 includes a fix for CVE-2019-1010083: Unexpected memory usage. The impact is denial of service. The attack vector is crafted encoded JSON data. NOTE: this may overlap CVE-2018-1000656.
https://github.com/pallets/flask/pull/2695/commits/0e1e9a04aaf29ab78f721cfc79ac2a691f6e3929"
1,flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements.txt,False,CVE-2018-1000656,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.
2,flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements.txt,False,PVE-2021-25820,<0.6.1,flask 0.6.1 fixes a security problem that allowed clients to download arbitrary files  if the host server was a windows based operating system and the client  uses backslashes to escape the directory the files where exposed from.
3,flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements.txt,False,CVE-2023-30861,"<2.2.5,>=2.3.0,<2.3.2","Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches 'Set-Cookie' headers, it may send one client's 'session' cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets 'session.permanent = True'
3. The application does not access or modify the session at any point during a request.
4. 'SESSION_REFRESH_EACH_REQUEST' enabled (the default).
5. The application does not set a 'Cache-Control' header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the 'Vary: Cookie' header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5."
4,tqdm,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements.txt,False,CVE-2016-10075,<4.11.2,The tqdm._version module in tqdm versions before 4.11.2 allows local users to execute arbitrary code via a crafted repo with a malicious git log in the current working directory.
5,frozen-flask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements.txt,False,no one,no one,no one
6,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements.txt,False,CVE-2017-18342,<4,Pyyaml before 4 uses ``yaml.load`` which has been assigned CVE-2017-18342.
7,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements.txt,False,CVE-2020-1747,<5.3.1,"Pyyaml 5.3.1 includes a fix for CVE-2020-1747: A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
8,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements.txt,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
9,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements.txt,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
10,Flask-Markdown,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements.txt,False,no one,no one,no one
11,mypy,==0.761,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements-dev.txt,False,no one,no one,no one
12,pylint,==2.4.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements-dev.txt,False,PVE-2022-45185,<2.13.0,"Pylint 2.13.0 fixes a crash when using the doc_params extension.
https://github.com/PyCQA/pylint/issues/5322"
13,pylint,==2.4.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements-dev.txt,False,PVE-2021-38224,<2.5.0,"Pylint 2.5.0 no longer allows ``python -m pylint ...`` to import user code. Previously, it added the current working directory as the first element of ``sys.path``. This opened up a potential security hole where ``pylint`` would import user level code as long as that code resided in modules having the same name as stdlib or pylint's own modules."
14,pylint,==2.4.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements-dev.txt,False,PVE-2021-39621,<2.7.0,Pylint 2.7.0 includes a fix for vulnerable regular expressions in 'pyreverse'.
15,black,==19.10b0,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements-dev.txt,False,no one,no one,no one
16,isort,<5,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/requirements-dev.txt,False,no one,no one,no one
17,sentence_transformers,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/scripts/requirements.txt,False,no one,no one,no one
18,torch,>=1.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/scripts/requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
19,sklearn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/scripts/requirements.txt,False,no one,no one,no one
20,transformers,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/scripts/requirements.txt,False,CVE-2022-1941,<4.23.0,Transformers 4.23.0 updates its dependency 'protobuf' requirement to '<=3.20.2' to include a security fix.
21,transformers,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/scripts/requirements.txt,False,PVE-2022-51450,<4.23.0,"Transformers 4.23.0 includes a fix for a link vulnerable to repojacking.
https://github.com/huggingface/transformers/commit/ce2620194b4a8f070cd29504d34a79758affdf95"
22,transformers,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/scripts/requirements.txt,False,PVE-2021-40187,<4.5.0,Transformers 4.5.0 includes various vulnerability fixes.
23,ics,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/scripts/requirements.txt,False,no one,no one,no one
24,rocketchat_API,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/Mini-Conf/chat/requirements.txt,False,no one,no one,no one
