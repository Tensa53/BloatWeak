,dep,version,filepath,bloated,cve,affected versions,advisory
0,mxnet,>=1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,CVE-2022-24294,">=0,<1.9.1",A regular expression used in Apache MXNet (incubating) is vulnerable to a potential denial-of-service by excessive resource consumption. The bug could be exploited when loading a model in Apache MXNet that has a specially crafted operator name that would cause the regular expression evaluation to use excessive resources to attempt a match. This issue affects Apache MXNet versions prior to 1.9.1.
1,mxnet,>=1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,CVE-2021-44832,">=1.4.0,<=1.6.0",Mxnet between versions 1.4.0 and 1.6.0 (included) use a version of 'log4j' affected by critical and severe vulnerabilities.
2,mxnet,>=1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,CVE-2021-44228,">=1.4.0,<=1.6.0",Mxnet between versions 1.4.0 and 1.6.0 (included) use a version of 'log4j' affected by critical and severe vulnerabilities.
3,mxnet,>=1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,CVE-2021-45105,">=1.4.0,<=1.6.0",Mxnet between versions 1.4.0 and 1.6.0 (included) use a version of 'log4j' affected by critical and severe vulnerabilities.
4,mxnet,>=1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,CVE-2021-45046,">=1.4.0,<=1.6.0",Mxnet between versions 1.4.0 and 1.6.0 (included) use a version of 'log4j' affected by critical and severe vulnerabilities.
5,numpy,>=1.10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
6,numpy,>=1.10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
7,numpy,>=1.10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
8,numpy,>=1.10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
9,numpy,>=1.10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
10,numpy,>=1.10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
11,scikit-learn,>=0.19.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
12,scikit-learn,>=0.19.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
13,scikit-learn,>=0.19.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
14,matplotlib,>=2.2.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/leap/setup.py,False,no one,no one,no one
15,tornado,<6,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/test_requirements.txt,False,CVE-2023-28370,<6.3.2,Tornado 6.3.2 includes a fix for CVE-2023-28370: Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.
16,tornado,<6,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/test_requirements.txt,False,CVE-2014-9720,">=0,<3.2.2","Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests."
17,pytest-cov,==2.5.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/test_requirements.txt,False,no one,no one,no one
18,jupyter_client,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/test_requirements.txt,False,no one,no one,no one
19,nbformat,==4.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/test_requirements.txt,False,no one,no one,no one
20,pytest,==3.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/test_requirements.txt,False,no one,no one,no one
21,flake8,==3.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/test_requirements.txt,False,no one,no one,no one
22,jupyter,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/test_requirements.txt,False,no one,no one,no one
23,codecov,==2.0.16,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/test_requirements.txt,False,PVE-2021-38075,<2.0.17,Codecov 2.0.17 fixes a reported command injection vulnerability.
24,mxnet,>=1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,CVE-2022-24294,">=0,<1.9.1",A regular expression used in Apache MXNet (incubating) is vulnerable to a potential denial-of-service by excessive resource consumption. The bug could be exploited when loading a model in Apache MXNet that has a specially crafted operator name that would cause the regular expression evaluation to use excessive resources to attempt a match. This issue affects Apache MXNet versions prior to 1.9.1.
25,mxnet,>=1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,CVE-2021-44832,">=1.4.0,<=1.6.0",Mxnet between versions 1.4.0 and 1.6.0 (included) use a version of 'log4j' affected by critical and severe vulnerabilities.
26,mxnet,>=1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,CVE-2021-44228,">=1.4.0,<=1.6.0",Mxnet between versions 1.4.0 and 1.6.0 (included) use a version of 'log4j' affected by critical and severe vulnerabilities.
27,mxnet,>=1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,CVE-2021-45105,">=1.4.0,<=1.6.0",Mxnet between versions 1.4.0 and 1.6.0 (included) use a version of 'log4j' affected by critical and severe vulnerabilities.
28,mxnet,>=1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,CVE-2021-45046,">=1.4.0,<=1.6.0",Mxnet between versions 1.4.0 and 1.6.0 (included) use a version of 'log4j' affected by critical and severe vulnerabilities.
29,numpy,>=1.10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
30,numpy,>=1.10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
31,numpy,>=1.10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
32,numpy,>=1.10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
33,numpy,>=1.10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
34,numpy,>=1.10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
35,scikit-learn,>=0.19.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
36,scikit-learn,>=0.19.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
37,scikit-learn,>=0.19.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
38,matplotlib,>=2.2.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,no one,no one,no one
39,GPy,>=1.9.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/setup.py,False,no one,no one,no one
40,numpy,==1.22.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/docs/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
41,nbsphinx,==0.3.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/docs/requirements.txt,False,no one,no one,no one
42,Sphinx,==1.7.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/docs/requirements.txt,False,CVE-2020-11023,<3.0.4,Sphinx 3.0.4 updates jQuery version from 3.4.1 to 3.5.1 for security reasons.
43,Sphinx,==1.7.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/docs/requirements.txt,False,CVE-2020-11022,<3.0.4,Sphinx 3.0.4 updates jQuery version from 3.4.1 to 3.5.1 for security reasons.
44,sphinx-rtd-theme,==0.4.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/docs/requirements.txt,False,no one,no one,no one
45,jupyter,>=1.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/docs/demos/requirements.txt,False,no one,no one,no one
46,ipython,==7.16.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/docs/demos/requirements.txt,False,CVE-2023-24816,<8.10.0,"IPython 8.10.0 includes a fix for CVE-2023-24816: Versions prior to 8.10.0 are subject to a command injection vulnerability with very specific prerequisites. This vulnerability requires that the function 'IPython.utils.terminal.set_term_title' be called on Windows in a Python environment where ctypes is not available. The dependency on 'ctypes' in 'IPython.utils._process_win32' prevents the vulnerable code from ever being reached in the ipython binary. However, as a library that could be used by another tool 'set_term_title' could be called and hence introduce a vulnerability. If an attacker get untrusted input to an instance of this function they would be able to inject shell commands as current process and limited to the scope of the current process. As a workaround, users should ensure that any calls to the 'IPython.utils.terminal.set_term_title' function are done with trusted or filtered input.
https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7"
47,ipython,==7.16.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/docs/demos/requirements.txt,False,CVE-2014-3429,">=0.12,<1.2","IPython Notebook 0.12 through 1.x before 1.2 does not validate the origin of websocket requests, which allows remote attackers to execute arbitrary code by leveraging knowledge of the kernel id and a crafted page."
48,ipython,==7.16.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/docs/demos/requirements.txt,False,CVE-2016-6524,">=2.0.0,<4.0.0",Ipython 4.0 includes a fix for CVE-2016-6524: Untrusted LaTeX output could be added to the page in a way that could execute javascript.
49,ipython,==7.16.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/docs/demos/requirements.txt,False,CVE-2015-4706,">=3.0.0,<3.2.0",Cross-site scripting (XSS) vulnerability in IPython 3.x before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/contents path.
50,ipython,==7.16.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/docs/demos/requirements.txt,False,CVE-2022-21699,">=8.0.0a0,<8.0.1,>=7.17.0,<7.31.1,>=6.0.0a0,<7.16.3,<5.11","Ipython versions 8.0.1, 7.31.1, 7.16.3 and 5.11 include a fix for CVE-2022-21699: Affected versions are subject to an arbitrary code execution vulnerability achieved by not properly managing cross user temporary files. This vulnerability allows one user to run code as another on the same machine.
https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x"
51,nbconvert,==6.5.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/docs/demos/requirements.txt,False,no one,no one,no one
52,emukit,>=0.4.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/xfer-ml/docs/demos/requirements.txt,False,no one,no one,no one
53,numpy,>= 1.17.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/finite_ntk/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
54,numpy,>= 1.17.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/finite_ntk/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
55,numpy,>= 1.17.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/finite_ntk/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
56,numpy,>= 1.17.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/finite_ntk/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
57,matplotlib,==3.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/finite_ntk/requirements.txt,False,no one,no one,no one
58,gpytorch,>= 1.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/finite_ntk/requirements.txt,False,no one,no one,no one
59,torch,>= 1.3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/finite_ntk/requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
60,torchvision,==0.4.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/finite_ntk/requirements.txt,False,no one,no one,no one
61,pandas,==0.25.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/finite_ntk/requirements.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
62,seaborn,==0.9.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/finite_ntk/requirements.txt,False,no one,no one,no one
63,rpy2,==3.2.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/finite_ntk/requirements.txt,False,no one,no one,no one
64,tqdm,==4.36.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/finite_ntk/requirements.txt,False,no one,no one,no one
65,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
66,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
67,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
68,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
69,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
70,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
71,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
72,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
73,torch,>= 1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
74,torchvision,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,no one,no one,no one
75,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2008-5031,"<2.4.6,>=2.5.0a0,<2.5.2","Python versions 2.4.6 and 2.5.2 include a fix for CVE-2008-5031: Multiple integer overflows in Python 2.2.3 through 2.5.1, and 2.6, allow context-dependent attackers to have an unknown impact via a large integer value in the tabsize argument to the expandtabs method, as implemented by (1) the string_expandtabs function in Objects/stringobject.c and (2) the unicode_expandtabs function in Objects/unicodeobject.c.  NOTE: this vulnerability reportedly exists because of an incomplete fix for CVE-2008-2315.
https://bugs.python.org/issue4469"
76,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2011-1015,"<2.5.5,>=2.6.0a0,<2.6.4,>=3.0.0a0,<3.1","Python versions 2.5.5, 2.6.4 and 3.1 include a fix for CVE-2011-1015: The is_cgi method in CGIHTTPServer.py in the CGIHTTPServer module in Python 2.5, 2.6, and 3.0 allows remote attackers to read script source code via an HTTP GET request that lacks a / (slash) character at the beginning of the URI.
https://bugs.python.org/issue2254"
77,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2010-2089,"<2.6.6,>=2.7.0a0,<2.7.0,>=3.0.0a0,<3.1.3,>=3.2.0a0,<3.2.0","Python versions 2.6.6, 2.7.0, 3.1.3 and 3.2.0 include a fix for CVE-2010-1634: The audioop module in Python 2.7 and 3.2 does not verify the relationships between size arguments and byte string lengths, which allows context-dependent attackers to cause a denial of service (memory corruption and application crash) via crafted arguments, as demonstrated by a call to audioop.reverse with a one-byte string, a different vulnerability than CVE-2010-1634.
https://bugs.python.org/issue7673"
78,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2010-1634,"<2.6.6,>=2.7.0a0,<2.7.0,>=3.0.0a0,<3.1.3,>=3.2.0a0,<3.2.0","Python versions 2.6.6, 2.7.0, 3.1.3 and 3.2.0 include a fix for CVE-2010-1634: Multiple integer overflows in audioop.c in the audioop module in Python 2.6, 2.7, 3.1, and 3.2 allow context-dependent attackers to cause a denial of service (application crash) via a large fragment, as demonstrated by a call to audioop.lin2lin with a long string in the first argument, leading to a buffer overflow.  NOTE: this vulnerability exists because of an incorrect fix for CVE-2008-3143.
https://bugs.python.org/issue8674"
79,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2010-3493,"<2.6.7,>=2.7.0a0,<2.7.2,>=3.0.0a0,<3.1.4,>=3.2.0a0,<3.2.0","Python version 2.6.7, 2.7.2, 3.1.4 and 3.2.0 include a fix for CVE-2010-3493: Multiple race conditions in smtpd.py in the smtpd module in Python 2.6, 2.7, 3.1, and 3.2 alpha allow remote attackers to cause a denial of service (daemon outage) by establishing and then immediately closing a TCP connection, leading to the accept function having an unexpected return value of None, an unexpected value of None for the address, or an ECONNABORTED, EAGAIN, or EWOULDBLOCK error, or the getpeername function having an ENOTCONN error, a related issue to CVE-2010-3492.
https://bugs.python.org/issue9129"
80,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2013-4238,"<2.6.9,>=2.7.0a0,<2.7.7,>=3.2.0a0,<3.2.6,>=3.3.0a0,<3.3.6,>=3.4.0a0,<3.4.1","Python versions 2.6.9, 2.7.7, 3.2.6, 3.3.6 and 3.4.1 include a fix for CVE-2013-4238: The ssl.match_hostname function in the SSL module in Python 2.6 through 3.4 does not properly handle a '\0' character in a domain name in the Subject Alternative Name field of an X.509 certificate, which allows man-in-the-middle attackers to spoof arbitrary SSL servers via a crafted certificate issued by a legitimate Certification Authority, a related issue to CVE-2009-2408.
https://bugs.python.org/issue18709"
81,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2016-5699,"<2.7.10,>=3.0.0a0,<3.3.7,>=3.4.0a0,<3.4.4","Python versions 2.7.10, 3.3.7 and 3.4.4 include a fix for CVE-2016-5699: CRLF injection vulnerability in the HTTPConnection.putheader function in urllib2 and urllib in CPython (aka Python) before 2.7.10 and 3.x before 3.4.4 allows remote attackers to inject arbitrary HTTP headers via CRLF sequences in a URL.
https://bugs.python.org/issue22928"
82,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2016-5636,"<2.7.12,>=3.0,<3.4.5,>=3.5,<3.5.2","Integer overflow in the get_data function in zipimport.c in CPython (aka Python) before 2.7.12, 3.x before 3.4.5, and 3.5.x before 3.5.2 allows remote attackers to have unspecified impact via a negative data size value, which triggers a heap-based buffer overflow. See CVE-2016-5636."
83,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2016-0772,"<2.7.12,>=3.0,<3.4.5,>=3.5,<3.5.2","The smtplib library in CPython (aka Python) before 2.7.12, 3.x before 3.4.5, and 3.5.x before 3.5.2 does not return an error when StartTLS fails, which might allow man-in-the-middle attackers to bypass the TLS protections by leveraging a network position between the client and the registry to block the StartTLS command, aka a ""StartTLS stripping attack."" See CVE-2016-0772."
84,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2016-1000110,"<2.7.13,>=3.0.0a0,<3.3.7,>=3.4.0a0,<3.4.6,>=3.5.0a0,<3.5.3","Python versions 2.7.13, 3.3.7, 3.4.6 and 3.5.3 include a fix for CVE-2016-1000110: The CGIHandler class in Python does not protect against the HTTP_PROXY variable name clash in a CGI script, which could allow a remote attacker to redirect HTTP requests.
https://bugs.python.org/issue27568"
85,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,PVE-2021-42408,"<2.7.13,>=3.0.0a0,<3.3.7,>=3.4.0a0,<3.4.6,>=3.5.0a0,<3.5.3","Python versions 2.7.13, 3.3.7, 3.4.6 and 3.5.3 fix an arbitrary code execution in gettext.c2py().
https://python-security.readthedocs.io/vuln/gettext-c2py.html"
86,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2016-4472,"<2.7.14,>=3.0.0a0,<3.3.7,>=3.4.0a0,<3.4.7,>=3.5.0a0,<3.5.4,>=3.6.0a0,<3.6.2","Python versions 2.7.14, 3.3.7, 3.4.7, 3.5.4 and 3.6.2 update modules/expat to libexpat 2.2.1 to include security fixes.
https://bugs.python.org/issue29591"
87,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2016-0718,"<2.7.14,>=3.0.0a0,<3.3.7,>=3.4.0a0,<3.4.7,>=3.5.0a0,<3.5.4,>=3.6.0a0,<3.6.2","Python versions 2.7.14, 3.3.7, 3.4.7, 3.5.4 and 3.6.2 update modules/expat to libexpat 2.2.1 to include security fixes.
https://bugs.python.org/issue29591"
88,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2016-5300,"<2.7.14,>=3.0.0a0,<3.3.7,>=3.4.0a0,<3.4.7,>=3.5.0a0,<3.5.4,>=3.6.0a0,<3.6.2","Python versions 2.7.14, 3.3.7, 3.4.7, 3.5.4 and 3.6.2 update modules/expat to libexpat 2.2.1 to include security fixes.
https://bugs.python.org/issue29591"
89,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2012-6702,"<2.7.14,>=3.0.0a0,<3.3.7,>=3.4.0a0,<3.4.7,>=3.5.0a0,<3.5.4,>=3.6.0a0,<3.6.2","Python versions 2.7.14, 3.3.7, 3.4.7, 3.5.4 and 3.6.2 update modules/expat to libexpat 2.2.1 to include security fixes.
https://bugs.python.org/issue29591"
90,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,PVE-2021-42403,"<2.7.14,>=3.0.0a0,<3.3.7,>=3.4.0a0,<3.4.7,>=3.5.0a0,<3.5.4,>=3.6.0a0,<3.6.3","Python versions 2.7.14, 3.3.7, 3.4.7, 3.5.4 and 3.6.3 fix ftplib.FTP.putline() to throw an error for a illegal command, as a remote attacker could attack by using newline characters. This issue is similar to CVE-2017-3533.
https://bugs.python.org/issue30119"
91,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2016-9841,"<2.7.14,>=3.0.0a0,<3.4.7,>=3.5.0a0,<3.5.4","Python versions 2.7.14, 3.4.7 and 3.5.4 update its dependency 'zlib' to v1.2.11 to include security fixes.
https://bugs.python.org/issue29169"
92,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2016-9840,"<2.7.14,>=3.0.0a0,<3.4.7,>=3.5.0a0,<3.5.4","Python versions 2.7.14, 3.4.7 and 3.5.4 update its dependency 'zlib' to v1.2.11 to include security fixes.
https://bugs.python.org/issue29169"
93,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2016-9842,"<2.7.14,>=3.0.0a0,<3.4.7,>=3.5.0a0,<3.5.4","Python versions 2.7.14, 3.4.7 and 3.5.4 update its dependency 'zlib' to v1.2.11 to include security fixes.
https://bugs.python.org/issue29169"
94,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2017-1000158,"<2.7.14,>=3.5.0a0,<3.5.5,>=3.0.0a0,<3.4.8","Python versions 2.7.14, 3.4.8 and 3.5.5 include a fix for CVE-2017-1000158: Integer overflow in the PyString_DecodeEscape function in stringobject.c, resulting in heap-based buffer overflow (and possible arbitrary code execution).
https://bugs.python.org/issue30657"
95,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2018-1061,"<2.7.15,>=3.0.0a0,<3.4.9,>=3.5.0a0,<3.5.6,>=3.6.0a0,<3.6.5,>=3.7.0a0,<3.7.0","Python before versions 2.7.15, 3.4.9, 3.5.6, 3.6.5 and 3.7.0 is vulnerable to catastrophic backtracking in the difflib.IS_LINE_JUNK method. An attacker could use this flaw to cause denial of service. See CVE-2018-1061.
https://bugs.python.org/issue32981"
96,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2018-1060,"<2.7.15,>=3.0.0a0,<3.4.9,>=3.5.0a0,<3.5.6rc1,>=3.6.0a0,<3.6.5rc1,>=3.7.0a0,<3.7.0","Python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in pop3lib's apop() method. An attacker could use this flaw to cause denial of service."
97,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2018-14647,"<2.7.16,>=3.0.0a0,<3.4.10,>=3.5.0a0,<3.5.7,>=3.6.0a0,<3.6.7,>=3.7.0a0,<3.7.1","Python versions 2.7.16, 3.4.10, 3.5.7, 3.6.7 and 3.7.1 include a fix for CVE-2018-14647: Python's elementtree C accelerator failed to initialise Expat's hash salt during initialization. This could make it easy to conduct denial of service attacks against Expat by constructing an XML document that would cause pathological hash collisions in Expat's internal data structures, consuming large amounts CPU and RAM.
https://bugs.python.org/issue34623"
98,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2019-17514,"<2.7.16,>=3.0.0a0,<3.4.10,>=3.5.0a0,<3.5.7,>=3.6.0a0,<3.6.7,>=3.7.0a0,<3.7.1,>=3.8.0a0,<3.8.0","Python versions 2.7.16, 3.4.10, 3.5.7, 3.6.7, 3.7.1 and 3.8.0 include a fix for CVE-2019-17514: Library/glob.html in the Python 2 and 3 documentation before 2016 has potentially misleading information about whether sorting occurs, as demonstrated by irreproducible cancer-research results. NOTE: the effects of this documentation cross application domains, and thus it is likely that security-relevant code elsewhere is affected. This issue is not a Python implementation bug, and there are no reports that NMR researchers were specifically relying on library/glob.html. In other words, because the older documentation stated ""finds all the pathnames matching a specified pattern according to the rules used by the Unix shell,"" one might have incorrectly inferred that the sorting that occurs in a Unix shell also occurred for glob.glob. There is a workaround in newer versions of Willoughby nmr-data_compilation-p2.py and nmr-data_compilation-p3.py, which call sort() directly.
https://bugs.python.org/issue33275
https://www.vice.com/en/article/zmjwda/a-code-glitch-may-have-caused-errors-in-more-than-100-published-studies"
99,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2019-5010,"<2.7.16,>=3.0.0a0,<3.4.10,>=3.5.0a0,<3.5.7,>=3.6.0a0,<3.6.9,>=3.7.0a0,<3.7.3","Python versions 2.7.16, 3.4.10, 3.5.7, 3.6.9 and 3.7.3 include a fix for CVE-2019-5010: An exploitable denial-of-service vulnerability exists in the X509 certificate parser of Python.org Python 2.7.11 / 3.6.6. A specially crafted X509 certificate can cause a NULL pointer dereference, resulting in a denial of service. An attacker can initiate or accept TLS connections using crafted certificates to trigger this vulnerability.
https://bugs.python.org/issue35746"
100,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2018-20852,"<2.7.16,>=3.0.0a0,<3.4.10,>=3.5.0a0,<3.5.7,>=3.6.0a0,<3.6.9,>=3.7.0a0,<3.7.3","Python versions 2.7.16, 3.4.10, 3.5.7, 3.6.9 and 3.7.3 include a fix for CVE-2018-20852: http.cookiejar.DefaultPolicy.domain_return_ok in Lib/http/cookiejar.py in Python before 3.7.3 does not correctly validate the domain: it can be tricked into sending existing cookies to the wrong server. An attacker may abuse this flaw by using a server with a hostname that has another valid hostname as a suffix (e.g., pythonicexample.com to steal cookies for example.com). When a program uses http.cookiejar.DefaultPolicy and tries to do an HTTP connection to an attacker-controlled server, existing cookies can be leaked to the attacker.
https://bugs.python.org/issue35121"
101,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2013-1752,"<2.7.16,>=3.3.0a0,<3.3.6,>=3.4.0a0,<3.4.2,>=3.0.0a0,<3.2.6","Python versions 2.7.16, 3.2.6, 3.3.6 and 3.4.2 limit imaplib.IMAP4_SSL.readline() to avoid DoS. This issue was initially assigned a CVE but it was rejected due to the patch not working for some OSes (now fixed). See CVE-2013-1752.
https://bugs.python.org/issue16039"
102,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2019-16935,"<2.7.17,>=3.0.0a0,<3.5.10,>=3.6.0a0,<3.6.10,>=3.7.0a0,<3.7.5","Python versions 2.7.17, 3.5.10, 3.6.10 and 3.7.5 include a fix for CVE-2019-16935: The documentation XML-RPC server in Python through 2.7.16, 3.x through 3.6.9, and 3.7.x through 3.7.4 has XSS via the server_title field. This occurs in Lib/DocXMLRPCServer.py in Python 2.x, and in Lib/xmlrpc/server.py in Python 3.x. If set_server_title is called with untrusted input, arbitrary JavaScript can be delivered to clients that visit the http URL for this server.
https://bugs.python.org/issue38243"
103,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2019-9636,"<2.7.17,>=3.0.0a0,<3.5.7,>=3.6.0a0,<3.6.9,>=3.7.0a0,<3.7.3","Python versions 2.7.17, 3.5.7, 3.6.9 and 3.7.3 include a fix for CVE-2019-9636: Python 2.7.x through 2.7.16 and 3.x through 3.7.2 is affected by Improper Handling of Unicode Encoding (with an incorrect netloc) during NFKC normalization. The impact is information disclosure (credentials, cookies, etc. that are cached against a given hostname). The affected components are urllib.parse.urlsplit and urllib.parse.urlparse. The attack vector is a specially crafted URL that could be incorrectly parsed to locate cookies or authentication data and send that information to a different host.
https://bugs.python.org/issue36216"
104,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2019-10160,"<2.7.17,>=3.0.0a0,<3.5.8,>=3.6.0a0,<3.6.10,>=3.7.0a0,<3.7.4,>=3.8.0a0,<3.8.0b2","Python versions 3.8.0b2, 3.7.4, 3.6.10, 3.5.8 and 2.7.17 include a fix for CVE-2019-10160: A security regression of CVE-2019-9636 was discovered in python since commit d537ab0ff9767ef024f26246899728f0116b1ec3 affecting versions 2.7, 3.5, 3.6, 3.7 and from v3.8.0a4 through v3.8.0b1, which still allows an attacker to exploit CVE-2019-9636 by abusing the user and password parts of a URL. When an application parses user-supplied URLs to store cookies, authentication credentials, or other kind of information, it is possible for an attacker to provide specially crafted URLs to make the application locate host-related information (e.g. cookies, authentication data) and send them to a different host than where it should, unlike if the URLs had been correctly parsed. The result of an attack may vary based on the application.
https://bugs.python.org/issue36742"
105,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2019-9948,"<2.7.17,>=3.0.0a0,<3.5.8,>=3.6.0a0,<3.6.10,>=3.7.0a0,<3.7.5","Python versions 2.7.17, 3.5.8, 3.6.10 and 3.7.5 include a fix for CVE-2019-9948: Urllib in Python 2.x through 2.7.16 supports the local_file: scheme, which makes it easier for remote attackers to bypass protection mechanisms that blacklist file: URIs, as demonstrated by triggering a urllib.urlopen('local_file:///etc/passwd') call. The issue was also found to be present in Python 3 when using URLopener class.
https://bugs.python.org/issue35907"
106,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2019-9947,"<2.7.17,>=3.0.0a0,<3.5.8,>=3.6.0a0,<3.6.9,>=3.7.0a0,<3.7.4","Python versions 2.7.17, 3.5.8, 3.6.9 and 3.7.4 include a fix for CVE-2019-9947: An issue was discovered in urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \r\n (specifically in the path component of a URL that lacks a ? character) followed by an HTTP header or a Redis command. This is similar to the CVE-2019-9740 query string issue.
https://bugs.python.org/issue35906"
107,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2019-9740,"<2.7.17,>=3.0.0a0,<3.5.8,>=3.6.0a0,<3.6.9,>=3.7.0a0,<3.7.4","An issue was discovered in urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \r\n (specifically in the query string after a ? character) followed by an HTTP header or a Redis command."
108,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2019-18348,"<2.7.18rc1,>=3.0.0a0,<3.5.10rc1,>=3.6.0a0,<3.6.11rc1,>=3.7.0a0,<3.7.8rc1,>=3.8.0a0,<3.8.3rc1","Python 2.7.18rc1, 3.5.10rc1, 3.6.11rc1, 3.7.8rc1 and 3.8.3rc1 include a fix for CVE-2019-18348: An issue was discovered in urllib2 in Python 2.x through 2.7.17 and urllib in Python 3.x through 3.8.0. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \r\n (specifically in the host component of a URL) followed by an HTTP header. This is similar to the CVE-2019-9740 query string issue and the CVE-2019-9947 path string issue. (This is not exploitable when glibc has CVE-2016-10739 fixed.).
https://bugs.python.org/issue30458#msg347282"
109,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2011-1521,"<2.7.2,>=3.0.0a0,<3.2.1","The urllib and urllib2 modules in Python 2.x before 2.7.2 and 3.x before 3.2.1 process Location headers that specify redirection to file: URLs, which makes it easier for remote attackers to obtain sensitive information or cause a denial of service (resource consumption) via a crafted URL, as demonstrated by the file:///etc/passwd and file:///dev/zero URLs. See CVE-2011-1521."
110,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2010-3492,"<2.7.3,>=3.0.0a0,<3.1.5","Python versions 2.7.3 and 3.1.5 include a fix for CVE-2010-3492: The asyncore module in Python before 3.2 does not properly handle unsuccessful calls to the accept function, and does not have accompanying documentation describing how daemon applications should handle unsuccessful calls to the accept function, which makes it easier for remote attackers to conduct denial of service attacks that terminate these applications via network connections.
https://bugs.python.org/issue6706"
111,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2014-1912,"<2.7.7,>=3.0.0a0,<3.1.5,>=3.2.0a0,<3.2.6,>=3.3.0a0,<3.3.4,>=3.4.0a0,<3.4.0","Python versions 2.7.7, 3.1.5, 3.2.6, 3.3.4 and 3.4.0 include a fix for CVE-2014-1912: Buffer overflow in the socket.recvfrom_into function in Modules/socketmodule.c in Python 2.5 before 2.7.7, 3.x before 3.3.4, and 3.4.x before 3.4rc1 allows remote attackers to execute arbitrary code via a crafted string.
https://bugs.python.org/issue20246"
112,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2014-4616,"<2.7.7,>=3.0.0a0,<3.2.6,>=3.3.0a0,<3.3.6,>=3.4.0a0,<3.4.2,>=3.5.0a0,<3.5.0","Python versions 2.7.7, 3.2.6, 3.3.6, 3.4.2 and 3.5.0 include a fix for CVE-2014-4616: Array index error in the scanstring function in the _json module in Python 2.7 through 3.5 and simplejson before 2.6.1 allows context-dependent attackers to read arbitrary process memory via a negative index value in the idx argument to the raw_decode function.
https://bugs.python.org/issue21529"
113,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2014-4650,"<2.7.8,>=3.0.0a0,<3.2.6,>=3.3.0a0,<3.3.6,>=3.4.0a0,<3.4.2","Python versions 2.7.8, 3.2.6, 3.3.6 and 3.4.2 include a fix for CVE-2014-4650: The CGIHTTPServer module in Python 2.7.5 and 3.3.4 (possible in others too) does not properly handle URLs in which URL encoding is used for path separators, which allows remote attackers to read script source code or conduct directory traversal attacks and execute unintended code via a crafted character sequence, as demonstrated by a %2f separator.
https://bugs.python.org/issue21766"
114,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2013-7440,"<2.7.9,>=3.0.0a0,<3.3.3","Python version 2.7.9 and 3.3.3 include a fix for CVE-2013-7440: The ssl.match_hostname function in CPython (aka Python) before 2.7.9 and 3.x before 3.3.3 does not properly handle wildcards in hostnames, which might allow man-in-the-middle attackers to spoof servers via a crafted certificate.
https://bugs.python.org/issue17997"
115,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2014-9365,"<2.7.9,>=3.0.0a0,<3.4.3","Python versions 2.7.9 and 3.4.3 include a fix for CVE-2014-9365: The HTTP clients in the (1) httplib, (2) urllib, (3) urllib2, and (4) xmlrpclib libraries in CPython (aka Python) 2.x before 2.7.9 and 3.x before 3.4.3, when accessing an HTTPS URL, do not (a) check the certificate against a trust store or verify that the server hostname matches a domain name in the subject's (b) Common Name or (c) subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.
https://bugs.python.org/issue22417"
116,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2013-1753,"<2.7.9,>=3.2.0a0,<3.2.6,>=3.3.0a0,<3.3.6,>=3.4.0a0,<3.4.3","Python versions 2.7.9, 3.2.6, 3.3.6 and 3.4.3 include a fix for CVE-2013-1753: The gzip_decode function in the xmlrpc client library in Python 3.4 and earlier allows remote attackers to cause a denial of service (memory consumption) via a crafted HTTP request.
https://bugs.python.org/issue16043"
117,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2023-27043,<3.11.3,"The e-mail module of Python 0 - 2.7.18, 3.x - 3.11 incorrectly parses e-mail addresses which contain a special character. This vulnerability allows attackers to send messages from e-mail addresses that would otherwise be rejected.
https://github.com/python/cpython/issues/102988
https://python-security.readthedocs.io/vuln/email-parseaddr-realname.html"
118,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,PVE-2021-42386,"<3.5.10,>=3.6.0a0,<3.6.11,>=3.7.0a0,<3.7.8,>=3.8.0a0,<3.8.4,>=3.9.0a0,<3.9.0a6","Python versions 3.9.0a6, 3.8.4, 3.7.8, 3.6.11, and 3.5.10 disallow CR or LF in email.headerregistry.Address arguments to guard against header injection attacks.
https://bugs.python.org/issue39073"
119,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2020-26116,"<3.5.10,>=3.6.0a0,<3.6.12,>=3.7.0a0,<3.7.9,>=3.8.0a0,<3.8.5,>=3.9.0a0,<3.9.0b5","http.client in Python 3.x before 3.5.10, 3.6.x before 3.6.12, 3.7.x before 3.7.9, and 3.8.x before 3.8.5 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of HTTPConnection.request."
120,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2019-20907,"<3.5.10,>=3.6.0a0,<3.6.15,>=3.7.0a0,<3.7.9,>=3.8.0a0,<3.8.4","In Lib/tarfile.py in Python through 3.8.3, an attacker is able to craft a TAR archive leading to an infinite loop when opened by tarfile.open, because _proc_pax lacks header validation."
121,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2020-14422,"<3.5.10rc1,>=3.6.0a0,<3.6.12,>=3.7.0a0,<3.7.9,>=3.8.0a0,<3.8.4,>=3.9.0a0,<3.9.0b4","Python versions 3.5.10rc1, 3.6.12, 3.7.9, 3.8.4 and 3.9.0b4 include a fix for CVE-2020-14422: Lib/ipaddress.py in Python through 3.8.3 improperly computes hash values in the IPv4Interface and IPv6Interface classes, which might allow a remote attacker to cause a denial of service if an application is affected by the performance of a dictionary containing IPv4Interface or IPv6Interface objects, and this attacker can cause many dictionary entries to be created.
https://bugs.python.org/issue41004"
122,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,PVE-2021-42390,"<3.6.10,>=3.7.0a0,<3.7.5,>=3.8.0a0,<3.8.0","Python versions 3.6.10, 3.7.5 and 3.8.0 fix an infinite loop with short maximum line lengths in EmailPolicy.
https://bugs.python.org/issue36564"
123,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,PVE-2021-42387,"<3.6.10,>=3.7.0a0,<3.7.6,>=3.8.0a0,<3.8.1","Python versions 3.6.10, 3.7.6 and 3.8.1 fix loop.create_datagram_endpoint()'s usage of SO_REUSEADDR that allowed  by default multiple processes to bind the same port.
https://bugs.python.org/issue37228"
124,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,PVE-2021-42385,"<3.6.13,>=3.7.0a0,<3.7.10,>=3.8.0a0,<3.8.7,>=3.9.0a0,<3.9.2,>=3.10.0a0,<3.10.0a4","Python versions 3.6.13, 3.7.10, 3.8.7, 3.9.2 and 3.10.0a4 use CRYPTO_memcmp() for compare_digest to try harder to be constant-time.
https://bugs.python.org/issue40791"
125,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2021-3733,"<3.6.14,>=3.7.0a0,<3.7.11,>=3.8.0a0,<3.8.10,>=3.9.0a0,<3.9.5,>=3.10.0a0,<3.10.0","There's a flaw in urllib's AbstractBasicAuthHandler class. An attacker who controls a malicious HTTP server that an HTTP client (such as web browser) connects to, could trigger a Regular Expression Denial of Service (ReDOS) during an authentication request with a specially crafted payload that is sent by the server to the client. The greatest threat that this flaw poses is to application availability."
126,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-0391,"<3.6.14,>=3.7.0a0,<3.7.11,>=3.8.0a0,<3.8.11,>=3.9.0a0,<3.9.5,>=3.10.0a0,<3.10.0b1","Python versions 3.10.0b1, 3.9.5, 3.8.11, 3.7.11 and 3.6.14 include a fix for CVE-2022-0391: A flaw was found in Python, specifically within the urllib.parse module. The issue involves how the urlparse method does not sanitize input and allows characters like '\r' and '\n' in the URL path. This flaw allows an attacker to input a crafted URL, leading to injection attacks.
https://bugs.python.org/issue43882"
127,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2021-3737,"<3.6.14,>=3.7.0a0,<3.7.11,>=3.8.0a0,<3.8.11,>=3.9.0a0,<3.9.6,>=3.10.0a0,<3.10.0b2","A flaw was found in python. An improperly handled HTTP response in the HTTP client code of python may allow a remote attacker, who controls the HTTP server, to make the client script enter an infinite loop, consuming CPU time. The highest threat from this vulnerability is to system availability."
128,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2021-4189,"<3.6.14,>=3.7.0a0,<3.7.11,>=3.8.0a0,<3.8.9,>=3.9.0a0,<3.9.3","A flaw was found in Python, specifically in the FTP (File Transfer Protocol) client library in PASV (passive) mode. The issue is how the FTP client trusts the host from the PASV response by default. This flaw allows an attacker to set up a malicious FTP server that can trick FTP clients into connecting back to a given IP address and port. This vulnerability could lead to FTP client scanning ports, which otherwise would not have been possible."
129,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,PVE-2021-42379,"<3.6.15,>=3.7.0a0,<3.7.12,>=3.8.0a0,<3.8.12,>=3.9.0a0,<3.9.7,>=3.10.0a0,<3.10.0rc2","Python versions 3.6.15, 3.7.12, 3.8.12, 3.9.7 and 3.10.0rc2 fix multiple CRLF injection vulnerabilities in smtplib.
https://bugs.python.org/issue43124"
130,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,PVE-2021-42398,"<3.6.7,>=3.7.0a0,<3.7.1","Python versions 3.6.7 and 3.7.1 disable external entities in SAX parser to patch XML vulnerabilities.
https://bugs.python.org/issue17239"
131,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-26488,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","In Python before 3.10.3 on Windows, local users can gain privileges because the search path is inadequately secured. The installer may allow a local attacker to add user-writable directories to the system search path. To exploit, an administrator must have installed Python for all users and enabled PATH entries. A non-administrative user can trigger a repair that incorrectly adds user-writable paths into PATH, enabling search-path hijacking of other users and system services. This affects Python (CPython) through 3.7.12, 3.8.x through 3.8.12, 3.9.x through 3.9.10, and 3.10.x through 3.10.2."
132,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-25235,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
133,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-25236,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
134,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-22822,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
135,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-25314,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
136,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-22825,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
137,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-25313,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
138,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-25315,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
139,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-23990,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
140,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-23852,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
141,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-22827,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
142,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-22826,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
143,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-22824,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
144,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-22823,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
145,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2021-46143,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
146,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2021-45960,"<3.7.13,>=3.8.0a0,<3.8.13,>=3.9.0a0,<3.9.11,>=3.10.0a0,<3.10.3","Python 3.7.13, 3.8.13, 3.9.11 and 3.10.3 update bundled libexpat version to v2.4.6 to include security fixes."
147,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2021-28861,"<3.7.14,>=3.8.0a0,<3.8.14,>=3.9.0a0,<3.9.14,>=3.10.0a0,<3.10.6","Python 3.7.14, 3.8.14, 3.9.14 and 3.10.6 include a fix for CVE-2021-28861: Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. 
NOTE: this is disputed by a third party because the http.server.html documentation page states ""Warning: http.server is not recommended for production. It only implements basic security checks."""
148,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2020-10735,"<3.7.14,>=3.8.0a0,<3.8.14,>=3.9.0a0,<3.9.14,>=3.10.0a0,<3.10.7,>=3.11.0a0,<3.11.0rc1","A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(""text""), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability."
149,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-40674,"<3.7.15,>=3.8.0a0,<3.8.15,>=3.9.0a0,<3.9.15,>=3.10.0a0,<3.10.8","Python 3.7.15, 3.8.15, 3.9.15 and 3.10.8 update bundled 'libexpat' version to v2.4.9 to include a security fix."
150,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-37454,"<3.7.16,>=3.8.0a0,<3.8.16,>=3.9.0a0,<3.9.16,>=3.10.0a0,<3.10.9","Python 3.7.16, 3.8.16, 3.9.16 and 3.10.9 include a fix for CVE-2022-37454: Buffer overflow in the _sha3 module.
https://python-security.readthedocs.io/vuln/sha3-buffer-overflow.html"
151,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-45061,"<3.7.16,>=3.8.0a0,<3.8.16,>=3.9.0a0,<3.9.16,>=3.10.0a0,<3.10.9,>=3.11.0a0,<3.11.1","An issue was discovered in Python before 3.11.1. An unnecessary quadratic algorithm exists in one path when processing some inputs to the IDNA (RFC 3490) decoder, such that a crafted, unreasonably long name being presented to the decoder could lead to a CPU denial of service. Hostnames are often supplied by remote servers that could be controlled by a malicious actor; in such a scenario, they could trigger excessive CPU consumption on the client attempting to make use of an attacker-supplied supposed hostname. For example, the attack payload could be placed in the Location header of an HTTP response with status code 302. A fix is planned in 3.11.1, 3.10.9, 3.9.16, 3.8.16, and 3.7.16."
152,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2022-42919,"<3.9.16,>=3.10.0a0,<3.10.9,>=3.11.0a0,<3.11.0","Python 3.9.16, 3.10.9 and 3.11.0 include a fix for CVE-2022-42919: Python 3.9.x and 3.10.x through 3.10.8 on Linux allows local privilege escalation in a non-default configuration. The Python multiprocessing library, when used with the forkserver start method on Linux, allows pickles to be deserialized from any user in the same machine local network namespace, which in many system configurations means any user on the same machine. Pickles can execute arbitrary code. Thus, this allows for local user privilege escalation to the user that any forkserver process is running as. Setting multiprocessing.util.abstract_sockets_supported to False is a workaround. The forkserver start method for multiprocessing is not the default start method. This issue is Linux specific because only Linux supports abstract namespace sockets. CPython before 3.9 does not make use of Linux abstract namespace sockets by default. Support for users manually specifying an abstract namespace socket was added as a bugfix in 3.7.8 and 3.8.3, but users would need to make specific uncommon API calls in order to do that in CPython before 3.9.
https://github.com/python/cpython/issues/97514"
153,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2023-36632,<=3.11.4,"** DISPUTED ** The legacy email.utils.parseaddr function in Python through 3.11.4 allows attackers to trigger ""RecursionError: maximum recursion depth exceeded while calling a Python object"" via a crafted argument. This argument is plausibly an untrusted value from an application's input data that was supposed to contain a name and an e-mail address. NOTE: email.utils.parseaddr is categorized as a Legacy API in the documentation of the Python email package. Applications should instead use the email.parser.BytesParser or email.parser.Parser class. NOTE: the vendor's perspective is that this is neither a vulnerability nor a bug. The email package is intended to have size limits and to throw an exception when limits are exceeded; they were exceeded by the example demonstration code."
154,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,PVE-2021-42393,>0,"In difflib module, table header in output of difflib.HtmlDiff.make_table is not escaped and can be rendered as code in the browser, leading potentially to XSS.
https://bugs.python.org/issue35603
https://github.com/python/cpython/commit/44e36e80456dabaeb59c6e2a93e0c1322bfeb179"
155,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2019-9674,>0,"Lib/zipfile.py in Python allows remote attackers to cause a denial of service (resource consumption) via a ZIP bomb.
https://bugs.python.org/issue36260"
156,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2011-4940,">=2.6,<2.6.7,<2.5.6c1,>=2.7,<2.7.2,>=3.0.0a0,<3.2.4,>=3.3.0a0,<3.3.1","Python 2.5.6c1, 2.6.7rc2, 2.7.2, 3.2.4 and 3.3.1 include a fix for CVE-2011-4940: The list_directory function in Lib/SimpleHTTPServer.py in SimpleHTTPServer in Python before 2.5.6c1, 2.6.x before 2.6.7 rc2, and 2.7.x before 2.7.2 does not place a charset parameter in the Content-Type HTTP header, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks against Internet Explorer 7 via UTF-7 encoding.
https://python-security.readthedocs.io/vuln/simplehttpserver-utf-7.html"
157,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2011-4944,">=2.6.0a0,<2.7.3,>=3.0.0a0,<3.3","Python 2.6 through 3.2 creates ~/.pypirc with world-readable permissions before changing them after data has been written, which introduces a race condition that allows local users to obtain a username and password by reading this file. See CVE-2011-4944."
158,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2012-1150,">=2.7,<2.7.3,>=3.0,<3.1.5,>=3.2,<3.2.3,<2.6.8","Python before 2.6.8, 2.7.x before 2.7.3, 3.x before 3.1.5, and 3.2.x before 3.2.3 computes hash values without restricting the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via crafted input to an application that maintains a hash table. See CVE-2012-1150."
159,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2012-0845,">=2.7,<2.7.3,>=3.2,<3.2.3,>=3.1,<3.1.5,<2.6.8","SimpleXMLRPCServer.py in SimpleXMLRPCServer in Python before 2.6.8, 2.7.x before 2.7.3, 3.x before 3.1.5, and 3.2.x before 3.2.3 allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via an XML-RPC POST request that contains a smaller amount of data than specified by the Content-Length header. See CVE-2012-0845."
160,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2013-7338,">=3.0.0a0,<3.3.4rc1","Python 3.3.4rc1 includes a fix for CVE-2013-7338: Python before 3.3.4 RC1 allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a file size value larger than the size of the zip file to the (1) ZipExtFile.read, (2) ZipExtFile.read(n), (3) ZipExtFile.readlines, (4) ZipFile.extract, or (5) ZipFile.extractall function.
https://bugs.python.org/issue20078"
161,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2018-20406,">=3.0.0a0,<3.4.10,>=3.5.0a0,<3.5.7,>=3.6.0a0,<3.6.7,>=3.7.0a0,<3.7.1","Python versions 3.4.10, 3.5.7, 3.6.7 and 3.7.1 include a fix for CVE-2018-20406: Modules/_pickle.c in Python before 3.7.1 has an integer overflow via a large LONG_BINPUT value that is mishandled during a ""resize to twice the size"" attempt. This issue might cause memory exhaustion, but is only relevant if the pickle format is used for serializing tens or hundreds of gigabytes of data.
https://bugs.python.org/issue34656"
162,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2019-16056,">=3.0.0a0,<3.5.8,>=3.6.0a0,<3.6.10,>=3.7.0a0,<3.7.5,<2.7.17","Python versions 2.7.17, 3.5.8, 3.6.10 and 3.7.5 include a fix for CVE-2019-16056: An issue was discovered in Python through 2.7.16, 3.x through 3.5.7, 3.6.x through 3.6.9, and 3.7.x through 3.7.4. The email module wrongly parses email addresses that contain multiple @ characters. An application that uses the email module and implements some kind of checks on the From/To headers of a message could be tricked into accepting an email address that should be denied. An attack may be the same as in CVE-2019-11340; however, this CVE applies to Python more generally.
https://bugs.python.org/issue34155"
163,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2020-27619,">=3.0.0a0,<3.6.13,>=3.7.0a0,<3.7.10,>=3.8.0a0,<3.8.7,>=3.9.0a0,<3.9.1,>=3.10.0a0,<3.10.0a2","Python 3.6.13, 3.7.10, 3.8.7, 3.9.1 and 3.10.0a2 include a fix for CVE-2020-27619: In Python 3 through 3.9.0, the Lib/test/multibytecodec_support.py CJK codec tests call eval() on content retrieved via HTTP.
https://python-security.readthedocs.io/vuln/cjk-codec-download-eval.html"
164,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2012-2135,">=3.1,<3.4","The utf-16 decoder in Python 3.1 through 3.3 does not update the aligned_end variable after calling the unicode_decode_call_errorhandler function, which allows remote attackers to obtain sensitive information (process memory) or cause a denial of service (memory corruption and crash) via unspecified vectors."
165,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2021-29921,">=3.10.0a0,<3.10.0,>=3.9.0a0,<3.9.5,>=3.8.0a0,<3.8.12","Python 3.8.12, 3.9.5 and 3.10.0 include a fix for CVE-2021-29921: In Python before 3.9.5, the ipaddress library mishandles leading zero characters in the octets of an IP address string. This (in some situations) allows attackers to bypass access control that is based on IP addresses.
https://python-security.readthedocs.io/vuln/ipaddress-ipv4-leading-zeros.html"
166,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2023-24329,">=3.10.0a0,<3.10.12,>=3.11.0a0,<3.11.4,>=3.9.0a0,<3.9.17,>=3.8.0a0,<3.8.17,<3.7.17",An issue in the urllib.parse component of Python before 3.11.4 allows attackers to bypass blocklisting methods by supplying a URL that starts with blank characters.
167,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2015-20107,">=3.11.0a0,<3.11.0b4,<3.7.16,>=3.8.0a0,<3.8.16,>=3.9.0a0,<3.9.16,>=3.10.0a0,<3.10.6","In Python (aka CPython) up to 3.10.8, the mailcap module does not add escape characters into commands discovered in the system mailcap file. This may allow attackers to inject shell commands into applications that call mailcap.findmatch with untrusted input (if they lack validation of user-provided filenames or arguments). The fix is also back-ported to 3.7, 3.8, 3.9"
168,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2014-2667,">=3.2.0a0,<3.2.5,>=3.3.0a0,<3.3.6,>=3.4.0a0,<3.4.2,>=3.5.0a0,<3.5.0","Python versions 3.2.5, 3.3.6, 3.4.2 and 3.5.0 include a fix for CVE-2014-2667: Race condition in the _get_masked_mode function in Lib/os.py in Python 3.2 through 3.5, when exist_ok is set to true and multiple threads are used, might allow local users to bypass intended file permissions by leveraging a separate application vulnerability before the umask has been set to the expected value.
https://bugs.python.org/issue21082"
169,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2013-2099,">=3.3.0a0,<3.3.3,<3.2.6","Algorithmic complexity vulnerability in the ssl.match_hostname function in Python 3.2.x, 3.3.x, and earlier, and unspecified versions of python-backports-ssl_match_hostname as used for older Python versions, allows remote attackers to cause a denial of service (CPU consumption) via multiple wildcard characters in the common name in a certificate."
170,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2016-2183,">=3.5.0a0,<3.5.3,<3.4.7","Python 3.4.7 and 3.5.3 remove 3DES from SSL default ciphers list, as it is vulnerable to CVE-2016-2183: The DES and Triple DES ciphers, as used in the TLS, SSH, and IPSec protocols and other protocols and products, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain cleartext data via a birthday attack against a long-duration encrypted session, as demonstrated by an HTTPS session using Triple DES in CBC mode, aka a ""Sweet32"" attack.
https://github.com/vstinner/cpython/commit/03d13c0cbfe912eb0f9b9a02987b9e569f25fe19"
171,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2021-3426,">=3.6.0,<3.6.13,>=3.7.0,<3.7.10,>=3.8.0,<3.8.9,>=3.9.0,<3.9.3,>=3.10.0,<3.10.0a7","There's a flaw in Python 3's pydoc. A local or adjacent attacker who discovers or is able to convince another local or adjacent user to start a pydoc server could access the server and use it to disclose sensitive information belonging to the other user that they would not normally be able to access. The highest risk of this flaw is to data confidentiality. This flaw affects Python versions before 3.8.9, Python versions before 3.9.3 and Python versions before 3.10.0a7."
172,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2020-8492,">=3.6.0a0,<3.6.11,>=3.7.0a0,<3.7.7,>=3.8.0a0,<3.8.2,>=3.9.0a0,<3.9.0a6,<2.7.17,>=3.0.0a0,<3.5.10","Python 2.7 through 2.7.17, 3.5 through 3.5.9, 3.6 through 3.6.10, 3.7 through 3.7.6, and 3.8 through 3.8.1 allows an HTTP server to conduct Regular Expression Denial of Service (ReDoS) attacks against a client because of urllib.request.AbstractBasicAuthHandler catastrophic backtracking."
173,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2021-23336,">=3.7.0,<3.7.10,>=3.8.0,<3.8.8,>=3.9.0,<3.9.2,<3.6.13","Python versions 3.6.13, 3.7.10, 3.8.8 and 3.9.2 include a fix for CVE-2021-23336: The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.
https://bugs.python.org/issue42967
https://github.com/python/cpython/pull/24297"
174,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2021-3177,">=3.7.0,<3.7.10,>=3.8.0,<3.8.8,>=3.9.0,<3.9.2,>=3.0.0a0,<3.6.13","Python 3.x through 3.9.1 has a buffer overflow in PyCArg_repr in _ctypes/callproc.c, which may lead to remote code execution in certain Python applications that accept floating-point numbers as untrusted input, as demonstrated by a 1e300 argument to c_double.from_param. This occurs because sprintf is used unsafely."
175,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,CVE-2018-8970,">=3.7.0a0,<3.7.0b3","Python version 3.7.0b3 hardens ssl module against CVE-2018-8970.
https://bugs.python.org/issue33136"
176,python,>= 3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/nn_similarity_index/requirements.txt,False,PVE-2021-42391,">=3.8.0a0,<3.8.0,>=3.7.0a0,<3.7.4","Python versions 3.7.4 and 3.8.0 includes a fix for ssl.match_hostname() ignoring extra strings after whitespace in IPv4 address.
https://python-security.readthedocs.io/vuln/ssl-match_hostname-ipv4-trailing.html"
177,bypy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/synthetic_info_bottleneck/requirements.txt,False,no one,no one,no one
178,easydict,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/synthetic_info_bottleneck/requirements.txt,False,no one,no one,no one
179,tqdm,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/synthetic_info_bottleneck/requirements.txt,False,CVE-2016-10075,<4.11.2,The tqdm._version module in tqdm versions before 4.11.2 allows local users to execute arbitrary code via a crafted repo with a malicious git log in the current working directory.
180,tensorboardX,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/synthetic_info_bottleneck/requirements.txt,False,no one,no one,no one
181,torchvision,==0.4.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/var_info_distil/requirements.txt,False,no one,no one,no one
182,torch,==1.3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/var_info_distil/requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
183,pytorch-ignite,==0.3.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/xfer/var_info_distil/requirements.txt,False,no one,no one,no one
