,dep,version,filepath,bloated,cve,affected versions,advisory
0,pbr,==5.4.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
1,MarkupSafe,==1.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
2,requests,==2.24.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
3,requests,==2.24.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
4,pyparsing,==2.4.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
5,snowballstemmer,==2.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
6,sphinx-rtd-theme,==0.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
7,Babel,==2.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2021-42771,<2.9.1,"Babel 2.9.1 includes a fix for CVE-2021-42771: Babel.Locale in Babel before 2.9.1 allows attackers to load arbitrary locale .dat files (containing serialized Python objects) via directory traversal, leading to code execution.
https://github.com/python-babel/babel/pull/782"
8,certifi,==2020.6.20,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2022-23491,<2022.12.07,"Certifi 2022.12.07 includes a fix for CVE-2022-23491: Certifi 2022.12.07 removes root certificates from ""TrustCor"" from the root store. These are in the process of being removed from Mozilla's trust store. TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found in the linked google group discussion.
https://github.com/certifi/python-certifi/security/advisories/GHSA-43fp-rhv2-5gv8
https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ"
9,six,==1.15.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
10,Sphinx,==3.1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
11,sphinxcontrib-applehelp,==1.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
12,sphinxcontrib-jsmath,==1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
13,sphinxcontrib-serializinghtml,==1.1.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
14,alabaster,==0.7.12,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
15,parsimonious,==0.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
16,Pygments,==2.6.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2022-40896,<2.15.0,"Pygments 2.15.0 includes a fix for CVE-2022-40896: In Pygments before 2.15.0 the lexers processing Smithy, SQL/SQL+Jinja or Java properties files from untrusted source are vulnerable to ReDoS."
17,Pygments,==2.6.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2021-27291,">=1.1,<2.7.4","Pygments 2.7.4 includes a fix for CVE-2021-27291: In pygments 1.1+, fixed in 2.7.4, the lexers used to parse programming languages rely heavily on regular expressions. Some of the regular expressions have exponential or cubic worst-case complexity and are vulnerable to ReDoS. By crafting malicious input, an attacker can cause a denial of service."
18,Pygments,==2.6.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2015-8557,">=1.2.2,<2.1",Pygments 2.1 includes a fix for CVE-2015-8557: The FontManager._get_nix_font_path function in formatters/img.py in pygments 1.2.2 through 2.0.2 allows remote attackers to execute arbitrary commands via shell metacharacters in a font name.
19,Pygments,==2.6.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2021-20270,">=1.5,<2.7.4","Pygments 2.7.4 includes a fix for CVE-2021-20270: An infinite loop in SMLLexer in Pygments versions 1.5 to 2.7.3 may lead to denial of service when performing syntax highlighting of a Standard ML (SML) source file, as demonstrated by input that only contains the ""exception"" keyword."
20,chardet,==3.0.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
21,urllib3,==1.25.9,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2021-33503,<1.26.5,"Urllib3 1.26.5 includes a fix for CVE-2021-33503: When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect."
22,urllib3,==1.25.9,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2020-7212,">=1.25.2,<=1.25.7","The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2). See: CVE-2020-7212."
23,urllib3,==1.25.9,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2021-28363,">=1.26.0,<1.26.4","Urllib3 1.26.4 includes a fix for CVE-2021-28363: The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.
https://github.com/urllib3/urllib3/security/advisories/GHSA-5phf-pp7p-vc2r"
24,docutils,==0.16,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2009-5042,">=0.5,<0.6","Docutils 0.6 includes a fix for CVE-2009-5042: Python-docutils allows insecure usage of temporary files.
https://github.com/advisories/GHSA-cg75-6938-wx58"
25,pytz,==2020.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
26,packaging,==20.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
27,idna,==2.10,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
28,sphinxcontrib-htmlhelp,==1.0.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
29,sphinx-js,==3.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
30,imagesize,==1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
31,sphinx-click,==2.3.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
32,sphinxcontrib-qthelp,==1.0.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
33,Jinja2,==2.11.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2020-28493,<2.11.3,"This affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the '_punctuation_re regex' operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory."
34,Jinja2,==2.11.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2019-10906,">=0,<2.10.1","In Pallets Jinja before 2.10.1, str.format_map allows a sandbox escape."
35,Jinja2,==2.11.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,CVE-2014-0012,">=0,<2.7.3","FileSystemBytecodeCache in Jinja2 2.7.2 does not properly create temporary directories, which allows local users to gain privileges by pre-creating a temporary directory with a user's uid.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-1402."
36,sphinxcontrib-devhelp,==1.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/doc-building-requirements.txt,False,no one,no one,no one
37,wheel,==0.34.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/dev-requirements.txt,False,CVE-2022-40898,<0.38.1,"Wheel 0.38.1 includes a fix for CVE-2022-40898: An issue discovered in Python Packaging Authority (PyPA) Wheel 0.37.1 and earlier allows remote attackers to cause a denial of service via attacker controlled input to wheel cli.
https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-in-top-python-packages"
38,pytest,==5.1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/dev-requirements.txt,False,no one,no one,no one
39,flake8-quotes,==3.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/dev-requirements.txt,False,no one,no one,no one
40,flake8,==3.8.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/dev-requirements.txt,False,no one,no one,no one
41,click,">=7.0,<8.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/setup.py,False,PVE-2022-47833,<8.0.0,"Click 8.0.0 uses 'mkstemp()' instead of the deprecated & insecure 'mktemp()'.
https://github.com/pallets/click/issues/1752"
42,more-itertools,">=8.2,<9.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/setup.py,False,no one,no one,no one
43,numpy,">=1.18.1,<2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/setup.py,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
44,numpy,">=1.18.1,<2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
45,numpy,">=1.18.1,<2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
46,numpy,">=1.18.1,<2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
47,filelock,>=3.0.12,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/setup.py,False,no one,no one,no one
48,scikit-learn,>=0.22.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/setup.py,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
49,scikit-learn,>=0.22.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/setup.py,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
50,scikit-learn,>=0.22.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/setup.py,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
51,selenium,>=3.141.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/setup.py,False,no one,no one,no one
52,tensorboardX,">=1.6,<2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/setup.py,False,no one,no one,no one
53,torch,">=1.0,<2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/setup.py,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
54,protobuf,<= 3.20.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/fathom/cli/setup.py,True,CVE-2022-1941,"<3.18.3,>=3.19.0rc0,<3.19.5,>=3.20.0rc0,<3.20.2,>=4.0.0rc0,<4.21.6","A parsing vulnerability for the MessageSet type in the ProtocolBuffers versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 3.21.5 for protobuf-cpp, and versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 4.21.5 for protobuf-python can lead to out of memory failures. A specially crafted message with multiple key-value per elements creates parsing issues, and can lead to a Denial of Service against services receiving unsanitized input. We recommend upgrading to versions 3.18.3, 3.19.5, 3.20.2, 3.21.6 for protobuf-cpp and 3.18.3, 3.19.5, 3.20.2, 4.21.6 for protobuf-python. Versions for 3.16 and 3.17 are no longer updated."
