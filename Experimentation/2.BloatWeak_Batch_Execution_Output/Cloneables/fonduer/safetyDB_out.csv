,dep,version,filepath,bloated,cve,affected versions,advisory
0,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,PVE-2023-54914,<3.6,"Nltk 3.6 includes a fix for a REDoS vulnerability.
https://github.com/nltk/nltk/pull/2597"
1,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,CVE-2021-43854,<3.6.5,"Nltk 3.6.5 includes a fix for CVE-2021-43854: Versions prior to 3.6.5 are vulnerable to regular expression denial of service (ReDoS) attacks. The vulnerability is present in PunktSentenceTokenizer, sent_tokenize and word_tokenize. Any users of this class, or these two functions, are vulnerable to the ReDoS attack. In short, a specifically crafted long input to any of these vulnerable functions will cause them to take a significant amount of execution time. If your program relies on any of the vulnerable functions for tokenizing unpredictable user input, it's strongly recommended upgrading to a version of NLTK without the vulnerability. For users unable to upgrade the execution time can be bounded by limiting the maximum length of an input to any of the vulnerable functions.
https://github.com/nltk/nltk/security/advisories/GHSA-f8m6-h2c7-8h9x
https://github.com/nltk/nltk/issues/2866"
2,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,CVE-2019-14751,">=0,<3.4.5","NLTK Downloader before 3.4.5 is vulnerable to a directory traversal, allowing attackers to write arbitrary files via a (dot dot slash) in an NLTK package (ZIP archive) that is mishandled during extraction."
3,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,CVE-2021-3828,">=0,<3.6.4",Nltk before 3.6.4 is vulnerable to Inefficient Regular Expression Complexity.
4,nltk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,CVE-2021-3842,">=0,<3.6.6",Nltk before 3.6.6 is vulnerable to Inefficient Regular Expression Complexity.
5,sphinx_rtd_theme,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,no one,no one,no one
6,pytest-mock,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,no one,no one,no one
7,mypy,==0.782,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,no one,no one,no one
8,pre-commit,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,CVE-2017-18342,<1.10.4,"Pre-commit 1.10.4 replaces 'yaml.load' with safe alternative to avoid a remote code execution vulnerability.
https://github.com/pre-commit/pre-commit/commit/6853f4aa4c8d7e411839bacc66876baea443186a"
9,isort,>=5.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,no one,no one,no one
10,flake8-docstrings,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,no one,no one,no one
11,black,>=18.9b0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,no one,no one,no one
12,flake8,>=3.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,no one,no one,no one
13,sphinx,<4.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,no one,no one,no one
14,sphinxcontrib-mermaid,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,no one,no one,no one
15,sphinx_autodoc_typehints,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,no one,no one,no one
16,pytest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,no one,no one,no one
17,pytest-dependency,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/requirements-dev.txt,False,no one,no one,no one
18,beautifulsoup4,>=4.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,no one,no one,no one
19,editdistance,">=0.5.2, <0.6.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,no one,no one,no one
20,snorkel,">=0.9.5, <0.10.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,no one,no one,no one
21,emmental,">=0.0.6, <0.1.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,no one,no one,no one
22,lxml,">=4.2.5, <5.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,PVE-2021-39195,<4.4.0,"In lxml before 4.4.0, when writing to file paths that contain the URL escape character '%', the file path could wrongly be mangled by URL unescaping and thus write to a different file or directory.  Code that writes to file paths that are provided by untrusted sources, but that must work with previous versions of lxml, should best either reject paths that contain '%' characters, or otherwise make sure that the path does not contain maliciously injected '%XX' URL hex escapes for paths like '../'.
https://github.com/lxml/lxml/commit/0245aba002f069a0b157282707bdf77418d1b5be"
23,lxml,">=4.2.5, <5.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2020-27783,<4.6.2,"Lxml 4.6.2 includes a fix for CVE-2020-27783: A XSS vulnerability was discovered in python-lxml's clean module. The module's parser didn't properly imitate browsers, which caused different behaviors between the sanitizer and the user's page. A remote attacker could exploit this flaw to run arbitrary HTML/JS code."
24,lxml,">=4.2.5, <5.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2021-28957,<4.6.3,"Lxml version 4.6.3 includes a fix for CVE-2021-28957: An XSS vulnerability was discovered in python-lxml's clean module versions before 4.6.3. When disabling the safe_attrs_only and forms arguments, the Cleaner class does not remove the formation attribute allowing for JS to bypass the sanitizer. A remote attacker could exploit this flaw to run arbitrary JS code on users who interact with incorrectly sanitized HTML.
https://bugs.launchpad.net/lxml/+bug/1888153"
25,lxml,">=4.2.5, <5.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2021-43818,<4.6.5,"Lxml 4.6.5 includes a fix for CVE-2021-43818: Prior to version 4.6.5, the HTML Cleaner in lxml.html lets certain crafted script content pass through, as well as script content in SVG files embedded using data URIs. Users that employ the HTML cleaner in a security relevant context should upgrade to lxml 4.6.5 to receive a patch."
26,lxml,">=4.2.5, <5.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2022-2309,<4.9.1,"Lxml 4.9.1 includes a fix for CVE-2022-2309: NULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn't be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered."
27,mlflow,">=1.1.0, <2.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2023-1177,<2.2.1,"Mlflow 2.2.1 includes a fix for CVE-2023-1177: Path Traversal: '\..\filename' in GitHub repository mlflow/mlflow prior to 2.2.1.
https://github.com/advisories/GHSA-xg73-94fp-g449"
28,mlflow,">=1.1.0, <2.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2023-1176,<2.2.1,"Mlflow 2.2.1 includes a fix for CVE-2023-1176: Remote file existence check vulnerability in 'mlflow server' and 'mlflow ui' CLIs.
https://github.com/advisories/GHSA-wp72-7hj9-5265"
29,mlflow,">=1.1.0, <2.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,PVE-2023-58929,<2.3.1,"Mlflow 2.3.1 includes a fix for LFI vulnerability by disabling the ability to provide relative paths in registered model sources. 
https://github.com/mlflow/mlflow/pull/8281
https://github.com/mlflow/mlflow/security/advisories/GHSA-xg73-94fp-g449"
30,mlflow,">=1.1.0, <2.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,PVE-2023-58982,<2.4.1,"Mlflow 2.4.1 includes a fix for a local file inclusion vulnerability. 
https://github.com/mlflow/mlflow/pull/8648"
31,mlflow,">=1.1.0, <2.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2022-0736,">=0,<1.23.1",Insecure Temporary File in GitHub repository mlflow/mlflow prior to 1.23.1.
32,numpy,">=1.11, <2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
33,numpy,">=1.11, <2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
34,numpy,">=1.11, <2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
35,numpy,">=1.11, <2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
36,numpy,">=1.11, <2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
37,numpy,">=1.11, <2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
38,pyyaml,">=5.1, <6.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2020-1747,<5.3.1,"Pyyaml 5.3.1 includes a fix for CVE-2020-1747: A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
39,pyyaml,">=5.1, <6.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
40,pyyaml,">=5.1, <6.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
41,scipy,">=1.1.0, <2.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
42,spacy,">=2.1.3, <2.4.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,no one,no one,no one
43,sqlalchemy,">=1.3.7, <2.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,PVE-2022-51668,<2.0.0b1,"Sqlalchemy 2.0.0b1 avoids leaking cleartext passwords to the open for careless uses of str(engine.URL()) in logs and prints.
https://github.com/sqlalchemy/sqlalchemy/pull/8563"
44,sqlalchemy,">=1.3.7, <2.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2019-7164,"<=1.2.17,>=1.3.0b1,<=1.3.0b2","SQLAlchemy through 1.2.17 and 1.3.x through 1.3.0b2 allows SQL Injection via the order_by parameter.
https://github.com/sqlalchemy/sqlalchemy/issues/4481"
45,torch,">=1.3.1,<2.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
46,tqdm,">=4.36.0, <5.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,no one,no one,no one
47,treedlib,">=0.1.3, <0.2.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,no one,no one,no one
48,wand,">=0.4.4, <0.6.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,no one,no one,no one
49,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2015-4707,<3.2.0,Cross-site scripting (XSS) vulnerability in IPython before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/notebooks path.
50,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2015-5607,<3.2.1,"Ipython 3.2.1 includes a fix for CVE-2015-5607: Cross-site request forgery in the REST API in IPython 2 and 3.
https://github.com/ipython/ipython/commit/1415a9710407e7c14900531813c15ba6165f0816"
51,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2015-6938,<3.2.2,"Cross-site scripting (XSS) vulnerability in the file browser in notebook/notebookapp.py in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to inject arbitrary web script or HTML via a folder name.  NOTE: this was originally reported as a cross-site request forgery (CSRF) vulnerability, but this may be inaccurate."
52,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2015-7337,<3.2.2,"The editor in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to execute arbitrary JavaScript code via a crafted file, which triggers a redirect to files/, related to MIME types."
53,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2023-24816,<8.10.0,"IPython 8.10.0 includes a fix for CVE-2023-24816: Versions prior to 8.10.0 are subject to a command injection vulnerability with very specific prerequisites. This vulnerability requires that the function 'IPython.utils.terminal.set_term_title' be called on Windows in a Python environment where ctypes is not available. The dependency on 'ctypes' in 'IPython.utils._process_win32' prevents the vulnerable code from ever being reached in the ipython binary. However, as a library that could be used by another tool 'set_term_title' could be called and hence introduce a vulnerability. If an attacker get untrusted input to an instance of this function they would be able to inject shell commands as current process and limited to the scope of the current process. As a workaround, users should ensure that any calls to the 'IPython.utils.terminal.set_term_title' function are done with trusted or filtered input.
https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7"
54,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2014-3429,">=0.12,<1.2","IPython Notebook 0.12 through 1.x before 1.2 does not validate the origin of websocket requests, which allows remote attackers to execute arbitrary code by leveraging knowledge of the kernel id and a crafted page."
55,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2016-6524,">=2.0.0,<4.0.0",Ipython 4.0 includes a fix for CVE-2016-6524: Untrusted LaTeX output could be added to the page in a way that could execute javascript.
56,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2015-4706,">=3.0.0,<3.2.0",Cross-site scripting (XSS) vulnerability in IPython 3.x before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/contents path.
57,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,CVE-2022-21699,">=8.0.0a0,<8.0.1,>=7.17.0,<7.31.1,>=6.0.0a0,<7.16.3,<5.11","Ipython versions 8.0.1, 7.31.1, 7.16.3 and 5.11 include a fix for CVE-2022-21699: Affected versions are subject to an arbitrary code execution vulnerability achieved by not properly managing cross user temporary files. This vulnerability allows one user to run code as another on the same machine.
https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x"
58,deprecation,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,no one,no one,no one
59,fugashi,>=0.2.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,no one,no one,no one
60,jieba,">=0.39, <0.40",/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/setup.py,False,no one,no one,no one
61,sqlalchemy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/docs/requirements.txt,False,CVE-2012-0805,<0.7.0,"Sqlalchemy 0.7.0 includes a fix for CVE-2012-0805: Multiple SQL injection vulnerabilities in SQLAlchemy before 0.7.0b4, as used in Keystone, allow remote attackers to execute arbitrary SQL commands via the (1) limit or (2) offset keyword to the select function, or unspecified vectors to the (3) select.limit or (4) select.offset function.
https://docs.sqlalchemy.org/en/20/changelog/changelog_07.html#change-0.7.0"
62,sqlalchemy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/docs/requirements.txt,False,PVE-2022-51668,<2.0.0b1,"Sqlalchemy 2.0.0b1 avoids leaking cleartext passwords to the open for careless uses of str(engine.URL()) in logs and prints.
https://github.com/sqlalchemy/sqlalchemy/pull/8563"
63,sqlalchemy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/docs/requirements.txt,False,CVE-2019-7164,"<=1.2.17,>=1.3.0b1,<=1.3.0b2","SQLAlchemy through 1.2.17 and 1.3.x through 1.3.0b2 allows SQL Injection via the order_by parameter.
https://github.com/sqlalchemy/sqlalchemy/issues/4481"
64,sphinx,<4.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/docs/requirements.txt,False,no one,no one,no one
65,sphinx_autodoc_typehints,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/docs/requirements.txt,False,no one,no one,no one
66,deprecation,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/docs/requirements.txt,False,no one,no one,no one
67,sphinxcontrib-mermaid,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/fonduer/docs/requirements.txt,False,no one,no one,no one
