,dep,version,filepath,bloated,cve,affected versions,advisory
0,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
1,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
2,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
3,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
4,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
5,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
6,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
7,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
8,dill,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,no one,no one,no one
9,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,CVE-2017-18342,<4,Pyyaml before 4 uses ``yaml.load`` which has been assigned CVE-2017-18342.
10,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,CVE-2020-1747,<5.3.1,"Pyyaml 5.3.1 includes a fix for CVE-2020-1747: A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
11,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
12,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
13,h5py,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,no one,no one,no one
14,scipy,>=0.13.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
15,scikit-image,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements.txt,False,no one,no one,no one
16,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2017-3736,<2.1.3,"Cryptography 2.1.3 updates Windows, macOS, and manylinux1 wheels to be compiled with OpenSSL 1.1.0g, that includes security fixes."
17,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2017-3735,<2.1.3,"Cryptography 2.1.3 updates Windows, macOS, and manylinux1 wheels to be compiled with OpenSSL 1.1.0g, that includes security fixes."
18,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,PVE-2021-39252,<3.3,"Cryptography 3.3 no longer allows loading of finite field Diffie-Hellman parameters of less than 512 bits in length. This change is to conform with an upcoming OpenSSL release that no longer supports smaller sizes. These keys were already wildly insecure and should not have been used in any application outside of testing.
https://github.com/pyca/cryptography/pull/5592"
19,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2020-36242,<3.3.2,"Cryptography 3.3.2 includes a fix for CVE-2020-36242: certain sequences of update calls to symmetrically encrypt multi-GB values could result in an integer overflow and buffer overflow, as demonstrated by the Fernet class."
20,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2023-0215,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
21,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2023-0401,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
22,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2023-0217,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
23,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2022-3996,<39.0.1,"Cryptography 39.0.1 includes a fix for CVE-2022-3996, a DoS vulnerability affecting openssl.
https://github.com/pyca/cryptography/issues/7940"
24,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2023-0216,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
25,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2022-4203,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
26,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2022-4304,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
27,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2023-0286,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
28,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2022-4450,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
29,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2023-2650,<41.0.0,"Cryptography 41.0.0 updates its dependency 'OpenSSL' to v3.1.1 to include a security fix.
https://github.com/pyca/cryptography/commit/8708245ccdeaff21d65eea68a4f8d2a7c5949a22"
30,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2020-25659,<=3.2,"Cryptography 3.2 and prior are vulnerable to Bleichenbacher timing attacks in the RSA decryption API, via timed processing of valid PKCS#1 v1.5 ciphertext."
31,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2023-23931,">=1.8,<39.0.1","Cryptography 39.0.1 includes a fix for CVE-2023-23931: In affected versions 'Cipher.update_into' would accept Python objects which implement the buffer protocol, but provide only immutable buffers. This would allow immutable objects (such as 'bytes') to be mutated, thus violating fundamental rules of Python and resulting in corrupted output. This issue has been present since 'update_into' was originally introduced in cryptography 1.8.
https://github.com/pyca/cryptography/security/advisories/GHSA-w7pp-m8wf-vj6r"
32,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2018-10903,">=1.9.0,<2.3",A flaw was found in python-cryptography versions between >=1.9.0 and <2.3. The finalize_with_tag API did not enforce a minimum tag length. If a user did not validate the input length prior to passing it to finalize_with_tag an attacker could craft an invalid payload with a shortened tag (e.g. 1 byte) such that they would have a 1 in 256 chance of passing the MAC check. GCM tag forgeries can cause key leakage. See: CVE-2018-10903.
33,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2022-3786,">=37.0.0,<38.0.3","Cryptography versions from 37.0.0 and before 38.0.2 include a statically linked copy of OpenSSL that has known vulnerabilities.
https://github.com/pyca/cryptography/security/advisories/GHSA-39hc-v87j-747x"
34,cryptography,==1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2022-3602,">=37.0.0,<38.0.3","Cryptography versions from 37.0.0 and before 38.0.2 include a statically linked copy of OpenSSL that has known vulnerabilities.
https://github.com/pyca/cryptography/security/advisories/GHSA-39hc-v87j-747x"
35,scipy,>=0.13.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
36,dill,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,no one,no one,no one
37,sphinx_rtd_theme,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,no one,no one,no one
38,sphinxcontrib-napoleon,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,no one,no one,no one
39,coverage,==4.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,no one,no one,no one
40,bumpversion,==0.5.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,no one,no one,no one
41,pip,==8.1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2019-20916,<19.2,"Pip before 19.2 allows Directory Traversal when a URL is given in an install command, because a Content-Disposition header can have ../ in a filename, as demonstrated by overwriting the /root/.ssh/authorized_keys file. This occurs in _download_http_url in _internal/download.py."
42,pip,==8.1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2021-3572,<21.1,A flaw was found in python-pip in the way it handled Unicode separators in git references. A remote attacker could possibly use this issue to install a different revision on a repository. The highest threat from this vulnerability is to data integrity. This is fixed in python-pip version 21.1.
43,pip,==8.1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2021-28363,<21.1,Pip 21.1 updates its dependency 'urllib3' to v1.26.4 due to security issues.
44,PyYAML,==5.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2020-1747,<5.3.1,"Pyyaml 5.3.1 includes a fix for CVE-2020-1747: A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
45,PyYAML,==5.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
46,PyYAML,==5.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
47,watchdog,==0.8.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,no one,no one,no one
48,tox,==2.3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,no one,no one,no one
49,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2017-18342,<4,Pyyaml before 4 uses ``yaml.load`` which has been assigned CVE-2017-18342.
50,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2020-1747,<5.3.1,"Pyyaml 5.3.1 includes a fix for CVE-2020-1747: A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
51,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
52,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
53,flake8,==2.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,no one,no one,no one
54,h5py,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,no one,no one,no one
55,wheel,==0.29.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2022-40898,<0.38.1,"Wheel 0.38.1 includes a fix for CVE-2022-40898: An issue discovered in Python Packaging Authority (PyPA) Wheel 0.37.1 and earlier allows remote attackers to cause a denial of service via attacker controlled input to wheel cli.
https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-in-top-python-packages"
56,scikit-image,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,no one,no one,no one
57,sphinxcontrib-inlinesyntaxhighlight,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,no one,no one,no one
58,Sphinx,==1.4.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2020-11023,<3.0.4,Sphinx 3.0.4 updates jQuery version from 3.4.1 to 3.5.1 for security reasons.
59,Sphinx,==1.4.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,CVE-2020-11022,<3.0.4,Sphinx 3.0.4 updates jQuery version from 3.4.1 to 3.5.1 for security reasons.
60,sphinx-gallery,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/requirements_dev.txt,False,no one,no one,no one
61,pip,>=8.1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,True,CVE-2019-20916,<19.2,"Pip before 19.2 allows Directory Traversal when a URL is given in an install command, because a Content-Disposition header can have ../ in a filename, as demonstrated by overwriting the /root/.ssh/authorized_keys file. This occurs in _download_http_url in _internal/download.py."
62,pip,>=8.1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,True,CVE-2021-3572,<21.1,A flaw was found in python-pip in the way it handled Unicode separators in git references. A remote attacker could possibly use this issue to install a different revision on a repository. The highest threat from this vulnerability is to data integrity. This is fixed in python-pip version 21.1.
63,pip,>=8.1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,True,CVE-2021-28363,<21.1,Pip 21.1 updates its dependency 'urllib3' to v1.26.4 due to security issues.
64,torch,>=0.1.12,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
65,dill,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,no one,no one,no one
66,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,CVE-2017-18342,<4,Pyyaml before 4 uses ``yaml.load`` which has been assigned CVE-2017-18342.
67,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,CVE-2020-1747,<5.3.1,"Pyyaml 5.3.1 includes a fix for CVE-2020-1747: A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
68,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
69,pyyaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
70,scipy,>=0.13.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
71,h5py,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,no one,no one,no one
72,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
73,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
74,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
75,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
76,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
77,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
78,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
79,numpy,>=1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
80,scikit-image,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,no one,no one,no one
81,torchvision,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,no one,no one,no one
82,tqdm,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,True,CVE-2016-10075,<4.11.2,The tqdm._version module in tqdm versions before 4.11.2 allows local users to execute arbitrary code via a crafted repo with a malicious git log in the current working directory.
83,pytest-runner,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,no one,no one,no one
84,pytest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,no one,no one,no one
85,unittest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/inferno/setup.py,False,no one,no one,no one
