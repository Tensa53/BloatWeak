,dep,version,filepath,bloated,cve,affected versions,advisory
0,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
1,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
2,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
3,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
4,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
5,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
6,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
7,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
8,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2014-3589,"<2.3.2,>=2.5.0,<2.5.2","Pillow versions 2.3.2 and 2.5.2 include a fix for CVE-2014-3589: PIL/IcnsImagePlugin.py in Python Imaging Library (PIL) and Pillow before 2.3.2 and 2.5.x before 2.5.2 allows remote attackers to cause a denial of service via a crafted block size.
https://github.com/python-pillow/Pillow/commit/205e056f8f9b06ed7b925cf8aa0874bc4aaf8a7d"
9,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2020-15999,<8.0.1,Pillow 8.0.1 updates 'FreeType' used in binary wheels to v2.10.4 to include a security fix.
10,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2020-35654,<8.1.0,Pillow 8.1.0 fixes TIFF OOB Write error. CVE-2020-35654 #5175.
11,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2020-35653,<8.1.0,"In Pillow before 8.1.0, PcxDecode has a buffer over-read when decoding a crafted PCX file because the user-supplied stride value is trusted for buffer calculations."
12,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2020-35655,<8.1.0,Pillow 8.1.0 includes a fix for SGI Decode buffer overrun. CVE-2020-35655 #5173.
13,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-25289,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25289: TiffDecode has a heap-based buffer overflow when decoding crafted YCbCr files because of certain interpretation conflicts with LibTIFF in RGBA mode. NOTE: this issue exists because of an incomplete fix for CVE-2020-35654.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
14,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-25290,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25290: In TiffDecode.c, there is a negative-offset memcpy with an invalid size.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
15,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-27922,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-27922: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICNS container, and thus an attempted memory allocation can be very large.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
16,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-25291,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25291: In TiffDecode.c, there is an out-of-bounds read in TiffreadRGBATile via invalid tile boundaries.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
17,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-27921,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-27921: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
18,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-25293,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25293: There is an out-of-bounds read in SGIRleDecode.c.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
19,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-25292,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25292: The PDF parser allows a regular expression DoS (ReDoS) attack via a crafted PDF file because of a catastrophic backtracking regex.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
20,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-25288,<8.2.0,"Pillow 8.2.0 includes a fix for CVE-2021-25288: There is an out-of-bounds read in J2kDecode, in j2ku_gray_i.
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-25287-cve-2021-25288-fix-oob-read-in-jpeg2kdecode"
21,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-28677,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28677: For EPS data, the readline implementation used in EPSImageFile has to deal with any combination of \r and \n as line endings. It used an accidentally quadratic method of accumulating lines while looking for a line ending. A malicious EPS file could use this to perform a DoS of Pillow in the open phase, before an image was accepted for opening.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28677-fix-eps-dos-on-open"
22,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-28678,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28678: For BLP data, BlpImagePlugin did not properly check that reads (after jumping to file offsets) returned data. This could lead to a DoS where the decoder could be run a large number of times on empty data.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28678-fix-blp-dos"
23,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-28676,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28676: For FLI data, FliDecode did not properly check that the block advance was non-zero, potentially leading to an infinite loop on load.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28676-fix-fli-dos"
24,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-25287,<8.2.0,"Pillow 8.2.0 includes a fix for CVE-2021-25287: There is an out-of-bounds read in J2kDecode, in j2ku_graya_la.
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-25287-cve-2021-25288-fix-oob-read-in-jpeg2kdecode"
25,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-34552,<8.3.0,"Pillow 8.3.0 includes a fix for CVE-2021-34552: Pillow through 8.2.0 and PIL (also known as Python Imaging Library) through 1.1.7 allow an attacker to pass controlled parameters directly into a convert function to trigger a buffer overflow in Convert.c
https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html#buffer-overflow
https://pillow.readthedocs.io/en/stable/releasenotes/index.html"
26,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2022-22816,<9.0.0,"Pillow 9.0.0 includes a fix for CVE-2022-22816: path_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling"
27,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,PVE-2021-44525,<9.0.0,"Pillow 9.0.0 excludes carriage return in PDF regex to help prevent ReDoS.
https://github.com/python-pillow/Pillow/pull/5912
https://github.com/python-pillow/Pillow/commit/43b800d933c996226e4d7df00c33fcbe46d97363"
28,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,PVE-2022-44524,<9.0.0,"Pillow 9.0.0 ensures JpegImagePlugin stops at the end of a truncated file to avoid Denial of Service attacks.
https://github.com/python-pillow/Pillow/pull/5921
https://github.com/advisories/GHSA-4fx9-vc88-q2xc"
29,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2022-22815,<9.0.0,"Pillow 9.0.0 includes a fix for CVE-2022-22815: path_getbbox in path.c in Pillow before 9.0.0 improperly initializes ImagePath.Path.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling"
30,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2022-24303,<9.0.1,Pillow before 9.0.1 allows attackers to delete files because spaces in temporary pathnames are mishandled.
31,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2022-22817,<9.0.1,"Pillow 9.0.1 includes a fix for CVE-2022-22817: PIL.ImageMath.eval in Pillow before 9.0.0 allows evaluation of arbitrary expressions, such as ones that use the Python exec method. A first patch was issued for version 9.0.0 but it did not prevent builtins available to lambda expressions.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html#security"
32,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2022-45198,<9.2.0,Pillow before 9.2.0 performs Improper Handling of Highly Compressed GIF Data (Data Amplification).
33,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-28675,">=0,<8.2.0",An issue was discovered in Pillow before 8.2.0. PSDImagePlugin.PsdImageFile lacked a sanity check on the number of input layers relative to the size of the data block. This could lead to a DoS on Image.open prior to Image.load.
34,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-27923,">=4.3.0,<8.1.1","Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large."
35,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2021-23437,">=5.2.0,<8.3.2","Pillow from 5.2.0 and before 8.3.2 is vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function.
https://github.com/python-pillow/Pillow/commit/9e08eb8f78fdfd2f476e1b20b7cf38683754866b
https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html"
36,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2022-30595,">=9.1.0,<9.1.1",libImaging/TgaRleDecode.c in Pillow 9.1.0 has a heap buffer overflow in the processing of invalid TGA image files.
37,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,PVE-2023-55182,">=9.1.0,<9.3.0","Pillow 9.3.0 includes a security fix: Pillow will now decode the data in its natural CMYK mode, then convert it to RGB and rearrange the channels afterwards. Trying to load the data in an incorrect mode could result in a segmentation fault.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#decode-jpeg-compressed-blp1-data-in-original-mode"
38,pillow,>=7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2022-45199,">=9.2.0,<9.3.0","Pillow before 9.3.0 allows denial of service via SAMPLESPERPIXEL.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#limit-samplesperpixel-to-avoid-runtime-dos"
39,scikit-learn,>=0.22.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
40,scikit-learn,>=0.22.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
41,scikit-learn,>=0.22.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
42,torchvision,>=0.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,no one,no one,no one
43,torch,>=1.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
44,sklearn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/blitz/examples/requirements_stocks_example.txt,False,no one,no one,no one
45,pandas,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/blitz/examples/requirements_stocks_example.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
46,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/blitz/examples/requirements_stocks_example.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
47,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/blitz/examples/requirements_stocks_example.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
48,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/blitz/examples/requirements_stocks_example.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
49,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/blitz/examples/requirements_stocks_example.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
50,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/blitz/examples/requirements_stocks_example.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
51,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/blitz/examples/requirements_stocks_example.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
52,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/blitz/examples/requirements_stocks_example.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
53,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/blitz/examples/requirements_stocks_example.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
54,matplotlib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/blitz-bayesian-deep-learning/blitz/examples/requirements_stocks_example.txt,False,no one,no one,no one
