,dep,version,filepath,bloated,cve,affected versions,advisory
0,sk-video,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
1,flask,==1.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2023-30861,"<2.2.5,>=2.3.0,<2.3.2","Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches 'Set-Cookie' headers, it may send one client's 'session' cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets 'session.permanent = True'
3. The application does not access or modify the session at any point during a request.
4. 'SESSION_REFRESH_EACH_REQUEST' enabled (the default).
5. The application does not set a 'Cache-Control' header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the 'Vary: Cookie' header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5."
2,six,==1.11.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
3,cryptography,==3.4.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2023-0215,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
4,cryptography,==3.4.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2023-0401,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
5,cryptography,==3.4.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2023-0217,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
6,cryptography,==3.4.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2022-3996,<39.0.1,"Cryptography 39.0.1 includes a fix for CVE-2022-3996, a DoS vulnerability affecting openssl.
https://github.com/pyca/cryptography/issues/7940"
7,cryptography,==3.4.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2023-0216,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
8,cryptography,==3.4.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2022-4203,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
9,cryptography,==3.4.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2022-4304,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
10,cryptography,==3.4.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2023-0286,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
11,cryptography,==3.4.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2022-4450,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
12,cryptography,==3.4.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2023-2650,<41.0.0,"Cryptography 41.0.0 updates its dependency 'OpenSSL' to v3.1.1 to include a security fix.
https://github.com/pyca/cryptography/commit/8708245ccdeaff21d65eea68a4f8d2a7c5949a22"
13,cryptography,==3.4.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2023-23931,">=1.8,<39.0.1","Cryptography 39.0.1 includes a fix for CVE-2023-23931: In affected versions 'Cipher.update_into' would accept Python objects which implement the buffer protocol, but provide only immutable buffers. This would allow immutable objects (such as 'bytes') to be mutated, thus violating fundamental rules of Python and resulting in corrupted output. This issue has been present since 'update_into' was originally introduced in cryptography 1.8.
https://github.com/pyca/cryptography/security/advisories/GHSA-w7pp-m8wf-vj6r"
14,cryptography,==3.4.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2018-10903,">=1.9.0,<2.3",A flaw was found in python-cryptography versions between >=1.9.0 and <2.3. The finalize_with_tag API did not enforce a minimum tag length. If a user did not validate the input length prior to passing it to finalize_with_tag an attacker could craft an invalid payload with a shortened tag (e.g. 1 byte) such that they would have a 1 in 256 chance of passing the MAC check. GCM tag forgeries can cause key leakage. See: CVE-2018-10903.
15,cryptography,==3.4.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2022-3786,">=37.0.0,<38.0.3","Cryptography versions from 37.0.0 and before 38.0.2 include a statically linked copy of OpenSSL that has known vulnerabilities.
https://github.com/pyca/cryptography/security/advisories/GHSA-39hc-v87j-747x"
16,cryptography,==3.4.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2022-3602,">=37.0.0,<38.0.3","Cryptography versions from 37.0.0 and before 38.0.2 include a statically linked copy of OpenSSL that has known vulnerabilities.
https://github.com/pyca/cryptography/security/advisories/GHSA-39hc-v87j-747x"
17,pyjwt,==1.6.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2022-29217,">=1.5.0,<2.4.0","PyJWT 2.4.0 includes a fix for CVE-2022-29217: An attacker submitting the JWT token can choose the used signing algorithm. The PyJWT library requires that the application chooses what algorithms are supported. The application can specify 'jwt.algorithms.get_default_algorithms()' to get support for all algorithms, or specify a single algorithm. The issue is not that big as 'algorithms=jwt.algorithms.get_default_algorithms()' has to be used. As a workaround, always be explicit with the algorithms that are accepted and expected when decoding."
18,dask,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2021-42343,<2021.10.0,Dask 2021.10.0 includes a fix for CVE-2021-42343: An issue was discovered in the Dask distributed package before 2021.10.0 for Python. Single machine Dask clusters starting with dask.distributed.LocalCluster or dask.distributed.Client (which defaults to using LocalCluster) would mistakenly configure their respective Dask workers to listen on external interfaces (typically with a randomly selected high port) rather than only on localhost. A Dask cluster created using this method (when running on a machine that has an applicable port exposed) could be used by a sophisticated attacker to achieve remote code execution.
19,flask-restplus,==0.12.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
20,markupsafe,==2.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
21,flask-cors,==3.0.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2020-25032,<3.0.9,Flask-CORS before 3.0.9 allows ../ directory traversal to access private resources because resource matching does not ensure that pathnames are in a canonical format. See CVE-2020-25032.
22,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2023-23934,<2.2.3,"Werkzeug 2.2.3 includes a fix for CVE-2023-23934: Browsers may allow ""nameless"" cookies that look like '=value' instead of 'key=value'. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like '=__Host-test=bad' for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie '=__Host-test=bad' as __Host-test=bad'. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key.
https://github.com/pallets/werkzeug/security/advisories/GHSA-px8h-6qxv-m22q"
23,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2023-25577,<2.2.3,"Werkzeug 2.2.3 includes a fix for CVE-2023-25577: Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses 'request.data', 'request.form', 'request.files', or 'request.get_data(parse_form_data=False)', it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers.
https://github.com/pallets/werkzeug/security/advisories/GHSA-xg9f-g7g7-2323"
24,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2019-14806,">=0,<0.15.3","Pallets Werkzeug before 0.15.3, when used with Docker, has insufficient debugger PIN randomness because Docker containers share the same machine id."
25,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2019-14322,">=0,<0.15.5","In Pallets Werkzeug before 0.15.5, SharedDataMiddleware mishandles drive names (such as C:) in Windows pathnames."
26,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2022-29361,">=0,<2.1.1",** DISPUTED ** Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project.
27,Werkzeug,==0.16.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,PVE-2021-37276,">=0.15.0,<0.15.5",:class:`~exceptions.BadRequestKeyError` in werkzeug 0.15.5 adds the ``KeyError`` message to the description if ``e.show_exception`` is set to ``True``. This is a more secure default than the original 0.15.0 behavior and makes it easier to control without losing information.
28,flask-wtf,==0.14.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
29,scikit-image,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
30,aniso8601,==4.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
31,pudb,==2018.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
32,python-igraph,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
33,sqlalchemy,==1.4.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,PVE-2022-51668,<2.0.0b1,"Sqlalchemy 2.0.0b1 avoids leaking cleartext passwords to the open for careless uses of str(engine.URL()) in logs and prints.
https://github.com/sqlalchemy/sqlalchemy/pull/8563"
34,sqlalchemy,==1.4.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2019-7164,"<=1.2.17,>=1.3.0b1,<=1.3.0b2","SQLAlchemy through 1.2.17 and 1.3.x through 1.3.0b2 allows SQL Injection via the order_by parameter.
https://github.com/sqlalchemy/sqlalchemy/issues/4481"
35,jsonschema,==2.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
36,itsdangerous,==1.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
37,Jinja2,==2.11.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2019-10906,">=0,<2.10.1","In Pallets Jinja before 2.10.1, str.format_map allows a sandbox escape."
38,Jinja2,==2.11.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2014-0012,">=0,<2.7.3","FileSystemBytecodeCache in Jinja2 2.7.2 does not properly create temporary directories, which allows local users to gain privileges by pre-creating a temporary directory with a user's uid.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-1402."
39,docutils,<0.18,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2009-5042,">=0.5,<0.6","Docutils 0.6 includes a fix for CVE-2009-5042: Python-docutils allows insecure usage of temporary files.
https://github.com/advisories/GHSA-cg75-6938-wx58"
40,pandas,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
41,celery,==4.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2021-33503,<5.2.0,"Celery 5.2.0 updates 'kombu' to v5.2.1, which includes dependencies updates that resolve security issues."
42,celery,==4.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2021-23727,<5.2.2,"Celery 5.2.2 includes a fix for CVE-2021-23727: Celery before 5.2.2. by default trusts the messages and metadata stored in backends (result stores). When reading task metadata from the backend, the data is deserialized. Given that an attacker can gain access to, or somehow manipulate the metadata within a celery backend, they could trigger a stored command injection vulnerability and potentially gain further access to the system."
43,celery,==4.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2011-4356,">=2.1,<2.2.8,>=2.3,<2.3.4,>=2.4,<2.4.4","Celery 2.1 and 2.2 before 2.2.8, 2.3 before 2.3.4, and 2.4 before 2.4.4 changes the effective id but not the real id during processing of the --uid and --gid arguments to celerybeat, celeryd_detach, celeryd-multi, and celeryev, which allows local users to gain privileges via vectors involving crafted code that is executed by the worker process."
44,celery,==4.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,PVE-2021-25646,">=4.0,<4.0.1","Celery 4.0.1 includes a fix for a code execution vulnerability: The default accept_content setting was set to allow deserialization of pickled messages in Celery 4.0.0. A workaround is to configure the 4.0.0 version to explicitly only allow json serialized messages.
https://github.com/celery/celery/blob/master/docs/sec/CELERYSA-0003.txt"
45,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
46,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
47,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
48,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
49,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
50,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
51,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
52,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
53,pycparser,==2.19,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
54,blinker,==1.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
55,urwid,==2.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
56,idna,==2.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
57,flask-jwt-extended,==3.13.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
58,flask-mail,==0.9.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
59,asn1crypto,==0.24.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
60,wtforms,==2.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,PVE-2021-42852,<3.0.0a1,"Wtforms 3.0.0a1 escape unsafe characters in label text, patching a potential XSS vulnerability.
https://github.com/wtforms/wtforms/commit/8529b953a0919300794f95e01a7713162908c8a6"
61,pytz,==2018.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
62,click,==7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,PVE-2022-47833,<8.0.0,"Click 8.0.0 uses 'mkstemp()' instead of the deprecated & insecure 'mktemp()'.
https://github.com/pallets/click/issues/1752"
63,flask-sqlalchemy,==2.5.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
64,cffi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
65,bcrypt,==3.1.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
66,pymysql,==0.9.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
67,flask-login,==0.4.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
68,flask-user,==1.0.1.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2021-23401,<=1.0.2.2,"This affects all versions of package Flask-User. When using the make_safe_url function, it is possible to bypass URL validation and redirect a user to an arbitrary URL by providing multiple back slashes such as /////evil.com/path or \\\evil.com/path. This vulnerability is only exploitable if an alternative WSGI server other than Werkzeug is used, or the default behaviour of Werkzeug is modified using 'autocorrect_location_header=False."
69,pygments,==2.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2022-40896,<2.15.0,"Pygments 2.15.0 includes a fix for CVE-2022-40896: In Pygments before 2.15.0 the lexers processing Smithy, SQL/SQL+Jinja or Java properties files from untrusted source are vulnerable to ReDoS."
70,pygments,==2.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2021-27291,">=1.1,<2.7.4","Pygments 2.7.4 includes a fix for CVE-2021-27291: In pygments 1.1+, fixed in 2.7.4, the lexers used to parse programming languages rely heavily on regular expressions. Some of the regular expressions have exponential or cubic worst-case complexity and are vulnerable to ReDoS. By crafting malicious input, an attacker can cause a denial of service."
71,pygments,==2.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2015-8557,">=1.2.2,<2.1",Pygments 2.1 includes a fix for CVE-2015-8557: The FontManager._get_nix_font_path function in formatters/img.py in pygments 1.2.2 through 2.0.2 allows remote attackers to execute arbitrary commands via shell metacharacters in a font name.
72,pygments,==2.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,CVE-2021-20270,">=1.5,<2.7.4","Pygments 2.7.4 includes a fix for CVE-2021-20270: An infinite loop in SMLLexer in Pygments versions 1.5 to 2.7.3 may lead to denial of service when performing syntax highlighting of a Standard ML (SML) source file, as demonstrated by input that only contains the ""exception"" keyword."
73,fsspec,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
74,passlib,==1.7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/lost/docs/requirements.readthedocs.txt,False,no one,no one,no one
