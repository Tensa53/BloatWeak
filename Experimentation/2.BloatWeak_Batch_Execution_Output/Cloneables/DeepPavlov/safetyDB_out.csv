,dep,version,filepath,bloated,cve,affected versions,advisory
0,fastapi,">=0.47.0,<=0.89.1",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2021-29510,<0.65.1,"Fastapi 0.65.1 upgrades pydantic pin, to handle CVE-2021-29510."
1,fastapi,">=0.47.0,<=0.89.1",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2021-32677,<0.65.2,"Fastapi version 0.65.2 includes a security fix for CVE-2021-32677: FastAPI versions lower than 0.65.2 that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack. In versions lower than 0.65.2, FastAPI would try to read the request payload as JSON even if the content-type header sent was not set to application/json or a compatible JSON media type (e.g. application/geo+json). A request with a content type of text/plain containing JSON data would be accepted and the JSON data would be extracted. Requests with content type text/plain are exempt from CORS preflights, for being considered Simple requests. The browser will execute them right away including cookies, and the text content could be a JSON string that would be parsed and accepted by the FastAPI application. The request data is now parsed as JSON only if the content-type header is application/json or another JSON compatible media type like application/geo+json. It's best to upgrade to the latest FastAPI, but if updating is not possible then a middleware or a dependency that checks the content-type header and aborts the request if it is not application/json or another JSON compatible content type can act as a mitigating workaround.
https://github.com/tiangolo/fastapi/security/advisories/GHSA-8h2j-cgx8-6xv7
https://github.com/tiangolo/fastapi/commit/fa7e3c996edf2d5482fff8f9d890ac2390dede4d"
2,fastapi,">=0.47.0,<=0.89.1",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2021-46708,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
3,fastapi,">=0.47.0,<=0.89.1",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2018-25031,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
4,fastapi,">=0.47.0,<=0.89.1",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2021-45958,<0.75.2,Fastapi 0.75.2 updates its dependency 'ujson' ranges to include a security fix.
5,fastapi,">=0.47.0,<=0.89.1",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2023-30798,<0.92.0,Fastapi 0.92.0 updates its dependency 'Starlette' to v0.25.0 to include a security fix.
6,fastapi,">=0.47.0,<=0.89.1",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2023-29159,<0.95.2,Fastapi 0.95.2 updates its dependency 'Starlette' to versions '>=0.27.0' to include a security fix.
7,pandas,">=1.0.0,<1.6.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
8,pydantic,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2020-10735,<1.10.2,"Pydantic 1.10.2 prevents long strings as int inputs to fix CVE-2020-10735.
https://github.com/pydantic/pydantic/commit/eccd85e4d012e70ffbd81f379179da900d4621c5"
9,pydantic,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2021-29510,">=1.8.0a1,<1.8.2,>=1.7.0a0,<1.7.4,<1.6.2","Pydantic 1.8.2, 1.7.4 and 1.6.2 include a fix for CVE-2021-29510: In affected versions of Pydantic passing either `'infinity'`, `'inf'` or `float('inf')` (or their negatives) to `datetime` or `date` fields causes validation to run forever with 100% CPU usage (on one CPU). Pydantic has been patched with fixes available in the following versions: v1.8.2, v1.7.4, v1.6.2. All these versions are available on pypi(https://pypi.org/project/pydantic/#history), and will be available on conda-forge(https://anaconda.org/conda-forge/pydantic) soon. See the changelog(https://pydantic-docs.helpmanual.io/) for details. If you absolutely can't upgrade, you can work around this risk using a validator(https://pydantic-docs.helpmanual.io/usage/validators/) to catch these values. This is not an ideal solution (in particular you'll need a slightly different function for datetimes), instead of a hack like this you should upgrade pydantic. If you are not using v1.8.x, v1.7.x or v1.6.x and are unable to upgrade to a fixed version of pydantic, please create an issue at https://github.com/samuelcolvin/pydantic/issues requesting a back-port, and we will endeavour to release a patch for earlier versions of pydantic."
10,prometheus-client,">=0.13.0,<=1.16.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,no one,no one,no one
11,nltk,">=3.2.4,<3.10.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,PVE-2023-54914,<3.6,"Nltk 3.6 includes a fix for a REDoS vulnerability.
https://github.com/nltk/nltk/pull/2597"
12,nltk,">=3.2.4,<3.10.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2021-43854,<3.6.5,"Nltk 3.6.5 includes a fix for CVE-2021-43854: Versions prior to 3.6.5 are vulnerable to regular expression denial of service (ReDoS) attacks. The vulnerability is present in PunktSentenceTokenizer, sent_tokenize and word_tokenize. Any users of this class, or these two functions, are vulnerable to the ReDoS attack. In short, a specifically crafted long input to any of these vulnerable functions will cause them to take a significant amount of execution time. If your program relies on any of the vulnerable functions for tokenizing unpredictable user input, it's strongly recommended upgrading to a version of NLTK without the vulnerability. For users unable to upgrade the execution time can be bounded by limiting the maximum length of an input to any of the vulnerable functions.
https://github.com/nltk/nltk/security/advisories/GHSA-f8m6-h2c7-8h9x
https://github.com/nltk/nltk/issues/2866"
13,nltk,">=3.2.4,<3.10.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2019-14751,">=0,<3.4.5","NLTK Downloader before 3.4.5 is vulnerable to a directory traversal, allowing attackers to write arbitrary files via a (dot dot slash) in an NLTK package (ZIP archive) that is mishandled during extraction."
14,nltk,">=3.2.4,<3.10.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2021-3828,">=0,<3.6.4",Nltk before 3.6.4 is vulnerable to Inefficient Regular Expression Complexity.
15,nltk,">=3.2.4,<3.10.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2021-3842,">=0,<3.6.6",Nltk before 3.6.6 is vulnerable to Inefficient Regular Expression Complexity.
16,requests,">=2.19.0,<3.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2018-18074,<=2.19.1,"Requests before 2.20.0 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
17,requests,">=2.19.0,<3.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
18,requests,">=2.19.0,<3.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
19,scipy,<1.10.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
20,numpy,<1.24,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,no one,no one,no one
21,filelock,">=3.0.0,<3.10.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,no one,no one,no one
22,pybind11,==2.10.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,no one,no one,no one
23,tqdm,">=4.42.0,<4.65.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,no one,no one,no one
24,scikit-learn,">=0.24,<1.1.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
25,scikit-learn,">=0.24,<1.1.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
26,scikit-learn,">=0.24,<1.1.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
27,uvicorn,">=0.13.0,<0.19.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/requirements.txt,False,no one,no one,no one
28,flake8,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,no one,no one,no one
29,pytest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,no one,no one,no one
30,pytest-instafail,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,no one,no one,no one
31,pexpect,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,no one,no one,no one
32,sphinx,==3.5.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,no one,no one,no one
33,sphinx,==4.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,no one,no one,no one
34,sphinx_rtd_theme,==0.5.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,no one,no one,no one
35,docutils,"<0.17,>=0.12",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,CVE-2009-5042,">=0.5,<0.6","Docutils 0.6 includes a fix for CVE-2009-5042: Python-docutils allows insecure usage of temporary files.
https://github.com/advisories/GHSA-cg75-6938-wx58"
36,nbsphinx,==0.8.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,no one,no one,no one
37,ipykernel,==5.5.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,no one,no one,no one
38,jinja2,<=3.0.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,CVE-2019-10906,">=0,<2.10.1","In Pallets Jinja before 2.10.1, str.format_map allows a sandbox escape."
39,jinja2,<=3.0.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,CVE-2014-0012,">=0,<2.7.3","FileSystemBytecodeCache in Jinja2 2.7.2 does not properly create temporary directories, which allows local users to gain privileges by pre-creating a temporary directory with a user's uid.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-1402."
40,sphinx-copybutton,==0.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,no one,no one,no one
41,pandoc,==2.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,no one,no one,no one
42,ipython_genutils,==0.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,no one,no one,no one
43,boto3,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/setup.py,False,PVE-2021-41708,<1.4.5,"Boto3 version 1.4.5 fixes an information exposure vulnerability: The boto logger boto3.resources.action, which propagates to root logger, logs the entire uploaded bytes at INFO level.
https://github.com/boto/boto3/issues/1017"
44,udapi,==0.3.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/udapi.txt,False,no one,no one,no one
45,navec,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/slovnet.txt,False,no one,no one,no one
46,slovnet,==0.5.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/slovnet.txt,False,no one,no one,no one
47,sortedcontainers,==2.4.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/sortedcontainers.txt,False,no one,no one,no one
48,rapidfuzz,==2.1.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/rapidfuzz.txt,False,no one,no one,no one
49,whapi,==0.6.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/whapi.txt,False,no one,no one,no one
50,bs4,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/whapi.txt,False,no one,no one,no one
51,sacremoses,==0.0.53,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/sacremoses.txt,False,no one,no one,no one
52,pypi-kenlm,==0.1.20220713,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/kenlm.txt,False,no one,no one,no one
53,lxml,==4.9.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/lxml.txt,False,CVE-2014-3146,<3.3.5,Incomplete blacklist vulnerability in the lxml.html.clean module in lxml before 3.3.5 allows remote attackers to conduct cross-site scripting (XSS) attacks via control characters in the link scheme to the clean_html function.
54,lxml,==4.9.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/lxml.txt,False,CVE-2018-19787,<4.2.5,"Lxml 4.2.5 includes a fix for CVE-2018-19787: lxml/html/clean.py in the lxml.html.clean module does not remove javascript: URLs that use escaping, allowing a remote attacker to conduct XSS attacks, as demonstrated by ""j a v a s c r i p t:"" in Internet Explorer. This is a similar issue to CVE-2014-3146."
55,lxml,==4.9.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/lxml.txt,False,PVE-2021-39195,<4.4.0,"In lxml before 4.4.0, when writing to file paths that contain the URL escape character '%', the file path could wrongly be mangled by URL unescaping and thus write to a different file or directory.  Code that writes to file paths that are provided by untrusted sources, but that must work with previous versions of lxml, should best either reject paths that contain '%' characters, or otherwise make sure that the path does not contain maliciously injected '%XX' URL hex escapes for paths like '../'.
https://github.com/lxml/lxml/commit/0245aba002f069a0b157282707bdf77418d1b5be"
56,lxml,==4.9.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/lxml.txt,False,CVE-2020-27783,<4.6.2,"Lxml 4.6.2 includes a fix for CVE-2020-27783: A XSS vulnerability was discovered in python-lxml's clean module. The module's parser didn't properly imitate browsers, which caused different behaviors between the sanitizer and the user's page. A remote attacker could exploit this flaw to run arbitrary HTML/JS code."
57,lxml,==4.9.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/lxml.txt,False,CVE-2021-28957,<4.6.3,"Lxml version 4.6.3 includes a fix for CVE-2021-28957: An XSS vulnerability was discovered in python-lxml's clean module versions before 4.6.3. When disabling the safe_attrs_only and forms arguments, the Cleaner class does not remove the formation attribute allowing for JS to bypass the sanitizer. A remote attacker could exploit this flaw to run arbitrary JS code on users who interact with incorrectly sanitized HTML.
https://bugs.launchpad.net/lxml/+bug/1888153"
58,lxml,==4.9.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/lxml.txt,False,CVE-2021-43818,<4.6.5,"Lxml 4.6.5 includes a fix for CVE-2021-43818: Prior to version 4.6.5, the HTML Cleaner in lxml.html lets certain crafted script content pass through, as well as script content in SVG files embedded using data URIs. Users that employ the HTML cleaner in a security relevant context should upgrade to lxml 4.6.5 to receive a patch."
59,lxml,==4.9.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/lxml.txt,False,CVE-2022-2309,<4.9.1,"Lxml 4.9.1 includes a fix for CVE-2022-2309: NULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn't be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered."
60,transformers,">=4.13.0,<4.25.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/transformers.txt,False,CVE-2022-1941,<4.23.0,Transformers 4.23.0 updates its dependency 'protobuf' requirement to '<=3.20.2' to include a security fix.
61,transformers,">=4.13.0,<4.25.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/transformers.txt,False,PVE-2022-51450,<4.23.0,"Transformers 4.23.0 includes a fix for a link vulnerable to repojacking.
https://github.com/huggingface/transformers/commit/ce2620194b4a8f070cd29504d34a79758affdf95"
62,hdt,==2.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/hdt.txt,False,no one,no one,no one
63,torch,">=1.6.0,<1.14.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/pytorch.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
64,fasttext,==0.9.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/fasttext.txt,False,no one,no one,no one
65,datasets,">=1.16.0,<2.5.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/datasets.txt,False,no one,no one,no one
66,spacy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/en_core_web_sm.txt,False,no one,no one,no one
67,spacy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/ru_core_news_sm.txt,False,no one,no one,no one
68,pytorch-crf,==0.7.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/torchcrf.txt,False,no one,no one,no one
69,opt-einsum,==3.3.*,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/opt_einsum.txt,False,no one,no one,no one
70,razdel,==0.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/DeepPavlov/deeppavlov/requirements/razdel.txt,False,no one,no one,no one
