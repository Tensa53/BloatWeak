,dep,version,filepath,bloated,cve,affected versions,advisory
0,deprecated,>=1.2.13,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
1,bpemb,>=0.3.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
2,mpld3,>=0.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
3,gensim,>=4.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
4,pytorch_revgrad,>=0.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
5,pptree,>=3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
6,transformers,">=4.18.0,<5.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,CVE-2022-1941,<4.23.0,Transformers 4.23.0 updates its dependency 'protobuf' requirement to '<=3.20.2' to include a security fix.
7,transformers,">=4.18.0,<5.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,PVE-2022-51450,<4.23.0,"Transformers 4.23.0 includes a fix for a link vulnerable to repojacking.
https://github.com/huggingface/transformers/commit/ce2620194b4a8f070cd29504d34a79758affdf95"
8,boto3,>=1.20.27,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
9,matplotlib,>=2.2.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
10,tabulate,>=0.8.10,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
11,transformer-smaller-training-vocab,>=0.2.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
12,scikit-learn,>=1.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
13,scikit-learn,>=1.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
14,regex,>=2022.1.18,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
15,sqlitedict,>=2.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
16,tqdm,>=4.63.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
17,urllib3,"<2.0.0,>=1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,CVE-2018-20060,<1.23,"urllib3 before version 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext."
18,urllib3,"<2.0.0,>=1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,CVE-2019-11324,<1.24.2,"The urllib3 library before 1.24.2 for Python mishandles certain cases where the desired set of CA certificates is different from the OS store of CA certificates, which results in SSL connections succeeding in situations where a verification failure is the correct outcome. This is related to use of the ssl_context, ca_certs, or ca_certs_dir argument."
19,urllib3,"<2.0.0,>=1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,CVE-2020-26137,<1.25.9,"Urllib3 1.25.9 includes a fix for CVE-2020-26137: Urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). NOTE: this is similar to CVE-2020-26116.
https://github.com/python/cpython/issues/83784"
20,urllib3,"<2.0.0,>=1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,CVE-2021-33503,<1.26.5,"Urllib3 1.26.5 includes a fix for CVE-2021-33503: When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect."
21,urllib3,"<2.0.0,>=1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,CVE-2019-11236,<=1.24.1,"In the urllib3 library through 1.24.1 for Python, CRLF injection is possible if the attacker controls the request parameter."
22,urllib3,"<2.0.0,>=1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,CVE-2020-7212,">=1.25.2,<=1.25.7","The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2). See: CVE-2020-7212."
23,urllib3,"<2.0.0,>=1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,CVE-2021-28363,">=1.26.0,<1.26.4","Urllib3 1.26.4 includes a fix for CVE-2021-28363: The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.
https://github.com/urllib3/urllib3/security/advisories/GHSA-5phf-pp7p-vc2r"
24,wikipedia-api,>=0.5.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
25,lxml,>=4.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,CVE-2022-2309,<4.9.1,"Lxml 4.9.1 includes a fix for CVE-2022-2309: NULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn't be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered."
26,conllu,>=4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
27,gdown,>=4.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
28,python-dateutil,>=2.8.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
29,langdetect,>=1.0.9,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
30,more-itertools,>=8.13.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
31,torch,">=1.5.0,!=1.8",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
32,huggingface-hub,>=0.10.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,PVE-2023-54919,<0.13.4,"Huggingface-hub 0.13.4 includes a security fix: Malicious repo can overwrite any file on disk.
https://github.com/huggingface/huggingface_hub/pull/1429"
33,segtok,>=1.5.11,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
34,janome,>=0.4.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
35,ftfy,>=6.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements.txt,False,no one,no one,no one
36,pytest-mypy,>=0.10.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements-dev.txt,False,no one,no one,no one
37,pytest-black-ng,>=0.4.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements-dev.txt,False,no one,no one,no one
38,pytest-ruff,>=0.0.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements-dev.txt,False,no one,no one,no one
39,konoha,">=4.6.5,<5.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements-dev.txt,False,no one,no one,no one
40,pytest-github-actions-annotate-failures,>=0.1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements-dev.txt,False,no one,no one,no one
41,types-requests,>=2.28.11.17,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements-dev.txt,False,no one,no one,no one
42,types-Deprecated,>=1.2.9.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements-dev.txt,False,no one,no one,no one
43,types-tabulate,>=0.9.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements-dev.txt,False,no one,no one,no one
44,pytest,>=7.3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements-dev.txt,False,no one,no one,no one
45,mypy,>=1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements-dev.txt,False,no one,no one,no one
46,types-dataclasses,>=0.6.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements-dev.txt,False,no one,no one,no one
47,black,>=23.3.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/requirements-dev.txt,False,no one,no one,no one
48,deprecated,>=1.2.13,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
49,bpemb,>=0.3.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
50,mpld3,>=0.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
51,gensim,>=4.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
52,pytorch_revgrad,>=0.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
53,pptree,>=3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
54,transformers,">=4.18.0,<5.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,CVE-2022-1941,<4.23.0,Transformers 4.23.0 updates its dependency 'protobuf' requirement to '<=3.20.2' to include a security fix.
55,transformers,">=4.18.0,<5.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,PVE-2022-51450,<4.23.0,"Transformers 4.23.0 includes a fix for a link vulnerable to repojacking.
https://github.com/huggingface/transformers/commit/ce2620194b4a8f070cd29504d34a79758affdf95"
56,boto3,>=1.20.27,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
57,matplotlib,>=2.2.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
58,tabulate,>=0.8.10,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
59,transformer-smaller-training-vocab,>=0.2.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
60,scikit-learn,>=1.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
61,scikit-learn,>=1.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
62,regex,>=2022.1.18,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
63,sqlitedict,>=2.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
64,tqdm,>=4.63.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
65,urllib3,"<2.0.0,>=1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,CVE-2018-20060,<1.23,"urllib3 before version 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext."
66,urllib3,"<2.0.0,>=1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,CVE-2019-11324,<1.24.2,"The urllib3 library before 1.24.2 for Python mishandles certain cases where the desired set of CA certificates is different from the OS store of CA certificates, which results in SSL connections succeeding in situations where a verification failure is the correct outcome. This is related to use of the ssl_context, ca_certs, or ca_certs_dir argument."
67,urllib3,"<2.0.0,>=1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,CVE-2020-26137,<1.25.9,"Urllib3 1.25.9 includes a fix for CVE-2020-26137: Urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). NOTE: this is similar to CVE-2020-26116.
https://github.com/python/cpython/issues/83784"
68,urllib3,"<2.0.0,>=1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,CVE-2021-33503,<1.26.5,"Urllib3 1.26.5 includes a fix for CVE-2021-33503: When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect."
69,urllib3,"<2.0.0,>=1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,CVE-2019-11236,<=1.24.1,"In the urllib3 library through 1.24.1 for Python, CRLF injection is possible if the attacker controls the request parameter."
70,urllib3,"<2.0.0,>=1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,CVE-2020-7212,">=1.25.2,<=1.25.7","The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2). See: CVE-2020-7212."
71,urllib3,"<2.0.0,>=1.0.0",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,CVE-2021-28363,">=1.26.0,<1.26.4","Urllib3 1.26.4 includes a fix for CVE-2021-28363: The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.
https://github.com/urllib3/urllib3/security/advisories/GHSA-5phf-pp7p-vc2r"
72,wikipedia-api,>=0.5.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
73,lxml,>=4.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,CVE-2022-2309,<4.9.1,"Lxml 4.9.1 includes a fix for CVE-2022-2309: NULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn't be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered."
74,conllu,>=4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
75,gdown,>=4.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
76,python-dateutil,>=2.8.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
77,langdetect,>=1.0.9,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
78,more-itertools,>=8.13.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
79,torch,">=1.5.0,!=1.8",/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
80,huggingface-hub,>=0.10.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,PVE-2023-54919,<0.13.4,"Huggingface-hub 0.13.4 includes a security fix: Malicious repo can overwrite any file on disk.
https://github.com/huggingface/huggingface_hub/pull/1429"
81,segtok,>=1.5.11,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
82,janome,>=0.4.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
83,ftfy,>=6.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/flair/setup.py,False,no one,no one,no one
