,dep,version,filepath,bloated,cve,affected versions,advisory
0,joblib,>=1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,PVE-2022-51394,<1.1.1,"Joblib 1.1.1 fixes a security issue where 'eval(pre_dispatch)' could potentially run arbitrary code. Now only basic numerics are supported.
https://github.com/joblib/joblib/pull/1327"
1,joblib,>=1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2022-21797,<1.2.0,"Joblib 1.2.0 includes a fix for CVE-2022-21797: The package joblib from 0 and before 1.2.0 is vulnerable to Arbitrary Code Execution via the pre_dispatch flag in Parallel() class due to the eval() statement.
https://github.com/joblib/joblib/issues/1128"
2,joblib,>=1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,PVE-2022-51041,<1.2.0,"Joblib 1.2.0 fixes a security issue where 'eval(pre_dispatch)' could potentially run arbitrary code. Now only basic numerics are supported.
https://github.com/joblib/joblib/pull/1327"
3,pandas,>=1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
4,category_encoders,>=2.2.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,no one,no one,no one
5,typing-extensions,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,no one,no one,no one
6,numpy,>=1.19.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
7,numpy,>=1.19.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
8,numpy,>=1.19.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
9,numpy,>=1.19.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
10,matplotlib,>=3.2.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,no one,no one,no one
11,scikit-learn,>=1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
12,scikit-learn,>=1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
13,scipy,>=1.6.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
14,markdown,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,no one,no one,no one
15,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2015-4707,<3.2.0,Cross-site scripting (XSS) vulnerability in IPython before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/notebooks path.
16,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2015-5607,<3.2.1,"Ipython 3.2.1 includes a fix for CVE-2015-5607: Cross-site request forgery in the REST API in IPython 2 and 3.
https://github.com/ipython/ipython/commit/1415a9710407e7c14900531813c15ba6165f0816"
17,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2015-6938,<3.2.2,"Cross-site scripting (XSS) vulnerability in the file browser in notebook/notebookapp.py in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to inject arbitrary web script or HTML via a folder name.  NOTE: this was originally reported as a cross-site request forgery (CSRF) vulnerability, but this may be inaccurate."
18,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2015-7337,<3.2.2,"The editor in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to execute arbitrary JavaScript code via a crafted file, which triggers a redirect to files/, related to MIME types."
19,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2023-24816,<8.10.0,"IPython 8.10.0 includes a fix for CVE-2023-24816: Versions prior to 8.10.0 are subject to a command injection vulnerability with very specific prerequisites. This vulnerability requires that the function 'IPython.utils.terminal.set_term_title' be called on Windows in a Python environment where ctypes is not available. The dependency on 'ctypes' in 'IPython.utils._process_win32' prevents the vulnerable code from ever being reached in the ipython binary. However, as a library that could be used by another tool 'set_term_title' could be called and hence introduce a vulnerability. If an attacker get untrusted input to an instance of this function they would be able to inject shell commands as current process and limited to the scope of the current process. As a workaround, users should ensure that any calls to the 'IPython.utils.terminal.set_term_title' function are done with trusted or filtered input.
https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7"
20,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2014-3429,">=0.12,<1.2","IPython Notebook 0.12 through 1.x before 1.2 does not validate the origin of websocket requests, which allows remote attackers to execute arbitrary code by leveraging knowledge of the kernel id and a crafted page."
21,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2016-6524,">=2.0.0,<4.0.0",Ipython 4.0 includes a fix for CVE-2016-6524: Untrusted LaTeX output could be added to the page in a way that could execute javascript.
22,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2015-4706,">=3.0.0,<3.2.0",Cross-site scripting (XSS) vulnerability in IPython 3.x before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/contents path.
23,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2022-21699,">=8.0.0a0,<8.0.1,>=7.17.0,<7.31.1,>=6.0.0a0,<7.16.3,<5.11","Ipython versions 8.0.1, 7.31.1, 7.16.3 and 5.11 include a fix for CVE-2022-21699: Affected versions are subject to an arbitrary code execution vulnerability achieved by not properly managing cross user temporary files. This vulnerability allows one user to run code as another on the same machine.
https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x"
24,wordcloud,>=1.8.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,no one,no one,no one
25,optuna,>=2.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,no one,no one,no one
26,catboost,>=0.24.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,CVE-2017-15288,<0.26,"Catboost 0.26 updates version of 'scala' to v2.11.12 for security reasons.
https://github.com/catboost/catboost/issues/1632"
27,dtreeviz,>=2.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,no one,no one,no one
28,tabulate,>=0.8.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,no one,no one,no one
29,scikit-plot,==0.3.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,no one,no one,no one
30,seaborn,>=0.11.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,no one,no one,no one
31,lightgbm,>=3.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,no one,no one,no one
32,xgboost,>=1.3.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,no one,no one,no one
33,shap,>=0.36.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements.txt,False,no one,no one,no one
34,coveralls,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements_dev.txt,False,PVE-2021-25671,<0.1.1,coveralls 0.1.1 removes repo_token from verbose output for security reasons.
35,pytest,==5.3.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements_dev.txt,False,no one,no one,no one
36,black,==19.3b0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements_dev.txt,False,no one,no one,no one
37,pytest-cov,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/requirements_dev.txt,False,no one,no one,no one
38,joblib,>=1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,PVE-2022-51394,<1.1.1,"Joblib 1.1.1 fixes a security issue where 'eval(pre_dispatch)' could potentially run arbitrary code. Now only basic numerics are supported.
https://github.com/joblib/joblib/pull/1327"
39,joblib,>=1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2022-21797,<1.2.0,"Joblib 1.2.0 includes a fix for CVE-2022-21797: The package joblib from 0 and before 1.2.0 is vulnerable to Arbitrary Code Execution via the pre_dispatch flag in Parallel() class due to the eval() statement.
https://github.com/joblib/joblib/issues/1128"
40,joblib,>=1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,PVE-2022-51041,<1.2.0,"Joblib 1.2.0 fixes a security issue where 'eval(pre_dispatch)' could potentially run arbitrary code. Now only basic numerics are supported.
https://github.com/joblib/joblib/pull/1327"
41,pandas,>=1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
42,category_encoders,>=2.2.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,no one,no one,no one
43,typing-extensions,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,no one,no one,no one
44,numpy,>=1.19.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
45,numpy,>=1.19.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
46,numpy,>=1.19.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
47,numpy,>=1.19.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
48,matplotlib,>=3.2.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,no one,no one,no one
49,scikit-learn,>=1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
50,scikit-learn,>=1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
51,scipy,>=1.6.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
52,markdown,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,no one,no one,no one
53,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2015-4707,<3.2.0,Cross-site scripting (XSS) vulnerability in IPython before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/notebooks path.
54,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2015-5607,<3.2.1,"Ipython 3.2.1 includes a fix for CVE-2015-5607: Cross-site request forgery in the REST API in IPython 2 and 3.
https://github.com/ipython/ipython/commit/1415a9710407e7c14900531813c15ba6165f0816"
55,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2015-6938,<3.2.2,"Cross-site scripting (XSS) vulnerability in the file browser in notebook/notebookapp.py in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to inject arbitrary web script or HTML via a folder name.  NOTE: this was originally reported as a cross-site request forgery (CSRF) vulnerability, but this may be inaccurate."
56,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2015-7337,<3.2.2,"The editor in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to execute arbitrary JavaScript code via a crafted file, which triggers a redirect to files/, related to MIME types."
57,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2023-24816,<8.10.0,"IPython 8.10.0 includes a fix for CVE-2023-24816: Versions prior to 8.10.0 are subject to a command injection vulnerability with very specific prerequisites. This vulnerability requires that the function 'IPython.utils.terminal.set_term_title' be called on Windows in a Python environment where ctypes is not available. The dependency on 'ctypes' in 'IPython.utils._process_win32' prevents the vulnerable code from ever being reached in the ipython binary. However, as a library that could be used by another tool 'set_term_title' could be called and hence introduce a vulnerability. If an attacker get untrusted input to an instance of this function they would be able to inject shell commands as current process and limited to the scope of the current process. As a workaround, users should ensure that any calls to the 'IPython.utils.terminal.set_term_title' function are done with trusted or filtered input.
https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7"
58,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2014-3429,">=0.12,<1.2","IPython Notebook 0.12 through 1.x before 1.2 does not validate the origin of websocket requests, which allows remote attackers to execute arbitrary code by leveraging knowledge of the kernel id and a crafted page."
59,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2016-6524,">=2.0.0,<4.0.0",Ipython 4.0 includes a fix for CVE-2016-6524: Untrusted LaTeX output could be added to the page in a way that could execute javascript.
60,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2015-4706,">=3.0.0,<3.2.0",Cross-site scripting (XSS) vulnerability in IPython 3.x before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/contents path.
61,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2022-21699,">=8.0.0a0,<8.0.1,>=7.17.0,<7.31.1,>=6.0.0a0,<7.16.3,<5.11","Ipython versions 8.0.1, 7.31.1, 7.16.3 and 5.11 include a fix for CVE-2022-21699: Affected versions are subject to an arbitrary code execution vulnerability achieved by not properly managing cross user temporary files. This vulnerability allows one user to run code as another on the same machine.
https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x"
62,wordcloud,>=1.8.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,no one,no one,no one
63,optuna,>=2.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,no one,no one,no one
64,catboost,>=0.24.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,CVE-2017-15288,<0.26,"Catboost 0.26 updates version of 'scala' to v2.11.12 for security reasons.
https://github.com/catboost/catboost/issues/1632"
65,dtreeviz,>=2.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,no one,no one,no one
66,tabulate,>=0.8.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,no one,no one,no one
67,scikit-plot,==0.3.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,no one,no one,no one
68,seaborn,>=0.11.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,no one,no one,no one
69,lightgbm,>=3.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,no one,no one,no one
70,xgboost,>=1.3.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,no one,no one,no one
71,shap,>=0.36.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/mljar-supervised/setup.py,False,no one,no one,no one
