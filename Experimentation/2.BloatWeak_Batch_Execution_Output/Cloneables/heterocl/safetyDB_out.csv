,dep,version,filepath,bloated,cve,affected versions,advisory
0,tabulate,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,no one,no one,no one
1,attrs,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,no one,no one,no one
2,xmltodict,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,no one,no one,no one
3,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,CVE-2017-18342,<4,Pyyaml before 4 uses ``yaml.load`` which has been assigned CVE-2017-18342.
4,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,CVE-2020-1747,<5.3.1,"Pyyaml 5.3.1 includes a fix for CVE-2020-1747: A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
5,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
6,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
7,pandas,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
8,imageio,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,PVE-2021-37902,<2.6.0,"Imageio 2.6.0 fixes a code injection vulnerability for Windows users that have dcmtk installed, and where an attacker can set the filename.
https://github.com/imageio/imageio/commit/5b398716d518cd14e8b978ea3cd8ec6c0236c1d8"
9,psutil,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,CVE-2019-18874,<=5.6.5,psutil (aka python-psutil) through 5.6.5 can have a double free. This occurs because of refcount mishandling within a while or for loop that converts system data into a Python object. See CVE-2019-18874.
10,networkx,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,no one,no one,no one
11,pybind11,>=2.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,no one,no one,no one
12,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
13,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
14,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
15,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
16,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
17,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
18,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
19,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
20,pytest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,no one,no one,no one
21,matplotlib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,no one,no one,no one
22,sympy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,no one,no one,no one
23,dataclasses,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/requirements.txt,False,no one,no one,no one
24,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
25,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
26,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
27,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
28,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
29,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
30,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
31,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
32,pybind11,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
33,pip,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2013-1888,<1.3,pip before 1.3 allows local users to overwrite arbitrary files via a symlink attack on a file in the /tmp/pip-build temporary directory.
34,pip,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2013-1629,<1.3,"pip before 1.3 uses HTTP to retrieve packages from the PyPI repository, and does not perform integrity checks on package contents, which allows man-in-the-middle attackers to execute arbitrary code via a crafted response to a ""pip install"" operation."
35,pip,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,PVE-2021-25959,<1.4,pip 1.4 includes a security patch to pip's ssl support related to certificate DNS wildcard matching.
36,pip,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2013-5123,<1.5,"The mirroring support (-M, --use-mirrors) in Python Pip before 1.5 uses insecure DNS querying and authenticity checks which allows attackers to perform man-in-the-middle attacks. See CVE-2013-5123."
37,pip,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2019-20916,<19.2,"Pip before 19.2 allows Directory Traversal when a URL is given in an install command, because a Content-Disposition header can have ../ in a filename, as demonstrated by overwriting the /root/.ssh/authorized_keys file. This occurs in _download_http_url in _internal/download.py."
38,pip,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2021-3572,<21.1,A flaw was found in python-pip in the way it handled Unicode separators in git references. A remote attacker could possibly use this issue to install a different revision on a repository. The highest threat from this vulnerability is to data integrity. This is fixed in python-pip version 21.1.
39,pip,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2021-28363,<21.1,Pip 21.1 updates its dependency 'urllib3' to v1.26.4 due to security issues.
40,pip,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2014-8991,<6.0,pip before 6.0 is not using a randomized and secure default build directory when possible. (CVE-2014-8991).
41,pip,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2015-2296,<6.1.0,Pip 6.1.0 updates its bundled dependency 'requests' to 2.6.0 to include a security fix.
42,cmake,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
43,tabulate,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
44,attrs,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
45,xmltodict,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
46,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2017-18342,<4,Pyyaml before 4 uses ``yaml.load`` which has been assigned CVE-2017-18342.
47,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2020-1747,<5.3.1,"Pyyaml 5.3.1 includes a fix for CVE-2020-1747: A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
48,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
49,PyYAML,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
50,pandas,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
51,imageio,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,PVE-2021-37902,<2.6.0,"Imageio 2.6.0 fixes a code injection vulnerability for Windows users that have dcmtk installed, and where an attacker can set the filename.
https://github.com/imageio/imageio/commit/5b398716d518cd14e8b978ea3cd8ec6c0236c1d8"
52,psutil,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,CVE-2019-18874,<=5.6.5,psutil (aka python-psutil) through 5.6.5 can have a double free. This occurs because of refcount mishandling within a while or for loop that converts system data into a Python object. See CVE-2019-18874.
53,networkx,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
54,pybind11,>=2.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
55,pytest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
56,matplotlib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
57,sympy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
58,dataclasses,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
59,piccolo-theme,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
60,sphinx-copybutton,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
61,sphinx,==4.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
62,sphinx-gallery,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
63,sphinxcontrib-googleanalytics,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
64,sphinx_rtd_theme,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
65,autodocsumm,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/setup.py,False,no one,no one,no one
66,piccolo-theme,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,no one,no one,no one
67,sphinx-copybutton,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,no one,no one,no one
68,sphinx,==4.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,no one,no one,no one
69,matplotlib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,no one,no one,no one
70,sphinx-gallery,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,no one,no one,no one
71,sphinxcontrib-googleanalytics,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,no one,no one,no one
72,sphinx_rtd_theme,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,no one,no one,no one
73,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
74,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
75,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
76,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
77,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
78,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
79,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
80,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
81,autodocsumm,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/heterocl/docs/requirements.txt,False,no one,no one,no one
