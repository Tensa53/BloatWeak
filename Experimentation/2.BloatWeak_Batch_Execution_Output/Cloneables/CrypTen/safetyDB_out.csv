,dep,version,filepath,bloated,cve,affected versions,advisory
0,future,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.txt,False,CVE-2022-40899,<=0.18.2,"Future 0.18.2 and earlier allows remote attackers to cause a denial of service via crafted Set-Cookie header from malicious web server.
https://github.com/PythonCharmers/python-future/blob/master/src/future/backports/http/cookiejar.py#L215
https://github.com/python/cpython/pull/17157"
1,omegaconf,>=2.0.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.txt,False,no one,no one,no one
2,onnx,>=1.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.txt,False,CVE-2022-25882,<1.13.0,Onnx 1.13.0 includes a fix for CVE-2022-25882: Versions of the package onnx before 1.13.0 are vulnerable to Directory Traversal as the external_data field of the tensor proto can have a path to the file which is outside the model current directory or user-provided directory.
3,pandas,>=1.2.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
4,torchvision,>=0.9.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.txt,False,no one,no one,no one
5,scipy,>=1.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
6,sklearn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.txt,False,no one,no one,no one
7,torch,>=1.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
8,pyyaml,>=5.3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.txt,False,CVE-2020-14343,<5.4,"Pyyaml version 5.4 includes a fix for CVE-2020-14343: A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.
https://bugzilla.redhat.com/show_bug.cgi?id=1860466"
9,pyyaml,>=5.3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.txt,False,CVE-2019-20477,">=5.1,<=5.1.2","PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. See CVE-2019-20477. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
10,tensorboard,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.txt,False,no one,no one,no one
11,boto3,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.examples.txt,False,PVE-2021-41708,<1.4.5,"Boto3 version 1.4.5 fixes an information exposure vulnerability: The boto logger boto3.resources.action, which propagates to root logger, logs the entire uploaded bytes at INFO level.
https://github.com/boto/boto3/issues/1017"
12,paramiko,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.examples.txt,False,CVE-2018-7750,"<1.17.6,>=2.0.0,<2.0.8,>=2.1.0,<2.1.5,>=2.2.0,<2.2.3,>=2.3.0,<2.3.2,==2.4.0,>=1.18.0,<1.18.5","transport.py in the SSH server implementation of Paramiko before 1.17.6, 1.18.x before 1.18.5, 2.0.x before 2.0.8, 2.1.x before 2.1.5, 2.2.x before 2.2.3, 2.3.x before 2.3.2, and 2.4.x before 2.4.1 does not properly check whether authentication is completed before processing other requests, as demonstrated by channel-open. A customized SSH client can simply skip the authentication step."
13,paramiko,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.examples.txt,False,CVE-2008-0299,<1.7.2,"Paramiko 1.7.2 includes a fix for CVE-2008-0299: common.py in Paramiko 1.7.1 and earlier, when using threads or forked processes, does not properly use RandomPool, which allows one session to obtain sensitive information from another session by predicting the state of the pool."
14,paramiko,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.examples.txt,False,CVE-2022-24302,">=0,<2.9.3,>=2.10.0,<2.10.1","In Paramiko before 2.10.1, a race condition (between creation and chmod) in the write_private_key_file function could allow unauthorized information disclosure."
15,visdom,>=0.1.8.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/requirements.examples.txt,False,no one,no one,no one
16,pytest,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/setup.py,False,no one,no one,no one
17,crypten,>=0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
18,google-auth-oauthlib,>=0.4.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
19,certifi,>=2020.4.5.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-23491,<2022.12.07,"Certifi 2022.12.07 includes a fix for CVE-2022-23491: Certifi 2022.12.07 removes root certificates from ""TrustCor"" from the root store. These are in the process of being removed from Mozilla's trust store. TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found in the linked google group discussion.
https://github.com/certifi/python-certifi/security/advisories/GHSA-43fp-rhv2-5gv8
https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ"
20,webencodings,>=0.5.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
21,appnope,>=0.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
22,ipython,>=7.13.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2023-24816,<8.10.0,"IPython 8.10.0 includes a fix for CVE-2023-24816: Versions prior to 8.10.0 are subject to a command injection vulnerability with very specific prerequisites. This vulnerability requires that the function 'IPython.utils.terminal.set_term_title' be called on Windows in a Python environment where ctypes is not available. The dependency on 'ctypes' in 'IPython.utils._process_win32' prevents the vulnerable code from ever being reached in the ipython binary. However, as a library that could be used by another tool 'set_term_title' could be called and hence introduce a vulnerability. If an attacker get untrusted input to an instance of this function they would be able to inject shell commands as current process and limited to the scope of the current process. As a workaround, users should ensure that any calls to the 'IPython.utils.terminal.set_term_title' function are done with trusted or filtered input.
https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7"
23,ipython,>=7.13.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2014-3429,">=0.12,<1.2","IPython Notebook 0.12 through 1.x before 1.2 does not validate the origin of websocket requests, which allows remote attackers to execute arbitrary code by leveraging knowledge of the kernel id and a crafted page."
24,ipython,>=7.13.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2016-6524,">=2.0.0,<4.0.0",Ipython 4.0 includes a fix for CVE-2016-6524: Untrusted LaTeX output could be added to the page in a way that could execute javascript.
25,ipython,>=7.13.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2015-4706,">=3.0.0,<3.2.0",Cross-site scripting (XSS) vulnerability in IPython 3.x before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/contents path.
26,ipython,>=7.13.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-21699,">=8.0.0a0,<8.0.1,>=7.17.0,<7.31.1,>=6.0.0a0,<7.16.3,<5.11","Ipython versions 8.0.1, 7.31.1, 7.16.3 and 5.11 include a fix for CVE-2022-21699: Affected versions are subject to an arbitrary code execution vulnerability achieved by not properly managing cross user temporary files. This vulnerability allows one user to run code as another on the same machine.
https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x"
27,terminado,>=0.8.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
28,ipykernel,>=5.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
29,jsonschema,>=3.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
30,tensorboard-plugin-wit,>=1.6.0.post3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
31,google-auth,>=1.13.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
32,backcall,>=0.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
33,future,>=0.18.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-40899,<=0.18.2,"Future 0.18.2 and earlier allows remote attackers to cause a denial of service via crafted Set-Cookie header from malicious web server.
https://github.com/PythonCharmers/python-future/blob/master/src/future/backports/http/cookiejar.py#L215
https://github.com/python/cpython/pull/17157"
34,tensorboard,>=2.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
35,requests-oauthlib,>=1.3.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
36,parso,>=0.6.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2019-12760,">=0,<0.5.0","** DISPUTED ** A deserialization vulnerability exists in the way parso through 0.4.0 handles grammar parsing from the cache. Cache loading relies on pickle and, provided that an evil pickle can be written to a cache grammar file and that its parsing can be triggered, this flaw leads to Arbitrary Code Execution. NOTE: This is disputed because ""the cache directory is not under control of the attacker in any common configuration."""
37,oauthlib,>=3.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-36087,">=3.1.1,<3.2.1","OAuthLib 3.2.1 includes a fix for CVE-2022-36087: In OAuthLib versions 3.1.1 until 3.2.1, an attacker providing malicious redirect uri can cause denial of service. An attacker can also leverage usage of 'uri_validate' functions depending where it is used. OAuthLib applications using OAuth2.0 provider support or use directly 'uri_validate' are affected by this issue. There are no known workarounds.
https://github.com/oauthlib/oauthlib/security/advisories/GHSA-3pgj-pg6c-r5p7"
38,nbformat,>=5.0.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
39,ptyprocess,>=0.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
40,tornado,>=6.0.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2023-28370,<6.3.2,Tornado 6.3.2 includes a fix for CVE-2023-28370: Open redirect vulnerability in Tornado versions 6.3.1 and earlier allows a remote unauthenticated attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having user access a specially crafted URL.
41,tornado,>=6.0.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2014-9720,">=0,<3.2.2","Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests."
42,pyasn1-modules,>=0.2.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
43,bleach,>=3.1.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-23980,<3.3.0,"Bleach 3.3.0 includes a fix for CVE-2021-23980: A mutation XSS affects users calling bleach.clean with all of: svg or math in the allowed tags p or br in allowed tags style, title, noscript, script, textarea, noframes, iframe, or xmp in allowed tags the keyword argument strip_comments=False Note: none of the above tags are in the default allowed tags and strip_comments defaults to True."
44,bleach,>=3.1.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2018-7753,">=2.1,<2.1.3","bleach  2.1.3 fixes a security issue.  Attributes that have URI values weren't properly sanitized if the values contained character entities. Using character entities, it was possible to construct a URI value with a scheme that was not allowed that would slide through unsanitized."
45,cycler,>=0.10.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
46,ipywidgets,>=7.5.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,PVE-2022-50664,<8.0.0,"Ipywidgets 8.0.0 sanitizes descriptions by default.
https://github.com/jupyter-widgets/ipywidgets/pull/2785"
47,ipywidgets,>=7.5.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,PVE-2022-50463,<8.0.0rc2,"Ipywidgets 8.0.0rc2 makes descriptions plaintext by default for security.
https://github.com/jupyter-widgets/ipywidgets/pull/2785"
48,QtPy,>=1.9.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
49,chardet,>=3.0.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
50,pyzmq,>=19.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
51,protobuf,>=3.11.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-22570,<3.15.0,"Protobuf 3.15.0 includes a fix for CVE-2021-22570: Nullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr."
52,protobuf,>=3.11.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-1941,"<3.18.3,>=3.19.0rc0,<3.19.5,>=3.20.0rc0,<3.20.2,>=4.0.0rc0,<4.21.6","A parsing vulnerability for the MessageSet type in the ProtocolBuffers versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 3.21.5 for protobuf-cpp, and versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 4.21.5 for protobuf-python can lead to out of memory failures. A specially crafted message with multiple key-value per elements creates parsing issues, and can lead to a Denial of Service against services receiving unsanitized input. We recommend upgrading to versions 3.18.3, 3.19.5, 3.20.2, 3.21.6 for protobuf-cpp and 3.18.3, 3.19.5, 3.20.2, 4.21.6 for protobuf-python. Versions for 3.16 and 3.17 are no longer updated."
53,pickleshare,>=0.7.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
54,jupyter-core,>=4.6.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-39286,">=0,<4.11.2",Jupyter-core 4.11.2 includes a fix for CVE-2022-39286: Jupyter Core is a package for the core common functionality of Jupyter projects. Jupyter Core prior to version 4.11.2 contains an arbitrary code execution vulnerability in 'jupyter_core' that stems from 'jupyter_core' executing untrusted files in CWD. This vulnerability allows one user to run code as another.
55,pyparsing,>=2.4.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
56,numpy,>=1.18.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
57,numpy,>=1.18.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
58,numpy,>=1.18.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
59,numpy,>=1.18.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
60,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2014-3589,"<2.3.2,>=2.5.0,<2.5.2","Pillow versions 2.3.2 and 2.5.2 include a fix for CVE-2014-3589: PIL/IcnsImagePlugin.py in Python Imaging Library (PIL) and Pillow before 2.3.2 and 2.5.x before 2.5.2 allows remote attackers to cause a denial of service via a crafted block size.
https://github.com/python-pillow/Pillow/commit/205e056f8f9b06ed7b925cf8aa0874bc4aaf8a7d"
61,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-25288,<8.2.0,"Pillow 8.2.0 includes a fix for CVE-2021-25288: There is an out-of-bounds read in J2kDecode, in j2ku_gray_i.
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-25287-cve-2021-25288-fix-oob-read-in-jpeg2kdecode"
62,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-28677,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28677: For EPS data, the readline implementation used in EPSImageFile has to deal with any combination of \r and \n as line endings. It used an accidentally quadratic method of accumulating lines while looking for a line ending. A malicious EPS file could use this to perform a DoS of Pillow in the open phase, before an image was accepted for opening.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28677-fix-eps-dos-on-open"
63,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-28678,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28678: For BLP data, BlpImagePlugin did not properly check that reads (after jumping to file offsets) returned data. This could lead to a DoS where the decoder could be run a large number of times on empty data.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28678-fix-blp-dos"
64,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-28676,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28676: For FLI data, FliDecode did not properly check that the block advance was non-zero, potentially leading to an infinite loop on load.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28676-fix-fli-dos"
65,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-25287,<8.2.0,"Pillow 8.2.0 includes a fix for CVE-2021-25287: There is an out-of-bounds read in J2kDecode, in j2ku_graya_la.
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-25287-cve-2021-25288-fix-oob-read-in-jpeg2kdecode"
66,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-34552,<8.3.0,"Pillow 8.3.0 includes a fix for CVE-2021-34552: Pillow through 8.2.0 and PIL (also known as Python Imaging Library) through 1.1.7 allow an attacker to pass controlled parameters directly into a convert function to trigger a buffer overflow in Convert.c
https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html#buffer-overflow
https://pillow.readthedocs.io/en/stable/releasenotes/index.html"
67,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-22816,<9.0.0,"Pillow 9.0.0 includes a fix for CVE-2022-22816: path_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling"
68,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,PVE-2021-44525,<9.0.0,"Pillow 9.0.0 excludes carriage return in PDF regex to help prevent ReDoS.
https://github.com/python-pillow/Pillow/pull/5912
https://github.com/python-pillow/Pillow/commit/43b800d933c996226e4d7df00c33fcbe46d97363"
69,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,PVE-2022-44524,<9.0.0,"Pillow 9.0.0 ensures JpegImagePlugin stops at the end of a truncated file to avoid Denial of Service attacks.
https://github.com/python-pillow/Pillow/pull/5921
https://github.com/advisories/GHSA-4fx9-vc88-q2xc"
70,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-22815,<9.0.0,"Pillow 9.0.0 includes a fix for CVE-2022-22815: path_getbbox in path.c in Pillow before 9.0.0 improperly initializes ImagePath.Path.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling"
71,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-24303,<9.0.1,Pillow before 9.0.1 allows attackers to delete files because spaces in temporary pathnames are mishandled.
72,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-22817,<9.0.1,"Pillow 9.0.1 includes a fix for CVE-2022-22817: PIL.ImageMath.eval in Pillow before 9.0.0 allows evaluation of arbitrary expressions, such as ones that use the Python exec method. A first patch was issued for version 9.0.0 but it did not prevent builtins available to lambda expressions.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html#security"
73,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-45198,<9.2.0,Pillow before 9.2.0 performs Improper Handling of Highly Compressed GIF Data (Data Amplification).
74,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-28675,">=0,<8.2.0",An issue was discovered in Pillow before 8.2.0. PSDImagePlugin.PsdImageFile lacked a sanity check on the number of input layers relative to the size of the data block. This could lead to a DoS on Image.open prior to Image.load.
75,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-27923,">=4.3.0,<8.1.1","Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large."
76,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-23437,">=5.2.0,<8.3.2","Pillow from 5.2.0 and before 8.3.2 is vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function.
https://github.com/python-pillow/Pillow/commit/9e08eb8f78fdfd2f476e1b20b7cf38683754866b
https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html"
77,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-30595,">=9.1.0,<9.1.1",libImaging/TgaRleDecode.c in Pillow 9.1.0 has a heap buffer overflow in the processing of invalid TGA image files.
78,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,PVE-2023-55182,">=9.1.0,<9.3.0","Pillow 9.3.0 includes a security fix: Pillow will now decode the data in its natural CMYK mode, then convert it to RGB and rearrange the channels afterwards. Trying to load the data in an incorrect mode could result in a segmentation fault.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#decode-jpeg-compressed-blp1-data-in-original-mode"
79,Pillow,>=8.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-45199,">=9.2.0,<9.3.0","Pillow before 9.3.0 allows denial of service via SAMPLESPERPIXEL.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#limit-samplesperpixel-to-avoid-runtime-dos"
80,testpath,>=0.4.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
81,importlib-metadata,>=1.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
82,pandocfilters,>=1.4.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
83,traitlets,>=4.3.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
84,torch,>=1.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
85,typing-extensions,>=3.7.4.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
86,Jinja2,>=2.11.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2019-10906,">=0,<2.10.1","In Pallets Jinja before 2.10.1, str.format_map allows a sandbox escape."
87,Jinja2,>=2.11.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2014-0012,">=0,<2.7.3","FileSystemBytecodeCache in Jinja2 2.7.2 does not properly create temporary directories, which allows local users to gain privileges by pre-creating a temporary directory with a user's uid.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-1402."
88,Werkzeug,>=1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2023-23934,<2.2.3,"Werkzeug 2.2.3 includes a fix for CVE-2023-23934: Browsers may allow ""nameless"" cookies that look like '=value' instead of 'key=value'. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like '=__Host-test=bad' for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie '=__Host-test=bad' as __Host-test=bad'. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key.
https://github.com/pallets/werkzeug/security/advisories/GHSA-px8h-6qxv-m22q"
89,Werkzeug,>=1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2023-25577,<2.2.3,"Werkzeug 2.2.3 includes a fix for CVE-2023-25577: Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses 'request.data', 'request.form', 'request.files', or 'request.get_data(parse_form_data=False)', it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers.
https://github.com/pallets/werkzeug/security/advisories/GHSA-xg9f-g7g7-2323"
90,Werkzeug,>=1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2019-14806,">=0,<0.15.3","Pallets Werkzeug before 0.15.3, when used with Docker, has insufficient debugger PIN randomness because Docker containers share the same machine id."
91,Werkzeug,>=1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2019-14322,">=0,<0.15.5","In Pallets Werkzeug before 0.15.5, SharedDataMiddleware mishandles drive names (such as C:) in Windows pathnames."
92,Werkzeug,>=1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-29361,">=0,<2.1.1",** DISPUTED ** Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project.
93,Werkzeug,>=1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,PVE-2021-37276,">=0.15.0,<0.15.5",:class:`~exceptions.BadRequestKeyError` in werkzeug 0.15.5 adds the ``KeyError`` message to the description if ``e.show_exception`` is set to ``True``. This is a more secure default than the original 0.15.0 behavior and makes it easier to control without losing information.
94,matplotlib,>=3.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
95,pyrsistent,>=0.16.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
96,nbconvert,>=5.6.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-32862,<6.5.1,"The GitHub Security Lab discovered sixteen ways to exploit a cross-site scripting vulnerability in nbconvert. When using nbconvert to generate an HTML version of a user-controllable notebook, it is possible to inject arbitrary HTML which may lead to cross-site scripting (XSS) vulnerabilities if these HTML notebooks are served by a web server (eg: nbviewer).
https://github.com/jupyter/nbconvert/security/advisories/GHSA-9jmq-rx5f-8jwq"
97,requests,>=2.23.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
98,requests,>=2.23.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
99,six,>=1.14.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
100,pexpect,>=4.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
101,ipython-genutils,>=0.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
102,Send2Trash,>=1.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
103,cachetools,>=4.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
104,torchvision,>=0.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
105,rsa,>=4.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2020-13757,<4.3,"Rsa 4.3 includes a fix for CVE-2020-13757: Python-RSA before 4.3 ignores leading '\0' bytes during decryption of ciphertext. This could conceivably have a security-relevant impact, e.g., by helping an attacker to infer that an application uses Python-RSA, or if the length of accepted ciphertext affects application behavior (such as by causing excessive memory allocation)."
106,rsa,>=4.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2020-25658,">=2.1,<4.7",Rsa 4.7 includes a fix for CVE-2020-25658: It was found that python-rsa is vulnerable to Bleichenbacher timing attacks. An attacker can use this flaw via the RSA decryption API to decrypt parts of the cipher text encrypted with RSA.
107,jupyter,>=1.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
108,absl-py,>=0.9.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
109,onnx,>=1.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-25882,<1.13.0,Onnx 1.13.0 includes a fix for CVE-2022-25882: Versions of the package onnx before 1.13.0 are vulnerable to Directory Traversal as the external_data field of the tensor proto can have a path to the file which is outside the model current directory or user-provided directory.
110,mistune,>=0.8.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-34749,">=2.0.0a1,<2.0.3","In mistune through 2.0.2, support of inline markup is implemented by using regular expressions that can involve a high amount of backtracking on certain edge cases. This behavior is commonly named catastrophic backtracking."
111,zipp,>=3.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
112,pyasn1,>=0.4.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
113,idna,>=2.9,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
114,Markdown,>=3.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
115,defusedxml,>=0.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
116,qtconsole,>=4.7.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
117,python-dateutil,>=2.8.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
118,jupyter-client,>=6.1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
119,jupyter-console,>=6.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
120,urllib3,>=1.25.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2020-26137,<1.25.9,"Urllib3 1.25.9 includes a fix for CVE-2020-26137: Urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). NOTE: this is similar to CVE-2020-26116.
https://github.com/python/cpython/issues/83784"
121,urllib3,>=1.25.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-33503,<1.26.5,"Urllib3 1.26.5 includes a fix for CVE-2021-33503: When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect."
122,urllib3,>=1.25.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2020-7212,">=1.25.2,<=1.25.7","The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2). See: CVE-2020-7212."
123,urllib3,>=1.25.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-28363,">=1.26.0,<1.26.4","Urllib3 1.26.4 includes a fix for CVE-2021-28363: The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.
https://github.com/urllib3/urllib3/security/advisories/GHSA-5phf-pp7p-vc2r"
124,MarkupSafe,>=1.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
125,wcwidth,>=0.1.9,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
126,prompt-toolkit,>=3.0.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
127,attrs,>=19.3.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
128,prometheus-client,>=0.7.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
129,entrypoints,>=0.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
130,jedi,>=0.16.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
131,kiwisolver,>=1.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
132,widgetsnbextension,>=3.5.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
133,decorator,>=4.4.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
134,grpcio,>=1.28.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,no one,no one,no one
135,Pygments,>=2.6.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2022-40896,<2.15.0,"Pygments 2.15.0 includes a fix for CVE-2022-40896: In Pygments before 2.15.0 the lexers processing Smithy, SQL/SQL+Jinja or Java properties files from untrusted source are vulnerable to ReDoS."
136,Pygments,>=2.6.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-27291,">=1.1,<2.7.4","Pygments 2.7.4 includes a fix for CVE-2021-27291: In pygments 1.1+, fixed in 2.7.4, the lexers used to parse programming languages rely heavily on regular expressions. Some of the regular expressions have exponential or cubic worst-case complexity and are vulnerable to ReDoS. By crafting malicious input, an attacker can cause a denial of service."
137,Pygments,>=2.6.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2015-8557,">=1.2.2,<2.1",Pygments 2.1 includes a fix for CVE-2015-8557: The FontManager._get_nix_font_path function in formatters/img.py in pygments 1.2.2 through 2.0.2 allows remote attackers to execute arbitrary commands via shell metacharacters in a font name.
138,Pygments,>=2.6.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/pycon-workshop-2020/requirements.txt,False,CVE-2021-20270,">=1.5,<2.7.4","Pygments 2.7.4 includes a fix for CVE-2021-20270: An infinite loop in SMLLexer in Pygments versions 1.5 to 2.7.3 may lead to denial of service when performing syntax highlighting of a Standard ML (SML) source file, as demonstrated by input that only contains the ""exception"" keyword."
139,pytz,>=2019.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
140,retrying,>=1.3.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
141,dash-html-components,>=1.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
142,dash,>=1.9.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,PVE-2021-40183,<1.20.0,"Dash 1.20.0 fixes a potential XSS vulnerability by starting to validate callback request fields.
https://github.com/plotly/dash/pull/1546"
143,dash,>=1.9.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,PVE-2021-40962,<1.21.0,Dash 1.21.0 updates its dependency 'Plotly.js' to v2.2.1 to include a security fix.
144,dash-renderer,>=1.2.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
145,python-dateutil,>=2.8.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
146,gunicorn,>=20.0.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,PVE-2021-40104,"<19.10.0,>=20.0.0,<20.0.1","Gunicorn 20.0.1 fixes chunked encoding support to prevent http request smuggling attacks.
https://github.com/benoitc/gunicorn/issues/2176
https://github.com/p4k03n4t0r/http-request-smuggling#request-smuggling-using-mitmproxy-and-gunicorn"
147,MarkupSafe,>=1.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
148,black,>=19.10b0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
149,pathspec,>=0.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
150,Werkzeug,>=1.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2023-23934,<2.2.3,"Werkzeug 2.2.3 includes a fix for CVE-2023-23934: Browsers may allow ""nameless"" cookies that look like '=value' instead of 'key=value'. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like '=__Host-test=bad' for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie '=__Host-test=bad' as __Host-test=bad'. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key.
https://github.com/pallets/werkzeug/security/advisories/GHSA-px8h-6qxv-m22q"
151,Werkzeug,>=1.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2023-25577,<2.2.3,"Werkzeug 2.2.3 includes a fix for CVE-2023-25577: Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses 'request.data', 'request.form', 'request.files', or 'request.get_data(parse_form_data=False)', it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers.
https://github.com/pallets/werkzeug/security/advisories/GHSA-xg9f-g7g7-2323"
152,Werkzeug,>=1.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2019-14806,">=0,<0.15.3","Pallets Werkzeug before 0.15.3, when used with Docker, has insufficient debugger PIN randomness because Docker containers share the same machine id."
153,Werkzeug,>=1.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2019-14322,">=0,<0.15.5","In Pallets Werkzeug before 0.15.5, SharedDataMiddleware mishandles drive names (such as C:) in Windows pathnames."
154,Werkzeug,>=1.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2022-29361,">=0,<2.1.1",** DISPUTED ** Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project.
155,Werkzeug,>=1.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,PVE-2021-37276,">=0.15.0,<0.15.5",:class:`~exceptions.BadRequestKeyError` in werkzeug 0.15.5 adds the ``KeyError`` message to the description if ``e.show_exception`` is set to ``True``. This is a more secure default than the original 0.15.0 behavior and makes it easier to control without losing information.
156,typed-ast,>=1.4.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
157,Flask,>=1.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2023-30861,"<2.2.5,>=2.3.0,<2.3.2","Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches 'Set-Cookie' headers, it may send one client's 'session' cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets 'session.permanent = True'
3. The application does not access or modify the session at any point during a request.
4. 'SESSION_REFRESH_EACH_REQUEST' enabled (the default).
5. The application does not set a 'Cache-Control' header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the 'Vary: Cookie' header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5."
158,itsdangerous,>=1.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
159,regex,>=2020.1.8,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
160,six,>=1.14.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
161,attrs,>=19.3.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
162,future,>=0.18.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2022-40899,<=0.18.2,"Future 0.18.2 and earlier allows remote attackers to cause a denial of service via crafted Set-Cookie header from malicious web server.
https://github.com/PythonCharmers/python-future/blob/master/src/future/backports/http/cookiejar.py#L215
https://github.com/python/cpython/pull/17157"
163,appdirs,>=1.4.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
164,plotly,>=4.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2019-10775,<4.8.2,"Plotly 4.8.2 includes plotly.js version 1.54.5, which contains a security fix of a transitive dependency (ecstatic)."
165,plotly,>=4.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2020-7598,<4.9.0,Plotly 4.9.0 builds Javascript extensions using Node 12 with an updated 'package-lock.json' that has many fewer security warnings.
166,numpy,>=1.18.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
167,numpy,>=1.18.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
168,numpy,>=1.18.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
169,numpy,>=1.18.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
170,Click,>=7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,PVE-2022-47833,<8.0.0,"Click 8.0.0 uses 'mkstemp()' instead of the deprecated & insecure 'mktemp()'.
https://github.com/pallets/click/issues/1752"
171,pandas,>=1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
172,toml,>=0.10.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
173,dash-core-components,>=1.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
174,dash-table,>=4.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,PVE-2021-41222,<4.7.0,"Dash-table 4.7.0 sanitizes table ""id"" to prevent stylesheet injection.
https://github.com/plotly/dash-table/pull/766"
175,Flask-Compress,>=1.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,no one,no one,no one
176,Jinja2,>=2.11.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2019-10906,">=0,<2.10.1","In Pallets Jinja before 2.10.1, str.format_map allows a sandbox escape."
177,Jinja2,>=2.11.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/benchmarks/dash_app/requirements.txt,False,CVE-2014-0012,">=0,<2.7.3","FileSystemBytecodeCache in Jinja2 2.7.2 does not properly create temporary directories, which allows local users to gain privileges by pre-creating a temporary directory with a user's uid.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-1402."
178,onnx,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/docs/requirements.txt,False,CVE-2022-25882,<1.13.0,Onnx 1.13.0 includes a fix for CVE-2022-25882: Versions of the package onnx before 1.13.0 are vulnerable to Directory Traversal as the external_data field of the tensor proto can have a path to the file which is outside the model current directory or user-provided directory.
179,future,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/docs/requirements.txt,False,CVE-2022-40899,<=0.18.2,"Future 0.18.2 and earlier allows remote attackers to cause a denial of service via crafted Set-Cookie header from malicious web server.
https://github.com/PythonCharmers/python-future/blob/master/src/future/backports/http/cookiejar.py#L215
https://github.com/python/cpython/pull/17157"
180,sphinxcontrib-devhelp,==1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/docs/requirements.txt,False,no one,no one,no one
181,Sphinx,==2.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/docs/requirements.txt,False,CVE-2020-11023,<3.0.4,Sphinx 3.0.4 updates jQuery version from 3.4.1 to 3.5.1 for security reasons.
182,Sphinx,==2.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/docs/requirements.txt,False,CVE-2020-11022,<3.0.4,Sphinx 3.0.4 updates jQuery version from 3.4.1 to 3.5.1 for security reasons.
183,sphinxcontrib-qthelp,==1.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/docs/requirements.txt,False,no one,no one,no one
184,sphinxcontrib-jsmath,==1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/docs/requirements.txt,False,no one,no one,no one
185,sphinxcontrib-serializinghtml,==1.1.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/docs/requirements.txt,False,no one,no one,no one
186,sphinxcontrib-applehelp,==1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/docs/requirements.txt,False,no one,no one,no one
187,sphinx-rtd-theme,==0.4.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/docs/requirements.txt,False,no one,no one,no one
188,sphinxcontrib-htmlhelp,==1.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/docs/requirements.txt,False,no one,no one,no one
189,tensorboard,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/CrypTen/docs/requirements.txt,False,no one,no one,no one
