,dep,version,filepath,bloated,cve,affected versions,advisory
0,attrs,>= 18.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/setup.py,False,no one,no one,no one
1,numpy,>= 1.21,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
2,numpy,>= 1.21,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
3,numpy,>= 1.21,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
4,protobuf,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/setup.py,False,CVE-2021-22570,<3.15.0,"Protobuf 3.15.0 includes a fix for CVE-2021-22570: Nullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr."
5,protobuf,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/setup.py,False,CVE-2022-1941,"<3.18.3,>=3.19.0rc0,<3.19.5,>=3.20.0rc0,<3.20.2,>=4.0.0rc0,<4.21.6","A parsing vulnerability for the MessageSet type in the ProtocolBuffers versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 3.21.5 for protobuf-cpp, and versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 4.21.5 for protobuf-python can lead to out of memory failures. A specially crafted message with multiple key-value per elements creates parsing issues, and can lead to a Denial of Service against services receiving unsanitized input. We recommend upgrading to versions 3.18.3, 3.19.5, 3.20.2, 3.21.6 for protobuf-cpp and 3.18.3, 3.19.5, 3.20.2, 4.21.6 for protobuf-python. Versions for 3.16 and 3.17 are no longer updated."
6,protobuf,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/setup.py,False,CVE-2015-5237,<3.4.0,"Protobuf 3.4.0 includes a fix for CVE-2015-5237: Integer overflow in serialization.
https://github.com/protocolbuffers/protobuf/issues/760"
7,tensorflow-probability,>= 0.12.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/setup.py,False,no one,no one,no one
8,tff-nightly,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/data_generator/requirements_nodeps.txt,False,no one,no one,no one
9,attrs,>= 18.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/data_generator/requirements.txt,False,no one,no one,no one
10,tf-nightly,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/data_generator/requirements.txt,False,no one,no one,no one
11,google-cloud-storage,==1.28.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/data_generator/requirements.txt,False,no one,no one,no one
12,tfp-nightly,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/data_generator/requirements.txt,False,no one,no one,no one
13,Flask,==1.1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/downloader/requirements.txt,False,CVE-2023-30861,"<2.2.5,>=2.3.0,<2.3.2","Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches 'Set-Cookie' headers, it may send one client's 'session' cookie to other clients. The severity depends on the application's use of the session and the proxy's behavior regarding cookies. The risk depends on all these conditions being met.

1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.
2. The application sets 'session.permanent = True'
3. The application does not access or modify the session at any point during a request.
4. 'SESSION_REFRESH_EACH_REQUEST' enabled (the default).
5. The application does not set a 'Cache-Control' header to indicate that a page is private or should not be cached.

This happens because vulnerable versions of Flask only set the 'Vary: Cookie' header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5."
14,numpy,==1.21,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/downloader/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
15,numpy,==1.21,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/downloader/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
16,numpy,==1.21,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/downloader/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
17,pyzmq,==19.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/downloader/requirements.txt,False,no one,no one,no one
18,requests,==2.23.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/downloader/requirements.txt,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
19,requests,==2.23.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/downloader/requirements.txt,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
20,absl-py,==0.9.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/downloader/requirements.txt,False,no one,no one,no one
21,google-cloud-storage,==1.28.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/downloader/requirements.txt,False,no one,no one,no one
22,tff-nightly,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/pricer/requirements.txt,False,no one,no one,no one
23,pyzmq,==19.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/pricer/requirements.txt,False,no one,no one,no one
24,tf-nightly,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/pricer/requirements.txt,False,no one,no one,no one
25,tfp-nightly,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/pricer/requirements.txt,False,no one,no one,no one
26,absl-py,==0.9.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/pricer/requirements.txt,False,no one,no one,no one
27,numpy,==1.22.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tf-quant-finance/tf_quant_finance/examples/demos/option_pricing_basic/pricer/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
