,dep,version,filepath,bloated,cve,affected versions,advisory
0,deap,>=1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,no one,no one,no one
1,imbalanced-learn,>=0.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,no one,no one,no one
2,stopit,>=1.1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,no one,no one,no one
3,pandas,>=0.24.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
4,scikit-learn,>=0.22.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
5,scikit-learn,>=0.22.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
6,scikit-learn,>=0.22.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
7,joblib,>=0.13.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,PVE-2022-51394,<1.1.1,"Joblib 1.1.1 fixes a security issue where 'eval(pre_dispatch)' could potentially run arbitrary code. Now only basic numerics are supported.
https://github.com/joblib/joblib/pull/1327"
8,joblib,>=0.13.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,CVE-2022-21797,<1.2.0,"Joblib 1.2.0 includes a fix for CVE-2022-21797: The package joblib from 0 and before 1.2.0 is vulnerable to Arbitrary Code Execution via the pre_dispatch flag in Parallel() class due to the eval() statement.
https://github.com/joblib/joblib/issues/1128"
9,joblib,>=0.13.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,PVE-2022-51041,<1.2.0,"Joblib 1.2.0 fixes a security issue where 'eval(pre_dispatch)' could potentially run arbitrary code. Now only basic numerics are supported.
https://github.com/joblib/joblib/pull/1327"
10,numpy,>=1.16.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
11,numpy,>=1.16.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
12,numpy,>=1.16.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
13,numpy,>=1.16.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
14,nose,==1.3.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,no one,no one,no one
15,xgboost,>=1.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,no one,no one,no one
16,scipy,>=1.3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
17,update-checker,>=0.16,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,no one,no one,no one
18,tqdm,>=4.36.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/requirements.txt,False,no one,no one,no one
19,skrebate,==0.3.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/optional-requirements.txt,False,no one,no one,no one
20,torch,==1.3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/optional-requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
21,scikit-mdr,==0.4.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/optional-requirements.txt,False,no one,no one,no one
22,numpy,>=1.16.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
23,numpy,>=1.16.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
24,numpy,>=1.16.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
25,numpy,>=1.16.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
26,scipy,>=1.3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
27,scikit-learn,>=0.22.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
28,scikit-learn,>=0.22.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
29,scikit-learn,>=0.22.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
30,deap,>=1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,no one,no one,no one
31,update_checker,>=0.16,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,no one,no one,no one
32,tqdm,>=4.36.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,no one,no one,no one
33,stopit,>=1.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,no one,no one,no one
34,pandas,>=0.24.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
35,joblib,>=0.13.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,PVE-2022-51394,<1.1.1,"Joblib 1.1.1 fixes a security issue where 'eval(pre_dispatch)' could potentially run arbitrary code. Now only basic numerics are supported.
https://github.com/joblib/joblib/pull/1327"
36,joblib,>=0.13.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,CVE-2022-21797,<1.2.0,"Joblib 1.2.0 includes a fix for CVE-2022-21797: The package joblib from 0 and before 1.2.0 is vulnerable to Arbitrary Code Execution via the pre_dispatch flag in Parallel() class due to the eval() statement.
https://github.com/joblib/joblib/issues/1128"
37,joblib,>=0.13.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,PVE-2022-51041,<1.2.0,"Joblib 1.2.0 fixes a security issue where 'eval(pre_dispatch)' could potentially run arbitrary code. Now only basic numerics are supported.
https://github.com/joblib/joblib/pull/1327"
38,xgboost,>=1.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,True,no one,no one,no one
39,skrebate,>=0.3.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,no one,no one,no one
40,scikit-mdr,>=0.4.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,no one,no one,no one
41,dask,>=0.18.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,CVE-2021-42343,<2021.10.0,Dask 2021.10.0 includes a fix for CVE-2021-42343: An issue was discovered in the Dask distributed package before 2021.10.0 for Python. Single machine Dask clusters starting with dask.distributed.LocalCluster or dask.distributed.Client (which defaults to using LocalCluster) would mistakenly configure their respective Dask workers to listen on external interfaces (typically with a randomly selected high port) rather than only on localhost. A Dask cluster created using this method (when running on a machine that has an applicable port exposed) could be used by a sophisticated attacker to achieve remote code execution.
42,distributed,>=1.22.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,CVE-2021-42343,">=0,<2021.10.0",Distributed 2021.10.0 includes a fix for CVE-2021-42343: Single machine Dask clusters started with dask.distributed.LocalCluster or dask.distributed.Client (which defaults to using LocalCluster) would mistakenly configure their respective Dask workers to listen on external interfaces (typically with a randomly selected high port) rather than only on localhst. A Dask cluster created using this method (when running on a machine that has an applicable port exposed) could be used by a sophisticated attacker to achieve remote code execution.
43,dask-ml,>=1.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,no one,no one,no one
44,torch,==1.3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
45,imbalanced-learn,>=0.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/tpot/setup.py,False,no one,no one,no one
