,dep,version,filepath,bloated,cve,affected versions,advisory
0,certifi,==2017.7.27.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2022-23491,<2022.12.07,"Certifi 2022.12.07 includes a fix for CVE-2022-23491: Certifi 2022.12.07 removes root certificates from ""TrustCor"" from the root store. These are in the process of being removed from Mozilla's trust store. TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found in the linked google group discussion.
https://github.com/certifi/python-certifi/security/advisories/GHSA-43fp-rhv2-5gv8
https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ"
1,six,==1.11.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
2,netaddr,==0.7.19,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
3,chardet,==3.0.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
4,ruamel.yaml,==0.15.34,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
5,keyring,==10.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
6,millify,==0.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
7,lxml,==4.9.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
8,docopt,==0.6.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
9,tabulate,==0.8.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
10,torch,==1.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
11,regex,==2017.9.23,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
12,tzlocal,==1.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
13,flake8,==3.7.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
14,tld,==0.9.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
15,Pillow,==9.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2014-3589,"<2.3.2,>=2.5.0,<2.5.2","Pillow versions 2.3.2 and 2.5.2 include a fix for CVE-2014-3589: PIL/IcnsImagePlugin.py in Python Imaging Library (PIL) and Pillow before 2.3.2 and 2.5.x before 2.5.2 allows remote attackers to cause a denial of service via a crafted block size.
https://github.com/python-pillow/Pillow/commit/205e056f8f9b06ed7b925cf8aa0874bc4aaf8a7d"
16,Pillow,==9.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2022-45198,<9.2.0,Pillow before 9.2.0 performs Improper Handling of Highly Compressed GIF Data (Data Amplification).
17,Pillow,==9.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2021-28675,">=0,<8.2.0",An issue was discovered in Pillow before 8.2.0. PSDImagePlugin.PsdImageFile lacked a sanity check on the number of input layers relative to the size of the data block. This could lead to a DoS on Image.open prior to Image.load.
18,Pillow,==9.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2021-27923,">=4.3.0,<8.1.1","Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large."
19,Pillow,==9.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2021-23437,">=5.2.0,<8.3.2","Pillow from 5.2.0 and before 8.3.2 is vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function.
https://github.com/python-pillow/Pillow/commit/9e08eb8f78fdfd2f476e1b20b7cf38683754866b
https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html"
20,Pillow,==9.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2022-30595,">=9.1.0,<9.1.1",libImaging/TgaRleDecode.c in Pillow 9.1.0 has a heap buffer overflow in the processing of invalid TGA image files.
21,Pillow,==9.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,PVE-2023-55182,">=9.1.0,<9.3.0","Pillow 9.3.0 includes a security fix: Pillow will now decode the data in its natural CMYK mode, then convert it to RGB and rearrange the channels afterwards. Trying to load the data in an incorrect mode could result in a segmentation fault.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#decode-jpeg-compressed-blp1-data-in-original-mode"
22,Pillow,==9.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2022-45199,">=9.2.0,<9.3.0","Pillow before 9.3.0 allows denial of service via SAMPLESPERPIXEL.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#limit-samplesperpixel-to-avoid-runtime-dos"
23,dateparser,==0.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
24,requests,==2.20.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
25,requests,==2.20.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
26,validators,==0.12.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2019-19588,">=0.12.2,<=0.12.5",The validators package 0.12.2 through 0.12.5 for Python enters an infinite loop when validators.domain is called with a crafted domain string. This is fixed in 0.12.6. See: CVE-2019-19588.
27,keyrings.alt,==1.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
28,pandas,==0.22.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
29,urllib3,==1.26.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2020-7212,">=1.25.2,<=1.25.7","The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2). See: CVE-2020-7212."
30,urllib3,==1.26.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2021-28363,">=1.26.0,<1.26.4","Urllib3 1.26.4 includes a fix for CVE-2021-28363: The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.
https://github.com/urllib3/urllib3/security/advisories/GHSA-5phf-pp7p-vc2r"
31,requests-file,==1.4.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
32,elasticsearch,==7.5.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
33,pyasn1,==0.1.9,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
34,python-dateutil,==2.6.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
35,SecretStorage,==2.3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
36,np,==1.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
37,pytz,==2017.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
38,sentry-sdk,==0.10.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2023-28117,<1.14.0,"Sentry-sdk 1.14.0 includes a fix for CVE-2023-28117: When using the Django integration of versions prior to 1.14.0 of the Sentry SDK in a specific configuration it is possible to leak sensitive cookies values, including the session cookie to Sentry. These sensitive cookies could then be used by someone with access to your Sentry issues to impersonate or escalate their privileges within your application. In order for these sensitive values to be leaked, the Sentry SDK configuration must have 'sendDefaultPII' set to 'True'; one must use a custom name for either 'SESSION_COOKIE_NAME' or 'CSRF_COOKIE_NAME' in one's Django settings; and one must not be configured in one's organization or project settings to use Sentry's data scrubbing features to account for the custom cookie names. As of version 1.14.0, the Django integration of the 'sentry-sdk' will detect the custom cookie names based on one's Django settings and will remove the values from the payload before sending the data to Sentry. As a workaround, use the SDK's filtering mechanism to remove the cookies from the payload that is sent to Sentry. For error events, this can be done with the 'before_send' callback method and for performance related events (transactions) one can use the 'before_send_transaction' callback method. Those who want to handle filtering of these values on the server-side can also use Sentry's advanced data scrubbing feature to account for the custom cookie names. Look for the '$http.cookies', '$http.headers', '$request.cookies', or '$request.headers' fields to target with a scrubbing rule.
https://github.com/getsentry/sentry-python/security/advisories/GHSA-29pr-6jr8-q5jm"
39,scipy,==1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
40,pygrok,==1.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
41,pyxdg,==0.26,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
42,croniter,==0.3.20,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
43,coverage,==4.5.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
44,idna,==2.6,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
45,iso8601,==0.1.12,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
46,py-spy,==0.1.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
47,configparser,==3.5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
48,numpy,==1.22.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
49,scikit-learn,==0.19.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
50,scikit-learn,==0.19.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
51,scikit-learn,==0.19.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
52,vulture,==1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements.txt,False,no one,no one,no one
53,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
54,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
55,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
56,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
57,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
58,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
59,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
60,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
61,tabulate,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
62,SecretStorage,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
63,ruamel.yaml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
64,python-dateutil,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
65,netaddr,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
66,py-spy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
67,sentry-sdk,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2023-28117,<1.14.0,"Sentry-sdk 1.14.0 includes a fix for CVE-2023-28117: When using the Django integration of versions prior to 1.14.0 of the Sentry SDK in a specific configuration it is possible to leak sensitive cookies values, including the session cookie to Sentry. These sensitive cookies could then be used by someone with access to your Sentry issues to impersonate or escalate their privileges within your application. In order for these sensitive values to be leaked, the Sentry SDK configuration must have 'sendDefaultPII' set to 'True'; one must use a custom name for either 'SESSION_COOKIE_NAME' or 'CSRF_COOKIE_NAME' in one's Django settings; and one must not be configured in one's organization or project settings to use Sentry's data scrubbing features to account for the custom cookie names. As of version 1.14.0, the Django integration of the 'sentry-sdk' will detect the custom cookie names based on one's Django settings and will remove the values from the payload before sending the data to Sentry. As a workaround, use the SDK's filtering mechanism to remove the cookies from the payload that is sent to Sentry. For error events, this can be done with the 'before_send' callback method and for performance related events (transactions) one can use the 'before_send_transaction' callback method. Those who want to handle filtering of these values on the server-side can also use Sentry's advanced data scrubbing feature to account for the custom cookie names. Look for the '$http.cookies', '$http.headers', '$request.cookies', or '$request.headers' fields to target with a scrubbing rule.
https://github.com/getsentry/sentry-python/security/advisories/GHSA-29pr-6jr8-q5jm"
68,pyxdg,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
69,tld,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
70,pytz,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
71,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2014-1932,<2.3.1,pillow before 2.3.1 makes insecure use of tempfile.mktemp (CVE-2014-1932).
72,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2014-1933,<2.3.1,pillow before 2.3.1 makes insecure use of tempfile.mktemp (CVE-2014-1933).
73,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2014-3589,"<2.3.2,>=2.5.0,<2.5.2","Pillow versions 2.3.2 and 2.5.2 include a fix for CVE-2014-3589: PIL/IcnsImagePlugin.py in Python Imaging Library (PIL) and Pillow before 2.3.2 and 2.5.x before 2.5.2 allows remote attackers to cause a denial of service via a crafted block size.
https://github.com/python-pillow/Pillow/commit/205e056f8f9b06ed7b925cf8aa0874bc4aaf8a7d"
74,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2014-3007,<2.5.0,"Pillow 2.5.0 includes a fix that prevents shell injection.
https://github.com/python-pillow/Pillow/pull/731"
75,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2014-3598,<2.5.3,pillow before 2.5.3 is vulnerable to a DoS in the Jpeg2KImagePlugin.
76,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2014-9601,<2.6.2,Pillow before 2.6.2 is vulnerable to a PNG decompression DoS (CVE-2014-9601).
77,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2016-0775,<3.1.1,Buffer overflow in the ImagingFliDecode function in libImaging/FliDecode.c in Pillow before 3.1.1 allows remote attackers to cause a denial of service (crash) via a crafted FLI file.
78,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2016-0740,<3.1.1,Buffer overflow in the ImagingLibTiffDecode function in libImaging/TiffDecode.c in Pillow before 3.1.1 allows remote attackers to overwrite memory via a crafted TIFF file.
79,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2016-2533,<3.1.1,Buffer overflow in the ImagingPcdDecode function in PcdDecode.c in Pillow before 3.1.1 and Python Imaging Library (PIL) 1.1.7 and earlier allows remote attackers to cause a denial of service (crash) via a crafted PhotoCD file.
80,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2016-4009,<3.1.1,"Integer overflow in the ImagingResampleHorizontal function in libImaging/Resample.c in Pillow before 3.1.1 allows remote attackers to have unspecified impact via negative values of the new size, which triggers a heap-based buffer overflow."
81,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2016-3076,<3.1.2,pillow before 3.1.2 is vulnerable to an integer overflow in Jpeg2KEncode.c causing a buffer overflow. CVE-2016-3076.
82,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2016-9189,<3.3.2,"Pillow before 3.3.2 allows context-dependent attackers to obtain sensitive information by using the ""crafted image file"" approach, related to an ""Integer Overflow"" issue affecting the Image.core.map_buffer in map.c component."
83,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2016-9190,<3.3.2,"Pillow before 3.3.2 allows context-dependent attackers to execute arbitrary code by using the ""crafted image file"" approach, related to an ""Insecure Sign Extension"" issue affecting the ImagingNew in Storage.c component."
84,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2019-16865,<6.2.0,"Pillow 6.2.0 includes a fix for CVE-2019-16865: An issue was discovered in Pillow before 6.2.0. When reading specially crafted invalid image files, the library can either allocate very large amounts of memory or take an extremely long period of time to process the image."
85,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-5310,<6.2.2,"libImaging/TiffDecode.c in Pillow before 6.2.2 has a TIFF decoding integer overflow, related to realloc."
86,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-5311,<6.2.2,libImaging/SgiRleDecode.c in Pillow before 6.2.2 has an SGI buffer overflow.
87,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-5313,<6.2.2,libImaging/FliDecode.c in Pillow before 6.2.2 has an FLI buffer overflow.
88,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-5312,<6.2.2,libImaging/PcxDecode.c in Pillow before 6.2.2 has a PCX P mode buffer overflow.
89,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2019-19911,<6.2.2,"There is a DoS vulnerability in Pillow before 6.2.2 caused by FpxImagePlugin.py calling the range function on an unvalidated 32-bit integer if the number of bands is large. On Windows running 32-bit Python, this results in an OverflowError or MemoryError due to the 2 GB limit. However, on Linux running 64-bit Python this results in the process being terminated by the OOM killer."
90,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-10177,<7.1.0,Pillow before 7.1.0 has multiple out-of-bounds reads in libImaging/FliDecode.c.
91,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-10994,<7.1.0,"In libImaging/Jpeg2KDecode.c in Pillow before 7.1.0, there are multiple out-of-bounds reads via a crafted JP2 file."
92,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-10379,<7.1.0,"In Pillow before 7.1.0, there are two Buffer Overflows in libImaging/TiffDecode.c."
93,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-10378,<7.1.0,"In libImaging/PcxDecode.c in Pillow before 7.1.0, an out-of-bounds read can occur when reading PCX files where state->shuffle is instructed to read beyond state->buffer."
94,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-15999,<8.0.1,Pillow 8.0.1 updates 'FreeType' used in binary wheels to v2.10.4 to include a security fix.
95,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-35654,<8.1.0,Pillow 8.1.0 fixes TIFF OOB Write error. CVE-2020-35654 #5175.
96,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-35653,<8.1.0,"In Pillow before 8.1.0, PcxDecode has a buffer over-read when decoding a crafted PCX file because the user-supplied stride value is trusted for buffer calculations."
97,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-35655,<8.1.0,Pillow 8.1.0 includes a fix for SGI Decode buffer overrun. CVE-2020-35655 #5173.
98,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-25289,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25289: TiffDecode has a heap-based buffer overflow when decoding crafted YCbCr files because of certain interpretation conflicts with LibTIFF in RGBA mode. NOTE: this issue exists because of an incomplete fix for CVE-2020-35654.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
99,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-25290,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25290: In TiffDecode.c, there is a negative-offset memcpy with an invalid size.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
100,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-27922,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-27922: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICNS container, and thus an attempted memory allocation can be very large.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
101,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-25291,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25291: In TiffDecode.c, there is an out-of-bounds read in TiffreadRGBATile via invalid tile boundaries.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
102,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-27921,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-27921: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
103,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-25293,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25293: There is an out-of-bounds read in SGIRleDecode.c.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
104,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-25292,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25292: The PDF parser allows a regular expression DoS (ReDoS) attack via a crafted PDF file because of a catastrophic backtracking regex.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
105,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-25288,<8.2.0,"Pillow 8.2.0 includes a fix for CVE-2021-25288: There is an out-of-bounds read in J2kDecode, in j2ku_gray_i.
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-25287-cve-2021-25288-fix-oob-read-in-jpeg2kdecode"
106,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-28677,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28677: For EPS data, the readline implementation used in EPSImageFile has to deal with any combination of \r and \n as line endings. It used an accidentally quadratic method of accumulating lines while looking for a line ending. A malicious EPS file could use this to perform a DoS of Pillow in the open phase, before an image was accepted for opening.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28677-fix-eps-dos-on-open"
107,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-28678,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28678: For BLP data, BlpImagePlugin did not properly check that reads (after jumping to file offsets) returned data. This could lead to a DoS where the decoder could be run a large number of times on empty data.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28678-fix-blp-dos"
108,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-28676,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28676: For FLI data, FliDecode did not properly check that the block advance was non-zero, potentially leading to an infinite loop on load.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28676-fix-fli-dos"
109,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-25287,<8.2.0,"Pillow 8.2.0 includes a fix for CVE-2021-25287: There is an out-of-bounds read in J2kDecode, in j2ku_graya_la.
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-25287-cve-2021-25288-fix-oob-read-in-jpeg2kdecode"
110,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-34552,<8.3.0,"Pillow 8.3.0 includes a fix for CVE-2021-34552: Pillow through 8.2.0 and PIL (also known as Python Imaging Library) through 1.1.7 allow an attacker to pass controlled parameters directly into a convert function to trigger a buffer overflow in Convert.c
https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html#buffer-overflow
https://pillow.readthedocs.io/en/stable/releasenotes/index.html"
111,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2022-22816,<9.0.0,"Pillow 9.0.0 includes a fix for CVE-2022-22816: path_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling"
112,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,PVE-2021-44525,<9.0.0,"Pillow 9.0.0 excludes carriage return in PDF regex to help prevent ReDoS.
https://github.com/python-pillow/Pillow/pull/5912
https://github.com/python-pillow/Pillow/commit/43b800d933c996226e4d7df00c33fcbe46d97363"
113,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,PVE-2022-44524,<9.0.0,"Pillow 9.0.0 ensures JpegImagePlugin stops at the end of a truncated file to avoid Denial of Service attacks.
https://github.com/python-pillow/Pillow/pull/5921
https://github.com/advisories/GHSA-4fx9-vc88-q2xc"
114,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2022-22815,<9.0.0,"Pillow 9.0.0 includes a fix for CVE-2022-22815: path_getbbox in path.c in Pillow before 9.0.0 improperly initializes ImagePath.Path.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling"
115,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2022-24303,<9.0.1,Pillow before 9.0.1 allows attackers to delete files because spaces in temporary pathnames are mishandled.
116,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2022-22817,<9.0.1,"Pillow 9.0.1 includes a fix for CVE-2022-22817: PIL.ImageMath.eval in Pillow before 9.0.0 allows evaluation of arbitrary expressions, such as ones that use the Python exec method. A first patch was issued for version 9.0.0 but it did not prevent builtins available to lambda expressions.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html#security"
117,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2022-45198,<9.2.0,Pillow before 9.2.0 performs Improper Handling of Highly Compressed GIF Data (Data Amplification).
118,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-11538,<=7.0.0,"In libImaging/SgiRleDecode.c in Pillow through 7.0.0, a number of out-of-bounds reads exist in the parsing of SGI image files, a different issue than CVE-2020-5311."
119,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-28675,">=0,<8.2.0",An issue was discovered in Pillow before 8.2.0. PSDImagePlugin.PsdImageFile lacked a sanity check on the number of input layers relative to the size of the data block. This could lead to a DoS on Image.open prior to Image.load.
120,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-27923,">=4.3.0,<8.1.1","Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large."
121,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-23437,">=5.2.0,<8.3.2","Pillow from 5.2.0 and before 8.3.2 is vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function.
https://github.com/python-pillow/Pillow/commit/9e08eb8f78fdfd2f476e1b20b7cf38683754866b
https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html"
122,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2022-30595,">=9.1.0,<9.1.1",libImaging/TgaRleDecode.c in Pillow 9.1.0 has a heap buffer overflow in the processing of invalid TGA image files.
123,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,PVE-2023-55182,">=9.1.0,<9.3.0","Pillow 9.3.0 includes a security fix: Pillow will now decode the data in its natural CMYK mode, then convert it to RGB and rearrange the channels afterwards. Trying to load the data in an incorrect mode could result in a segmentation fault.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#decode-jpeg-compressed-blp1-data-in-original-mode"
124,Pillow,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2022-45199,">=9.2.0,<9.3.0","Pillow before 9.3.0 allows denial of service via SAMPLESPERPIXEL.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#limit-samplesperpixel-to-avoid-runtime-dos"
125,certifi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2022-23491,<2022.12.07,"Certifi 2022.12.07 includes a fix for CVE-2022-23491: Certifi 2022.12.07 removes root certificates from ""TrustCor"" from the root store. These are in the process of being removed from Mozilla's trust store. TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found in the linked google group discussion.
https://github.com/certifi/python-certifi/security/advisories/GHSA-43fp-rhv2-5gv8
https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ"
126,urllib3,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2018-20060,<1.23,"urllib3 before version 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext."
127,urllib3,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2019-11324,<1.24.2,"The urllib3 library before 1.24.2 for Python mishandles certain cases where the desired set of CA certificates is different from the OS store of CA certificates, which results in SSL connections succeeding in situations where a verification failure is the correct outcome. This is related to use of the ssl_context, ca_certs, or ca_certs_dir argument."
128,urllib3,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-26137,<1.25.9,"Urllib3 1.25.9 includes a fix for CVE-2020-26137: Urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). NOTE: this is similar to CVE-2020-26116.
https://github.com/python/cpython/issues/83784"
129,urllib3,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-33503,<1.26.5,"Urllib3 1.26.5 includes a fix for CVE-2021-33503: When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect."
130,urllib3,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2019-11236,<=1.24.1,"In the urllib3 library through 1.24.1 for Python, CRLF injection is possible if the attacker controls the request parameter."
131,urllib3,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-7212,">=1.25.2,<=1.25.7","The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2). See: CVE-2020-7212."
132,urllib3,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-28363,">=1.26.0,<1.26.4","Urllib3 1.26.4 includes a fix for CVE-2021-28363: The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.
https://github.com/urllib3/urllib3/security/advisories/GHSA-5phf-pp7p-vc2r"
133,configparser,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
134,iso8601,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
135,coverage,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
136,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
137,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
138,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
139,elasticsearch,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
140,millify,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
141,np,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
142,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2014-1830,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. This fixes CVE-2014-1830.
143,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2014-1829,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. See: CVE-2014-1829.
144,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2018-18074,<=2.19.1,"Requests before 2.20.0 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
145,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
146,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
147,idna,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
148,six,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
149,keyrings.alt,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
150,pyasn1,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
151,validators,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2019-19588,">=0.12.2,<=0.12.5",The validators package 0.12.2 through 0.12.5 for Python enters an infinite loop when validators.domain is called with a crafted domain string. This is fixed in 0.12.6. See: CVE-2019-19588.
152,flake8,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
153,pygrok,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
154,lxml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2014-3146,<3.3.5,Incomplete blacklist vulnerability in the lxml.html.clean module in lxml before 3.3.5 allows remote attackers to conduct cross-site scripting (XSS) attacks via control characters in the link scheme to the clean_html function.
155,lxml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2018-19787,<4.2.5,"Lxml 4.2.5 includes a fix for CVE-2018-19787: lxml/html/clean.py in the lxml.html.clean module does not remove javascript: URLs that use escaping, allowing a remote attacker to conduct XSS attacks, as demonstrated by ""j a v a s c r i p t:"" in Internet Explorer. This is a similar issue to CVE-2014-3146."
156,lxml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,PVE-2021-39195,<4.4.0,"In lxml before 4.4.0, when writing to file paths that contain the URL escape character '%', the file path could wrongly be mangled by URL unescaping and thus write to a different file or directory.  Code that writes to file paths that are provided by untrusted sources, but that must work with previous versions of lxml, should best either reject paths that contain '%' characters, or otherwise make sure that the path does not contain maliciously injected '%XX' URL hex escapes for paths like '../'.
https://github.com/lxml/lxml/commit/0245aba002f069a0b157282707bdf77418d1b5be"
157,lxml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-27783,<4.6.2,"Lxml 4.6.2 includes a fix for CVE-2020-27783: A XSS vulnerability was discovered in python-lxml's clean module. The module's parser didn't properly imitate browsers, which caused different behaviors between the sanitizer and the user's page. A remote attacker could exploit this flaw to run arbitrary HTML/JS code."
158,lxml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-28957,<4.6.3,"Lxml version 4.6.3 includes a fix for CVE-2021-28957: An XSS vulnerability was discovered in python-lxml's clean module versions before 4.6.3. When disabling the safe_attrs_only and forms arguments, the Cleaner class does not remove the formation attribute allowing for JS to bypass the sanitizer. A remote attacker could exploit this flaw to run arbitrary JS code on users who interact with incorrectly sanitized HTML.
https://bugs.launchpad.net/lxml/+bug/1888153"
159,lxml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2021-43818,<4.6.5,"Lxml 4.6.5 includes a fix for CVE-2021-43818: Prior to version 4.6.5, the HTML Cleaner in lxml.html lets certain crafted script content pass through, as well as script content in SVG files embedded using data URIs. Users that employ the HTML cleaner in a security relevant context should upgrade to lxml 4.6.5 to receive a patch."
160,lxml,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2022-2309,<4.9.1,"Lxml 4.9.1 includes a fix for CVE-2022-2309: NULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn't be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered."
161,scipy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
162,vulture,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
163,regex,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
164,chardet,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
165,croniter,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
166,dateparser,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
167,pandas,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
168,torch,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
169,docopt,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
170,tzlocal,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
171,keyring,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2012-5577,<0.10,Python keyring lib before 0.10 created keyring files with world-readable permissions. See: CVE-2012-5577.
172,keyring,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2012-4571,<0.9.1,"Python Keyring 0.9.1 does not securely initialize the cipher when encrypting passwords for CryptedFileKeyring files, which makes it easier for local users to obtain passwords via a brute-force attack."
173,keyring,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,CVE-2012-5578,<=0.10,Python keyring has insecure permissions on new databases allowing world-readable files to be created. See: CVE-2012-5578.
174,requests-file,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ee-outliers/requirements-no-version.txt,False,no one,no one,no one
