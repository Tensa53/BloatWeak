,dep,version,filepath,bloated,cve,affected versions,advisory
0,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,PVE-2022-52255,<0.24.2,"Scikit-learn 0.24.2 includes a fix for a ReDoS vulnerability.
https://github.com/scikit-learn/scikit-learn/issues/19522"
1,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2020-13092,">=0,<0.23.1","** DISPUTED ** scikit-learn (aka sklearn) through 0.23.0 can unserialize and execute commands from an untrusted file that is passed to the joblib.load() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the joblib.load() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
2,scikit-learn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2020-28975,">=0,<0.24.dev0","** DISPUTED ** svm_predict_values in svm.cpp in Libsvm v324, as used in scikit-learn 0.23.2 and other products, allows attackers to cause a denial of service (segmentation fault) via a crafted model SVM (introduced via pickle, json, or any other model permanence standard) with a large value in the _n_support array. NOTE: the scikit-learn vendor's position is that the behavior can only occur if the library's API is violated by an application that changes a private attribute."
3,matplotlib,>= 3.0.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
4,pandas,>= 1.0.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
5,fastprogress,>= 0.1.21,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
6,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2014-1830,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. This fixes CVE-2014-1830.
7,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2014-1829,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. See: CVE-2014-1829.
8,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2018-18074,<=2.19.1,"Requests before 2.20.0 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
9,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
10,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
11,joblib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,PVE-2022-51394,<1.1.1,"Joblib 1.1.1 fixes a security issue where 'eval(pre_dispatch)' could potentially run arbitrary code. Now only basic numerics are supported.
https://github.com/joblib/joblib/pull/1327"
12,joblib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2022-21797,<1.2.0,"Joblib 1.2.0 includes a fix for CVE-2022-21797: The package joblib from 0 and before 1.2.0 is vulnerable to Arbitrary Code Execution via the pre_dispatch flag in Parallel() class due to the eval() statement.
https://github.com/joblib/joblib/issues/1128"
13,joblib,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,PVE-2022-51041,<1.2.0,"Joblib 1.2.0 fixes a security issue where 'eval(pre_dispatch)' could potentially run arbitrary code. Now only basic numerics are supported.
https://github.com/joblib/joblib/pull/1327"
14,packaging,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
15,langdetect,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
16,jieba,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
17,cchardet,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
18,chardet,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,True,no one,no one,no one
19,syntok,>1.3.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
20,tika,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
21,transformers,>=4.17.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2022-1941,<4.23.0,Transformers 4.23.0 updates its dependency 'protobuf' requirement to '<=3.20.2' to include a security fix.
22,transformers,>=4.17.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,PVE-2022-51450,<4.23.0,"Transformers 4.23.0 includes a fix for a link vulnerable to repojacking.
https://github.com/huggingface/transformers/commit/ce2620194b4a8f070cd29504d34a79758affdf95"
23,sentencepiece,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,True,no one,no one,no one
24,keras_bert,>=0.86.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
25,whoosh,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
26,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2015-4707,<3.2.0,Cross-site scripting (XSS) vulnerability in IPython before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/notebooks path.
27,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2015-5607,<3.2.1,"Ipython 3.2.1 includes a fix for CVE-2015-5607: Cross-site request forgery in the REST API in IPython 2 and 3.
https://github.com/ipython/ipython/commit/1415a9710407e7c14900531813c15ba6165f0816"
28,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2015-6938,<3.2.2,"Cross-site scripting (XSS) vulnerability in the file browser in notebook/notebookapp.py in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to inject arbitrary web script or HTML via a folder name.  NOTE: this was originally reported as a cross-site request forgery (CSRF) vulnerability, but this may be inaccurate."
29,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2015-7337,<3.2.2,"The editor in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to execute arbitrary JavaScript code via a crafted file, which triggers a redirect to files/, related to MIME types."
30,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2023-24816,<8.10.0,"IPython 8.10.0 includes a fix for CVE-2023-24816: Versions prior to 8.10.0 are subject to a command injection vulnerability with very specific prerequisites. This vulnerability requires that the function 'IPython.utils.terminal.set_term_title' be called on Windows in a Python environment where ctypes is not available. The dependency on 'ctypes' in 'IPython.utils._process_win32' prevents the vulnerable code from ever being reached in the ipython binary. However, as a library that could be used by another tool 'set_term_title' could be called and hence introduce a vulnerability. If an attacker get untrusted input to an instance of this function they would be able to inject shell commands as current process and limited to the scope of the current process. As a workaround, users should ensure that any calls to the 'IPython.utils.terminal.set_term_title' function are done with trusted or filtered input.
https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7"
31,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2014-3429,">=0.12,<1.2","IPython Notebook 0.12 through 1.x before 1.2 does not validate the origin of websocket requests, which allows remote attackers to execute arbitrary code by leveraging knowledge of the kernel id and a crafted page."
32,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2016-6524,">=2.0.0,<4.0.0",Ipython 4.0 includes a fix for CVE-2016-6524: Untrusted LaTeX output could be added to the page in a way that could execute javascript.
33,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2015-4706,">=3.0.0,<3.2.0",Cross-site scripting (XSS) vulnerability in IPython 3.x before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/contents path.
34,ipython,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2022-21699,">=8.0.0a0,<8.0.1,>=7.17.0,<7.31.1,>=6.0.0a0,<7.16.3,<5.11","Ipython versions 8.0.1, 7.31.1, 7.16.3 and 5.11 include a fix for CVE-2022-21699: Affected versions are subject to an arbitrary code execution vulnerability achieved by not properly managing cross user temporary files. This vulnerability allows one user to run code as another on the same machine.
https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x"
35,textract,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,CVE-2016-10320,<1.5.0,Textract 1.5.0 includes a fix for CVE-2016-10320: Textract before 1.5.0 allows OS Command Injection attacks via a filename in a call to the process function. This may be a remote attack if a web application accepts names of arbitrary uploaded files.
36,paper-qa,==2.1.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
37,datasets,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
38,textblob,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
39,sumy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
40,causalnlp,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
41,librosa,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
42,shap,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/ktrain/setup.py,False,no one,no one,no one
