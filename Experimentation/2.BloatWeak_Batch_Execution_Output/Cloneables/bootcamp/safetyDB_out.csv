,dep,version,filepath,bloated,cve,affected versions,advisory
0,towhee.models,==1.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,no one,no one,no one
1,PyMySQL,==1.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,no one,no one,no one
2,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
3,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
4,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
5,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
6,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
7,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
8,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
9,numpy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
10,pandas,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
11,pymilvus,==2.2.11,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,no one,no one,no one
12,uvicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2020-7695,<0.11.7,"Uvicorn before 0.11.7 is vulnerable to HTTP response splitting. CRLF sequences are not escaped in the value of HTTP headers. Attackers can exploit this to add arbitrary headers to HTTP responses, or even return an arbitrary response body, whenever crafted input is used to construct HTTP headers."
13,uvicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2020-7694,<0.11.7,"The request logger provided by Uvicorn prior to version 0.11.7 is vulnerable to ASNI escape sequence injection. Whenever any HTTP request is received, the default behaviour of uvicorn is to log its details to either the console or a log file. When attackers request crafted URLs with percent-encoded escape sequences, the logging component will log the URL after it's been processed with urllib.parse.unquote, therefore converting any percent-encoded characters into their single-character equivalent, which can have special meaning in terminal emulators. By requesting URLs with crafted paths, attackers can: * Pollute uvicorn's access logs, therefore jeopardising the integrity of such files. * Use ANSI sequence codes to attempt to interact with the terminal emulator that's displaying the logs (either in real time or from a file). See: CVE-2020-7694."
14,python-multipart,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,no one,no one,no one
15,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2019-11324,<0.18.0,Fastapi 0.18.0 updates its dependency 'urllib3' to v1.24.2 to include a security fix.
16,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,PVE-2021-37231,<0.30.0,"Fastapi 0.30.0 avoids/fixes a potential security issue: as the returned object is passed directly to Pydantic, if the returned object was a subclass of the `response_model` (e.g. you return a `UserInDB` that inherits from `User` but contains extra fields, like `hashed_password`, and `User` is used in the `response_model`), it would still pass the validation (because `UserInDB` is a subclass of `User`) and the object would be returned as-is, including the `hashed_password`. To fix this, the declared `response_model` is cloned, if it is a Pydantic model class (or contains Pydantic model classes in it, e.g. in a `List[Item]`), the Pydantic model class(es) will be a different one (the ""cloned"" one). So, an object that is a subclass won't simply pass the validation and returned as-is, because it is no longer a sub-class of the cloned `response_model`. Instead, a new Pydantic model object will be created with the contents of the returned object. So, it will be a new object (made with the data from the returned one), and will be filtered by the cloned `response_model`, containing only the declared fields as normally."
17,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,PVE-2021-37428,<0.37.0,Fastapi 0.37.0 fixes a security issue: when returning a sub-class of a response model and using `skip_defaults` it could leak information. See: https://github.com/tiangolo/fastapi/pull/485
18,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2021-29510,<0.65.1,"Fastapi 0.65.1 upgrades pydantic pin, to handle CVE-2021-29510."
19,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2021-32677,<0.65.2,"Fastapi version 0.65.2 includes a security fix for CVE-2021-32677: FastAPI versions lower than 0.65.2 that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack. In versions lower than 0.65.2, FastAPI would try to read the request payload as JSON even if the content-type header sent was not set to application/json or a compatible JSON media type (e.g. application/geo+json). A request with a content type of text/plain containing JSON data would be accepted and the JSON data would be extracted. Requests with content type text/plain are exempt from CORS preflights, for being considered Simple requests. The browser will execute them right away including cookies, and the text content could be a JSON string that would be parsed and accepted by the FastAPI application. The request data is now parsed as JSON only if the content-type header is application/json or another JSON compatible media type like application/geo+json. It's best to upgrade to the latest FastAPI, but if updating is not possible then a middleware or a dependency that checks the content-type header and aborts the request if it is not application/json or another JSON compatible content type can act as a mitigating workaround.
https://github.com/tiangolo/fastapi/security/advisories/GHSA-8h2j-cgx8-6xv7
https://github.com/tiangolo/fastapi/commit/fa7e3c996edf2d5482fff8f9d890ac2390dede4d"
20,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2021-46708,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
21,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2018-25031,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
22,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2021-45958,<0.75.2,Fastapi 0.75.2 updates its dependency 'ujson' ranges to include a security fix.
23,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2023-30798,<0.92.0,Fastapi 0.92.0 updates its dependency 'Starlette' to v0.25.0 to include a security fix.
24,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,CVE-2023-29159,<0.95.2,Fastapi 0.95.2 updates its dependency 'Starlette' to versions '>=0.27.0' to include a security fix.
25,towhee,==1.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/question_answering_system/server/requirements.txt,False,no one,no one,no one
26,towhee,==0.9.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/OpenAI/requirements.txt,False,no one,no one,no one
27,pymilvus,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/nlp/OpenAI/requirements.txt,False,no one,no one,no one
28,diskcache,==5.2.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,no one,no one,no one
29,numpy,==1.21.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
30,numpy,==1.21.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
31,numpy,==1.21.3,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
32,python-multipart,==0.0.5,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,no one,no one,no one
33,pillow,==8.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2014-3589,"<2.3.2,>=2.5.0,<2.5.2","Pillow versions 2.3.2 and 2.5.2 include a fix for CVE-2014-3589: PIL/IcnsImagePlugin.py in Python Imaging Library (PIL) and Pillow before 2.3.2 and 2.5.x before 2.5.2 allows remote attackers to cause a denial of service via a crafted block size.
https://github.com/python-pillow/Pillow/commit/205e056f8f9b06ed7b925cf8aa0874bc4aaf8a7d"
34,pillow,==8.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2022-22816,<9.0.0,"Pillow 9.0.0 includes a fix for CVE-2022-22816: path_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling"
35,pillow,==8.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,PVE-2021-44525,<9.0.0,"Pillow 9.0.0 excludes carriage return in PDF regex to help prevent ReDoS.
https://github.com/python-pillow/Pillow/pull/5912
https://github.com/python-pillow/Pillow/commit/43b800d933c996226e4d7df00c33fcbe46d97363"
36,pillow,==8.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,PVE-2022-44524,<9.0.0,"Pillow 9.0.0 ensures JpegImagePlugin stops at the end of a truncated file to avoid Denial of Service attacks.
https://github.com/python-pillow/Pillow/pull/5921
https://github.com/advisories/GHSA-4fx9-vc88-q2xc"
37,pillow,==8.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2022-22815,<9.0.0,"Pillow 9.0.0 includes a fix for CVE-2022-22815: path_getbbox in path.c in Pillow before 9.0.0 improperly initializes ImagePath.Path.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling"
38,pillow,==8.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2022-24303,<9.0.1,Pillow before 9.0.1 allows attackers to delete files because spaces in temporary pathnames are mishandled.
39,pillow,==8.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2022-22817,<9.0.1,"Pillow 9.0.1 includes a fix for CVE-2022-22817: PIL.ImageMath.eval in Pillow before 9.0.0 allows evaluation of arbitrary expressions, such as ones that use the Python exec method. A first patch was issued for version 9.0.0 but it did not prevent builtins available to lambda expressions.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html#security"
40,pillow,==8.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2022-45198,<9.2.0,Pillow before 9.2.0 performs Improper Handling of Highly Compressed GIF Data (Data Amplification).
41,pillow,==8.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2021-28675,">=0,<8.2.0",An issue was discovered in Pillow before 8.2.0. PSDImagePlugin.PsdImageFile lacked a sanity check on the number of input layers relative to the size of the data block. This could lead to a DoS on Image.open prior to Image.load.
42,pillow,==8.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2021-27923,">=4.3.0,<8.1.1","Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large."
43,pillow,==8.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2021-23437,">=5.2.0,<8.3.2","Pillow from 5.2.0 and before 8.3.2 is vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function.
https://github.com/python-pillow/Pillow/commit/9e08eb8f78fdfd2f476e1b20b7cf38683754866b
https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html"
44,pillow,==8.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2022-30595,">=9.1.0,<9.1.1",libImaging/TgaRleDecode.c in Pillow 9.1.0 has a heap buffer overflow in the processing of invalid TGA image files.
45,pillow,==8.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,PVE-2023-55182,">=9.1.0,<9.3.0","Pillow 9.3.0 includes a security fix: Pillow will now decode the data in its natural CMYK mode, then convert it to RGB and rearrange the channels afterwards. Trying to load the data in an incorrect mode could result in a segmentation fault.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#decode-jpeg-compressed-blp1-data-in-original-mode"
46,pillow,==8.4.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2022-45199,">=9.2.0,<9.3.0","Pillow before 9.3.0 allows denial of service via SAMPLESPERPIXEL.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#limit-samplesperpixel-to-avoid-runtime-dos"
47,towhee.models,==1.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,no one,no one,no one
48,PyMySQL,==1.0.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,no one,no one,no one
49,aiofiles,==0.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,no one,no one,no one
50,pymilvus,==2.2.11,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,no one,no one,no one
51,fastapi,==0.65.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2021-46708,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
52,fastapi,==0.65.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2018-25031,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
53,fastapi,==0.65.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2021-45958,<0.75.2,Fastapi 0.75.2 updates its dependency 'ujson' ranges to include a security fix.
54,fastapi,==0.65.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2023-30798,<0.92.0,Fastapi 0.92.0 updates its dependency 'Starlette' to v0.25.0 to include a security fix.
55,fastapi,==0.65.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2023-29159,<0.95.2,Fastapi 0.95.2 updates its dependency 'Starlette' to versions '>=0.27.0' to include a security fix.
56,scipy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
57,pydantic,==1.8.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2020-10735,<1.10.2,"Pydantic 1.10.2 prevents long strings as int inputs to fix CVE-2020-10735.
https://github.com/pydantic/pydantic/commit/eccd85e4d012e70ffbd81f379179da900d4621c5"
58,pydantic,==1.8.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,CVE-2021-29510,">=1.8.0a1,<1.8.2,>=1.7.0a0,<1.7.4,<1.6.2","Pydantic 1.8.2, 1.7.4 and 1.6.2 include a fix for CVE-2021-29510: In affected versions of Pydantic passing either `'infinity'`, `'inf'` or `float('inf')` (or their negatives) to `datetime` or `date` fields causes validation to run forever with 100% CPU usage (on one CPU). Pydantic has been patched with fixes available in the following versions: v1.8.2, v1.7.4, v1.6.2. All these versions are available on pypi(https://pypi.org/project/pydantic/#history), and will be available on conda-forge(https://anaconda.org/conda-forge/pydantic) soon. See the changelog(https://pydantic-docs.helpmanual.io/) for details. If you absolutely can't upgrade, you can work around this risk using a validator(https://pydantic-docs.helpmanual.io/usage/validators/) to catch these values. This is not an ideal solution (in particular you'll need a slightly different function for datetimes), instead of a hack like this you should upgrade pydantic. If you are not using v1.8.x, v1.7.x or v1.6.x and are unable to upgrade to a fixed version of pydantic, please create an issue at https://github.com/samuelcolvin/pydantic/issues requesting a back-port, and we will endeavour to release a patch for earlier versions of pydantic."
59,towhee,==1.1.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,no one,no one,no one
60,uvicorn,==0.13.4,/home/daniele/git/NICHE_projects/Repo/Cloneables/bootcamp/solutions/image/reverse_image_search/server/requirements.txt,False,no one,no one,no one
