,dep,version,filepath,bloated,cve,affected versions,advisory
0,uvicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/translation/requirements.txt,False,CVE-2020-7695,<0.11.7,"Uvicorn before 0.11.7 is vulnerable to HTTP response splitting. CRLF sequences are not escaped in the value of HTTP headers. Attackers can exploit this to add arbitrary headers to HTTP responses, or even return an arbitrary response body, whenever crafted input is used to construct HTTP headers."
1,uvicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/translation/requirements.txt,False,CVE-2020-7694,<0.11.7,"The request logger provided by Uvicorn prior to version 0.11.7 is vulnerable to ASNI escape sequence injection. Whenever any HTTP request is received, the default behaviour of uvicorn is to log its details to either the console or a log file. When attackers request crafted URLs with percent-encoded escape sequences, the logging component will log the URL after it's been processed with urllib.parse.unquote, therefore converting any percent-encoded characters into their single-character equivalent, which can have special meaning in terminal emulators. By requesting URLs with crafted paths, attackers can: * Pollute uvicorn's access logs, therefore jeopardising the integrity of such files. * Use ANSI sequence codes to attempt to interact with the terminal emulator that's displaying the logs (either in real time or from a file). See: CVE-2020-7694."
2,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/translation/requirements.txt,False,CVE-2019-11324,<0.18.0,Fastapi 0.18.0 updates its dependency 'urllib3' to v1.24.2 to include a security fix.
3,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/translation/requirements.txt,False,PVE-2021-37231,<0.30.0,"Fastapi 0.30.0 avoids/fixes a potential security issue: as the returned object is passed directly to Pydantic, if the returned object was a subclass of the `response_model` (e.g. you return a `UserInDB` that inherits from `User` but contains extra fields, like `hashed_password`, and `User` is used in the `response_model`), it would still pass the validation (because `UserInDB` is a subclass of `User`) and the object would be returned as-is, including the `hashed_password`. To fix this, the declared `response_model` is cloned, if it is a Pydantic model class (or contains Pydantic model classes in it, e.g. in a `List[Item]`), the Pydantic model class(es) will be a different one (the ""cloned"" one). So, an object that is a subclass won't simply pass the validation and returned as-is, because it is no longer a sub-class of the cloned `response_model`. Instead, a new Pydantic model object will be created with the contents of the returned object. So, it will be a new object (made with the data from the returned one), and will be filtered by the cloned `response_model`, containing only the declared fields as normally."
4,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/translation/requirements.txt,False,PVE-2021-37428,<0.37.0,Fastapi 0.37.0 fixes a security issue: when returning a sub-class of a response model and using `skip_defaults` it could leak information. See: https://github.com/tiangolo/fastapi/pull/485
5,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/translation/requirements.txt,False,CVE-2021-29510,<0.65.1,"Fastapi 0.65.1 upgrades pydantic pin, to handle CVE-2021-29510."
6,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/translation/requirements.txt,False,CVE-2021-32677,<0.65.2,"Fastapi version 0.65.2 includes a security fix for CVE-2021-32677: FastAPI versions lower than 0.65.2 that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack. In versions lower than 0.65.2, FastAPI would try to read the request payload as JSON even if the content-type header sent was not set to application/json or a compatible JSON media type (e.g. application/geo+json). A request with a content type of text/plain containing JSON data would be accepted and the JSON data would be extracted. Requests with content type text/plain are exempt from CORS preflights, for being considered Simple requests. The browser will execute them right away including cookies, and the text content could be a JSON string that would be parsed and accepted by the FastAPI application. The request data is now parsed as JSON only if the content-type header is application/json or another JSON compatible media type like application/geo+json. It's best to upgrade to the latest FastAPI, but if updating is not possible then a middleware or a dependency that checks the content-type header and aborts the request if it is not application/json or another JSON compatible content type can act as a mitigating workaround.
https://github.com/tiangolo/fastapi/security/advisories/GHSA-8h2j-cgx8-6xv7
https://github.com/tiangolo/fastapi/commit/fa7e3c996edf2d5482fff8f9d890ac2390dede4d"
7,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/translation/requirements.txt,False,CVE-2021-46708,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
8,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/translation/requirements.txt,False,CVE-2018-25031,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
9,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/translation/requirements.txt,False,CVE-2021-45958,<0.75.2,Fastapi 0.75.2 updates its dependency 'ujson' ranges to include a security fix.
10,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/translation/requirements.txt,False,CVE-2023-30798,<0.92.0,Fastapi 0.92.0 updates its dependency 'Starlette' to v0.25.0 to include a security fix.
11,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/translation/requirements.txt,False,CVE-2023-29159,<0.95.2,Fastapi 0.95.2 updates its dependency 'Starlette' to versions '>=0.27.0' to include a security fix.
12,uvicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/token-tagging/requirements.txt,False,CVE-2020-7695,<0.11.7,"Uvicorn before 0.11.7 is vulnerable to HTTP response splitting. CRLF sequences are not escaped in the value of HTTP headers. Attackers can exploit this to add arbitrary headers to HTTP responses, or even return an arbitrary response body, whenever crafted input is used to construct HTTP headers."
13,uvicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/token-tagging/requirements.txt,False,CVE-2020-7694,<0.11.7,"The request logger provided by Uvicorn prior to version 0.11.7 is vulnerable to ASNI escape sequence injection. Whenever any HTTP request is received, the default behaviour of uvicorn is to log its details to either the console or a log file. When attackers request crafted URLs with percent-encoded escape sequences, the logging component will log the URL after it's been processed with urllib.parse.unquote, therefore converting any percent-encoded characters into their single-character equivalent, which can have special meaning in terminal emulators. By requesting URLs with crafted paths, attackers can: * Pollute uvicorn's access logs, therefore jeopardising the integrity of such files. * Use ANSI sequence codes to attempt to interact with the terminal emulator that's displaying the logs (either in real time or from a file). See: CVE-2020-7694."
14,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/token-tagging/requirements.txt,False,CVE-2019-11324,<0.18.0,Fastapi 0.18.0 updates its dependency 'urllib3' to v1.24.2 to include a security fix.
15,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/token-tagging/requirements.txt,False,PVE-2021-37231,<0.30.0,"Fastapi 0.30.0 avoids/fixes a potential security issue: as the returned object is passed directly to Pydantic, if the returned object was a subclass of the `response_model` (e.g. you return a `UserInDB` that inherits from `User` but contains extra fields, like `hashed_password`, and `User` is used in the `response_model`), it would still pass the validation (because `UserInDB` is a subclass of `User`) and the object would be returned as-is, including the `hashed_password`. To fix this, the declared `response_model` is cloned, if it is a Pydantic model class (or contains Pydantic model classes in it, e.g. in a `List[Item]`), the Pydantic model class(es) will be a different one (the ""cloned"" one). So, an object that is a subclass won't simply pass the validation and returned as-is, because it is no longer a sub-class of the cloned `response_model`. Instead, a new Pydantic model object will be created with the contents of the returned object. So, it will be a new object (made with the data from the returned one), and will be filtered by the cloned `response_model`, containing only the declared fields as normally."
16,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/token-tagging/requirements.txt,False,PVE-2021-37428,<0.37.0,Fastapi 0.37.0 fixes a security issue: when returning a sub-class of a response model and using `skip_defaults` it could leak information. See: https://github.com/tiangolo/fastapi/pull/485
17,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/token-tagging/requirements.txt,False,CVE-2021-29510,<0.65.1,"Fastapi 0.65.1 upgrades pydantic pin, to handle CVE-2021-29510."
18,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/token-tagging/requirements.txt,False,CVE-2021-32677,<0.65.2,"Fastapi version 0.65.2 includes a security fix for CVE-2021-32677: FastAPI versions lower than 0.65.2 that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack. In versions lower than 0.65.2, FastAPI would try to read the request payload as JSON even if the content-type header sent was not set to application/json or a compatible JSON media type (e.g. application/geo+json). A request with a content type of text/plain containing JSON data would be accepted and the JSON data would be extracted. Requests with content type text/plain are exempt from CORS preflights, for being considered Simple requests. The browser will execute them right away including cookies, and the text content could be a JSON string that would be parsed and accepted by the FastAPI application. The request data is now parsed as JSON only if the content-type header is application/json or another JSON compatible media type like application/geo+json. It's best to upgrade to the latest FastAPI, but if updating is not possible then a middleware or a dependency that checks the content-type header and aborts the request if it is not application/json or another JSON compatible content type can act as a mitigating workaround.
https://github.com/tiangolo/fastapi/security/advisories/GHSA-8h2j-cgx8-6xv7
https://github.com/tiangolo/fastapi/commit/fa7e3c996edf2d5482fff8f9d890ac2390dede4d"
19,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/token-tagging/requirements.txt,False,CVE-2021-46708,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
20,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/token-tagging/requirements.txt,False,CVE-2018-25031,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
21,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/token-tagging/requirements.txt,False,CVE-2021-45958,<0.75.2,Fastapi 0.75.2 updates its dependency 'ujson' ranges to include a security fix.
22,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/token-tagging/requirements.txt,False,CVE-2023-30798,<0.92.0,Fastapi 0.92.0 updates its dependency 'Starlette' to v0.25.0 to include a security fix.
23,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/token-tagging/requirements.txt,False,CVE-2023-29159,<0.95.2,Fastapi 0.95.2 updates its dependency 'Starlette' to versions '>=0.27.0' to include a security fix.
24,uvicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/summarization/requirements.txt,False,CVE-2020-7695,<0.11.7,"Uvicorn before 0.11.7 is vulnerable to HTTP response splitting. CRLF sequences are not escaped in the value of HTTP headers. Attackers can exploit this to add arbitrary headers to HTTP responses, or even return an arbitrary response body, whenever crafted input is used to construct HTTP headers."
25,uvicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/summarization/requirements.txt,False,CVE-2020-7694,<0.11.7,"The request logger provided by Uvicorn prior to version 0.11.7 is vulnerable to ASNI escape sequence injection. Whenever any HTTP request is received, the default behaviour of uvicorn is to log its details to either the console or a log file. When attackers request crafted URLs with percent-encoded escape sequences, the logging component will log the URL after it's been processed with urllib.parse.unquote, therefore converting any percent-encoded characters into their single-character equivalent, which can have special meaning in terminal emulators. By requesting URLs with crafted paths, attackers can: * Pollute uvicorn's access logs, therefore jeopardising the integrity of such files. * Use ANSI sequence codes to attempt to interact with the terminal emulator that's displaying the logs (either in real time or from a file). See: CVE-2020-7694."
26,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/summarization/requirements.txt,False,CVE-2019-11324,<0.18.0,Fastapi 0.18.0 updates its dependency 'urllib3' to v1.24.2 to include a security fix.
27,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/summarization/requirements.txt,False,PVE-2021-37231,<0.30.0,"Fastapi 0.30.0 avoids/fixes a potential security issue: as the returned object is passed directly to Pydantic, if the returned object was a subclass of the `response_model` (e.g. you return a `UserInDB` that inherits from `User` but contains extra fields, like `hashed_password`, and `User` is used in the `response_model`), it would still pass the validation (because `UserInDB` is a subclass of `User`) and the object would be returned as-is, including the `hashed_password`. To fix this, the declared `response_model` is cloned, if it is a Pydantic model class (or contains Pydantic model classes in it, e.g. in a `List[Item]`), the Pydantic model class(es) will be a different one (the ""cloned"" one). So, an object that is a subclass won't simply pass the validation and returned as-is, because it is no longer a sub-class of the cloned `response_model`. Instead, a new Pydantic model object will be created with the contents of the returned object. So, it will be a new object (made with the data from the returned one), and will be filtered by the cloned `response_model`, containing only the declared fields as normally."
28,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/summarization/requirements.txt,False,PVE-2021-37428,<0.37.0,Fastapi 0.37.0 fixes a security issue: when returning a sub-class of a response model and using `skip_defaults` it could leak information. See: https://github.com/tiangolo/fastapi/pull/485
29,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/summarization/requirements.txt,False,CVE-2021-29510,<0.65.1,"Fastapi 0.65.1 upgrades pydantic pin, to handle CVE-2021-29510."
30,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/summarization/requirements.txt,False,CVE-2021-32677,<0.65.2,"Fastapi version 0.65.2 includes a security fix for CVE-2021-32677: FastAPI versions lower than 0.65.2 that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack. In versions lower than 0.65.2, FastAPI would try to read the request payload as JSON even if the content-type header sent was not set to application/json or a compatible JSON media type (e.g. application/geo+json). A request with a content type of text/plain containing JSON data would be accepted and the JSON data would be extracted. Requests with content type text/plain are exempt from CORS preflights, for being considered Simple requests. The browser will execute them right away including cookies, and the text content could be a JSON string that would be parsed and accepted by the FastAPI application. The request data is now parsed as JSON only if the content-type header is application/json or another JSON compatible media type like application/geo+json. It's best to upgrade to the latest FastAPI, but if updating is not possible then a middleware or a dependency that checks the content-type header and aborts the request if it is not application/json or another JSON compatible content type can act as a mitigating workaround.
https://github.com/tiangolo/fastapi/security/advisories/GHSA-8h2j-cgx8-6xv7
https://github.com/tiangolo/fastapi/commit/fa7e3c996edf2d5482fff8f9d890ac2390dede4d"
31,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/summarization/requirements.txt,False,CVE-2021-46708,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
32,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/summarization/requirements.txt,False,CVE-2018-25031,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
33,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/summarization/requirements.txt,False,CVE-2021-45958,<0.75.2,Fastapi 0.75.2 updates its dependency 'ujson' ranges to include a security fix.
34,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/summarization/requirements.txt,False,CVE-2023-30798,<0.92.0,Fastapi 0.92.0 updates its dependency 'Starlette' to v0.25.0 to include a security fix.
35,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/summarization/requirements.txt,False,CVE-2023-29159,<0.95.2,Fastapi 0.95.2 updates its dependency 'Starlette' to versions '>=0.27.0' to include a security fix.
36,uvicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/sequence-classification/requirements.txt,False,CVE-2020-7695,<0.11.7,"Uvicorn before 0.11.7 is vulnerable to HTTP response splitting. CRLF sequences are not escaped in the value of HTTP headers. Attackers can exploit this to add arbitrary headers to HTTP responses, or even return an arbitrary response body, whenever crafted input is used to construct HTTP headers."
37,uvicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/sequence-classification/requirements.txt,False,CVE-2020-7694,<0.11.7,"The request logger provided by Uvicorn prior to version 0.11.7 is vulnerable to ASNI escape sequence injection. Whenever any HTTP request is received, the default behaviour of uvicorn is to log its details to either the console or a log file. When attackers request crafted URLs with percent-encoded escape sequences, the logging component will log the URL after it's been processed with urllib.parse.unquote, therefore converting any percent-encoded characters into their single-character equivalent, which can have special meaning in terminal emulators. By requesting URLs with crafted paths, attackers can: * Pollute uvicorn's access logs, therefore jeopardising the integrity of such files. * Use ANSI sequence codes to attempt to interact with the terminal emulator that's displaying the logs (either in real time or from a file). See: CVE-2020-7694."
38,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/sequence-classification/requirements.txt,False,CVE-2019-11324,<0.18.0,Fastapi 0.18.0 updates its dependency 'urllib3' to v1.24.2 to include a security fix.
39,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/sequence-classification/requirements.txt,False,PVE-2021-37231,<0.30.0,"Fastapi 0.30.0 avoids/fixes a potential security issue: as the returned object is passed directly to Pydantic, if the returned object was a subclass of the `response_model` (e.g. you return a `UserInDB` that inherits from `User` but contains extra fields, like `hashed_password`, and `User` is used in the `response_model`), it would still pass the validation (because `UserInDB` is a subclass of `User`) and the object would be returned as-is, including the `hashed_password`. To fix this, the declared `response_model` is cloned, if it is a Pydantic model class (or contains Pydantic model classes in it, e.g. in a `List[Item]`), the Pydantic model class(es) will be a different one (the ""cloned"" one). So, an object that is a subclass won't simply pass the validation and returned as-is, because it is no longer a sub-class of the cloned `response_model`. Instead, a new Pydantic model object will be created with the contents of the returned object. So, it will be a new object (made with the data from the returned one), and will be filtered by the cloned `response_model`, containing only the declared fields as normally."
40,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/sequence-classification/requirements.txt,False,PVE-2021-37428,<0.37.0,Fastapi 0.37.0 fixes a security issue: when returning a sub-class of a response model and using `skip_defaults` it could leak information. See: https://github.com/tiangolo/fastapi/pull/485
41,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/sequence-classification/requirements.txt,False,CVE-2021-29510,<0.65.1,"Fastapi 0.65.1 upgrades pydantic pin, to handle CVE-2021-29510."
42,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/sequence-classification/requirements.txt,False,CVE-2021-32677,<0.65.2,"Fastapi version 0.65.2 includes a security fix for CVE-2021-32677: FastAPI versions lower than 0.65.2 that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack. In versions lower than 0.65.2, FastAPI would try to read the request payload as JSON even if the content-type header sent was not set to application/json or a compatible JSON media type (e.g. application/geo+json). A request with a content type of text/plain containing JSON data would be accepted and the JSON data would be extracted. Requests with content type text/plain are exempt from CORS preflights, for being considered Simple requests. The browser will execute them right away including cookies, and the text content could be a JSON string that would be parsed and accepted by the FastAPI application. The request data is now parsed as JSON only if the content-type header is application/json or another JSON compatible media type like application/geo+json. It's best to upgrade to the latest FastAPI, but if updating is not possible then a middleware or a dependency that checks the content-type header and aborts the request if it is not application/json or another JSON compatible content type can act as a mitigating workaround.
https://github.com/tiangolo/fastapi/security/advisories/GHSA-8h2j-cgx8-6xv7
https://github.com/tiangolo/fastapi/commit/fa7e3c996edf2d5482fff8f9d890ac2390dede4d"
43,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/sequence-classification/requirements.txt,False,CVE-2021-46708,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
44,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/sequence-classification/requirements.txt,False,CVE-2018-25031,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
45,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/sequence-classification/requirements.txt,False,CVE-2021-45958,<0.75.2,Fastapi 0.75.2 updates its dependency 'ujson' ranges to include a security fix.
46,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/sequence-classification/requirements.txt,False,CVE-2023-30798,<0.92.0,Fastapi 0.92.0 updates its dependency 'Starlette' to v0.25.0 to include a security fix.
47,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/sequence-classification/requirements.txt,False,CVE-2023-29159,<0.95.2,Fastapi 0.95.2 updates its dependency 'Starlette' to versions '>=0.27.0' to include a security fix.
48,uvicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/question-answering/requirements.txt,False,CVE-2020-7695,<0.11.7,"Uvicorn before 0.11.7 is vulnerable to HTTP response splitting. CRLF sequences are not escaped in the value of HTTP headers. Attackers can exploit this to add arbitrary headers to HTTP responses, or even return an arbitrary response body, whenever crafted input is used to construct HTTP headers."
49,uvicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/question-answering/requirements.txt,False,CVE-2020-7694,<0.11.7,"The request logger provided by Uvicorn prior to version 0.11.7 is vulnerable to ASNI escape sequence injection. Whenever any HTTP request is received, the default behaviour of uvicorn is to log its details to either the console or a log file. When attackers request crafted URLs with percent-encoded escape sequences, the logging component will log the URL after it's been processed with urllib.parse.unquote, therefore converting any percent-encoded characters into their single-character equivalent, which can have special meaning in terminal emulators. By requesting URLs with crafted paths, attackers can: * Pollute uvicorn's access logs, therefore jeopardising the integrity of such files. * Use ANSI sequence codes to attempt to interact with the terminal emulator that's displaying the logs (either in real time or from a file). See: CVE-2020-7694."
50,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/question-answering/requirements.txt,False,CVE-2019-11324,<0.18.0,Fastapi 0.18.0 updates its dependency 'urllib3' to v1.24.2 to include a security fix.
51,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/question-answering/requirements.txt,False,PVE-2021-37231,<0.30.0,"Fastapi 0.30.0 avoids/fixes a potential security issue: as the returned object is passed directly to Pydantic, if the returned object was a subclass of the `response_model` (e.g. you return a `UserInDB` that inherits from `User` but contains extra fields, like `hashed_password`, and `User` is used in the `response_model`), it would still pass the validation (because `UserInDB` is a subclass of `User`) and the object would be returned as-is, including the `hashed_password`. To fix this, the declared `response_model` is cloned, if it is a Pydantic model class (or contains Pydantic model classes in it, e.g. in a `List[Item]`), the Pydantic model class(es) will be a different one (the ""cloned"" one). So, an object that is a subclass won't simply pass the validation and returned as-is, because it is no longer a sub-class of the cloned `response_model`. Instead, a new Pydantic model object will be created with the contents of the returned object. So, it will be a new object (made with the data from the returned one), and will be filtered by the cloned `response_model`, containing only the declared fields as normally."
52,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/question-answering/requirements.txt,False,PVE-2021-37428,<0.37.0,Fastapi 0.37.0 fixes a security issue: when returning a sub-class of a response model and using `skip_defaults` it could leak information. See: https://github.com/tiangolo/fastapi/pull/485
53,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/question-answering/requirements.txt,False,CVE-2021-29510,<0.65.1,"Fastapi 0.65.1 upgrades pydantic pin, to handle CVE-2021-29510."
54,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/question-answering/requirements.txt,False,CVE-2021-32677,<0.65.2,"Fastapi version 0.65.2 includes a security fix for CVE-2021-32677: FastAPI versions lower than 0.65.2 that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack. In versions lower than 0.65.2, FastAPI would try to read the request payload as JSON even if the content-type header sent was not set to application/json or a compatible JSON media type (e.g. application/geo+json). A request with a content type of text/plain containing JSON data would be accepted and the JSON data would be extracted. Requests with content type text/plain are exempt from CORS preflights, for being considered Simple requests. The browser will execute them right away including cookies, and the text content could be a JSON string that would be parsed and accepted by the FastAPI application. The request data is now parsed as JSON only if the content-type header is application/json or another JSON compatible media type like application/geo+json. It's best to upgrade to the latest FastAPI, but if updating is not possible then a middleware or a dependency that checks the content-type header and aborts the request if it is not application/json or another JSON compatible content type can act as a mitigating workaround.
https://github.com/tiangolo/fastapi/security/advisories/GHSA-8h2j-cgx8-6xv7
https://github.com/tiangolo/fastapi/commit/fa7e3c996edf2d5482fff8f9d890ac2390dede4d"
55,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/question-answering/requirements.txt,False,CVE-2021-46708,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
56,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/question-answering/requirements.txt,False,CVE-2018-25031,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
57,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/question-answering/requirements.txt,False,CVE-2021-45958,<0.75.2,Fastapi 0.75.2 updates its dependency 'ujson' ranges to include a security fix.
58,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/question-answering/requirements.txt,False,CVE-2023-30798,<0.92.0,Fastapi 0.92.0 updates its dependency 'Starlette' to v0.25.0 to include a security fix.
59,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/question-answering/requirements.txt,False,CVE-2023-29159,<0.95.2,Fastapi 0.95.2 updates its dependency 'Starlette' to versions '>=0.27.0' to include a security fix.
60,uvicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/text-generation/requirements.txt,False,CVE-2020-7695,<0.11.7,"Uvicorn before 0.11.7 is vulnerable to HTTP response splitting. CRLF sequences are not escaped in the value of HTTP headers. Attackers can exploit this to add arbitrary headers to HTTP responses, or even return an arbitrary response body, whenever crafted input is used to construct HTTP headers."
61,uvicorn,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/text-generation/requirements.txt,False,CVE-2020-7694,<0.11.7,"The request logger provided by Uvicorn prior to version 0.11.7 is vulnerable to ASNI escape sequence injection. Whenever any HTTP request is received, the default behaviour of uvicorn is to log its details to either the console or a log file. When attackers request crafted URLs with percent-encoded escape sequences, the logging component will log the URL after it's been processed with urllib.parse.unquote, therefore converting any percent-encoded characters into their single-character equivalent, which can have special meaning in terminal emulators. By requesting URLs with crafted paths, attackers can: * Pollute uvicorn's access logs, therefore jeopardising the integrity of such files. * Use ANSI sequence codes to attempt to interact with the terminal emulator that's displaying the logs (either in real time or from a file). See: CVE-2020-7694."
62,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/text-generation/requirements.txt,False,CVE-2019-11324,<0.18.0,Fastapi 0.18.0 updates its dependency 'urllib3' to v1.24.2 to include a security fix.
63,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/text-generation/requirements.txt,False,PVE-2021-37231,<0.30.0,"Fastapi 0.30.0 avoids/fixes a potential security issue: as the returned object is passed directly to Pydantic, if the returned object was a subclass of the `response_model` (e.g. you return a `UserInDB` that inherits from `User` but contains extra fields, like `hashed_password`, and `User` is used in the `response_model`), it would still pass the validation (because `UserInDB` is a subclass of `User`) and the object would be returned as-is, including the `hashed_password`. To fix this, the declared `response_model` is cloned, if it is a Pydantic model class (or contains Pydantic model classes in it, e.g. in a `List[Item]`), the Pydantic model class(es) will be a different one (the ""cloned"" one). So, an object that is a subclass won't simply pass the validation and returned as-is, because it is no longer a sub-class of the cloned `response_model`. Instead, a new Pydantic model object will be created with the contents of the returned object. So, it will be a new object (made with the data from the returned one), and will be filtered by the cloned `response_model`, containing only the declared fields as normally."
64,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/text-generation/requirements.txt,False,PVE-2021-37428,<0.37.0,Fastapi 0.37.0 fixes a security issue: when returning a sub-class of a response model and using `skip_defaults` it could leak information. See: https://github.com/tiangolo/fastapi/pull/485
65,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/text-generation/requirements.txt,False,CVE-2021-29510,<0.65.1,"Fastapi 0.65.1 upgrades pydantic pin, to handle CVE-2021-29510."
66,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/text-generation/requirements.txt,False,CVE-2021-32677,<0.65.2,"Fastapi version 0.65.2 includes a security fix for CVE-2021-32677: FastAPI versions lower than 0.65.2 that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack. In versions lower than 0.65.2, FastAPI would try to read the request payload as JSON even if the content-type header sent was not set to application/json or a compatible JSON media type (e.g. application/geo+json). A request with a content type of text/plain containing JSON data would be accepted and the JSON data would be extracted. Requests with content type text/plain are exempt from CORS preflights, for being considered Simple requests. The browser will execute them right away including cookies, and the text content could be a JSON string that would be parsed and accepted by the FastAPI application. The request data is now parsed as JSON only if the content-type header is application/json or another JSON compatible media type like application/geo+json. It's best to upgrade to the latest FastAPI, but if updating is not possible then a middleware or a dependency that checks the content-type header and aborts the request if it is not application/json or another JSON compatible content type can act as a mitigating workaround.
https://github.com/tiangolo/fastapi/security/advisories/GHSA-8h2j-cgx8-6xv7
https://github.com/tiangolo/fastapi/commit/fa7e3c996edf2d5482fff8f9d890ac2390dede4d"
67,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/text-generation/requirements.txt,False,CVE-2021-46708,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
68,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/text-generation/requirements.txt,False,CVE-2018-25031,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
69,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/text-generation/requirements.txt,False,CVE-2021-45958,<0.75.2,Fastapi 0.75.2 updates its dependency 'ujson' ranges to include a security fix.
70,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/text-generation/requirements.txt,False,CVE-2023-30798,<0.92.0,Fastapi 0.92.0 updates its dependency 'Starlette' to v0.25.0 to include a security fix.
71,fastapi,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/rest/text-generation/requirements.txt,False,CVE-2023-29159,<0.95.2,Fastapi 0.95.2 updates its dependency 'Starlette' to versions '>=0.27.0' to include a security fix.
72,mkautodoc,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/requirements.txt,False,no one,no one,no one
73,mkdocs,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/requirements.txt,False,PVE-2022-47794,<1.3.0,"Mkdocs 1.3.0 fixes an XSS vulnerability which was present when using the search function in built-in themes.
https://github.com/mkdocs/mkdocs/commit/5cf196361bb0f8364f667ed98888ffa064982efa"
74,mkdocs,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/requirements.txt,False,CVE-2021-40978,">=0,<1.2.3","The mkdocs 1.2.2 built-in dev-server allows directory traversal using the port 8000, enabling remote exploitation to obtain :sensitive information."
75,mkdocs-material,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/requirements.txt,False,PVE-2021-32121,<1.0.0,mkdocs-material before 1.0.0 uses _blank targets on links which make it vulnerable to Cross Site Scripting attacks.
76,mkdocs-material,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/requirements.txt,False,PVE-2022-44813,<5.0.0,Mkdocs-material 5.0.0 updates its NPM dependency 'acorn' to v6.4.1 to include a security fix.
77,mkdocs-material,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/requirements.txt,False,CVE-2020-8203,<5.5.0,Mkdocs-material 5.5.0 updates its dependency 'lodash' to v4.17.19 to include a security fix.
78,mkdocs-material,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/requirements.txt,False,CVE-2020-7788,<6.2.0,Mkdocs-material 6.2.0 updates its dependency 'ini' to v1.3.7 to include a security fix.
79,mkdocs-material,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/requirements.txt,False,PVE-2021-39706,<7.0.6,Mkdocs-material 7.0.6 improves the security of the Docker image.
80,mkdocs-material,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/requirements.txt,False,CVE-2021-23364,<7.1.6,Mkdocs-material 7.1.6 updates its dependency 'browserslist' to v4.16.6 to include a security fix.
81,mkautodoc,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/_site/requirements.txt,False,no one,no one,no one
82,mkdocs,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/_site/requirements.txt,False,PVE-2022-47794,<1.3.0,"Mkdocs 1.3.0 fixes an XSS vulnerability which was present when using the search function in built-in themes.
https://github.com/mkdocs/mkdocs/commit/5cf196361bb0f8364f667ed98888ffa064982efa"
83,mkdocs,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/_site/requirements.txt,False,CVE-2021-40978,">=0,<1.2.3","The mkdocs 1.2.2 built-in dev-server allows directory traversal using the port 8000, enabling remote exploitation to obtain :sensitive information."
84,mkdocs-material,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/_site/requirements.txt,False,PVE-2021-32121,<1.0.0,mkdocs-material before 1.0.0 uses _blank targets on links which make it vulnerable to Cross Site Scripting attacks.
85,mkdocs-material,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/_site/requirements.txt,False,PVE-2022-44813,<5.0.0,Mkdocs-material 5.0.0 updates its NPM dependency 'acorn' to v6.4.1 to include a security fix.
86,mkdocs-material,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/_site/requirements.txt,False,CVE-2020-8203,<5.5.0,Mkdocs-material 5.5.0 updates its dependency 'lodash' to v4.17.19 to include a security fix.
87,mkdocs-material,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/_site/requirements.txt,False,CVE-2020-7788,<6.2.0,Mkdocs-material 6.2.0 updates its dependency 'ini' to v1.3.7 to include a security fix.
88,mkdocs-material,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/_site/requirements.txt,False,PVE-2021-39706,<7.0.6,Mkdocs-material 7.0.6 improves the security of the Docker image.
89,mkdocs-material,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/adaptnlp/docs/_site/requirements.txt,False,CVE-2021-23364,<7.1.6,Mkdocs-material 7.1.6 updates its dependency 'browserslist' to v4.16.6 to include a security fix.
