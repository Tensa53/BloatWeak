,dep,version,filepath,bloated,cve,affected versions,advisory
0,makefun,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
1,multipledispatch,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
2,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
3,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
4,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
5,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
6,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
7,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
8,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
9,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
10,opt_einsum,>=2.3.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
11,typing_extensions,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
12,pyro-ppl,>=1.8.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
13,torch,>=1.11.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2022-45907,">=0,<1.13.1","Torch 1.13.1 includes a fix for CVE-2022-45907: In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.
https://github.com/pytorch/pytorch/issues/88868"
14,numpyro,>=0.7.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
15,jax,>=0.2.21,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
16,jaxlib,>=0.1.71,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
17,black,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
18,flake8,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
19,isort,>=5.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
20,pandas,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2020-13091,">=0,<1.0.4","** DISPUTED ** pandas through 1.0.3 can unserialize and execute commands from an untrusted file that is passed to the read_pickle() function, if __reduce__ makes an os.system call. NOTE: third parties dispute this issue because the read_pickle() function is documented as unsafe and it is the user's responsibility to use the function in a secure manner."
21,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2014-3589,"<2.3.2,>=2.5.0,<2.5.2","Pillow versions 2.3.2 and 2.5.2 include a fix for CVE-2014-3589: PIL/IcnsImagePlugin.py in Python Imaging Library (PIL) and Pillow before 2.3.2 and 2.5.x before 2.5.2 allows remote attackers to cause a denial of service via a crafted block size.
https://github.com/python-pillow/Pillow/commit/205e056f8f9b06ed7b925cf8aa0874bc4aaf8a7d"
22,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2021-34552,<8.3.0,"Pillow 8.3.0 includes a fix for CVE-2021-34552: Pillow through 8.2.0 and PIL (also known as Python Imaging Library) through 1.1.7 allow an attacker to pass controlled parameters directly into a convert function to trigger a buffer overflow in Convert.c
https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html#buffer-overflow
https://pillow.readthedocs.io/en/stable/releasenotes/index.html"
23,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2022-22816,<9.0.0,"Pillow 9.0.0 includes a fix for CVE-2022-22816: path_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling"
24,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,PVE-2021-44525,<9.0.0,"Pillow 9.0.0 excludes carriage return in PDF regex to help prevent ReDoS.
https://github.com/python-pillow/Pillow/pull/5912
https://github.com/python-pillow/Pillow/commit/43b800d933c996226e4d7df00c33fcbe46d97363"
25,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,PVE-2022-44524,<9.0.0,"Pillow 9.0.0 ensures JpegImagePlugin stops at the end of a truncated file to avoid Denial of Service attacks.
https://github.com/python-pillow/Pillow/pull/5921
https://github.com/advisories/GHSA-4fx9-vc88-q2xc"
26,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2022-22815,<9.0.0,"Pillow 9.0.0 includes a fix for CVE-2022-22815: path_getbbox in path.c in Pillow before 9.0.0 improperly initializes ImagePath.Path.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling"
27,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2022-24303,<9.0.1,Pillow before 9.0.1 allows attackers to delete files because spaces in temporary pathnames are mishandled.
28,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2022-22817,<9.0.1,"Pillow 9.0.1 includes a fix for CVE-2022-22817: PIL.ImageMath.eval in Pillow before 9.0.0 allows evaluation of arbitrary expressions, such as ones that use the Python exec method. A first patch was issued for version 9.0.0 but it did not prevent builtins available to lambda expressions.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html#security"
29,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2022-45198,<9.2.0,Pillow before 9.2.0 performs Improper Handling of Highly Compressed GIF Data (Data Amplification).
30,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2021-28675,">=0,<8.2.0",An issue was discovered in Pillow before 8.2.0. PSDImagePlugin.PsdImageFile lacked a sanity check on the number of input layers relative to the size of the data block. This could lead to a DoS on Image.open prior to Image.load.
31,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2021-27923,">=4.3.0,<8.1.1","Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large."
32,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2021-23437,">=5.2.0,<8.3.2","Pillow from 5.2.0 and before 8.3.2 is vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function.
https://github.com/python-pillow/Pillow/commit/9e08eb8f78fdfd2f476e1b20b7cf38683754866b
https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html"
33,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2022-30595,">=9.1.0,<9.1.1",libImaging/TgaRleDecode.c in Pillow 9.1.0 has a heap buffer overflow in the processing of invalid TGA image files.
34,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,PVE-2023-55182,">=9.1.0,<9.3.0","Pillow 9.3.0 includes a security fix: Pillow will now decode the data in its natural CMYK mode, then convert it to RGB and rearrange the channels afterwards. Trying to load the data in an incorrect mode could result in a segmentation fault.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#decode-jpeg-compressed-blp1-data-in-original-mode"
35,pillow,==8.2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2022-45199,">=9.2.0,<9.3.0","Pillow before 9.3.0 allows denial of service via SAMPLESPERPIXEL.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#limit-samplesperpixel-to-avoid-runtime-dos"
36,pyro-api,>=0.1.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
37,pytest,==4.3.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
38,pytest-xdist,==1.27.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
39,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2014-1830,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. This fixes CVE-2014-1830.
40,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2014-1829,<2.3.0,Requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect. See: CVE-2014-1829.
41,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2018-18074,<=2.19.1,"Requests before 2.20.0 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
42,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2015-2296,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.
43,requests,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2023-32681,">=2.3.0,<2.31.0","Requests is a HTTP library. Since Requests 2.3.0, Requests has been leaking Proxy-Authorization headers to destination servers when redirected to an HTTPS endpoint. This is a product of how we use 'rebuild_proxies' to reattach the 'Proxy-Authorization' header to requests. For HTTP connections sent through the tunnel, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the 'Proxy-Authorization' header must be sent in the CONNECT request as the proxy has no visibility into the tunneled request. This results in Requests forwarding proxy credentials to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate sensitive information. This issue has been patched in version 2.31.0.

"
44,scipy,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
45,torchvision,>=0.12.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
46,nbsphinx,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
47,sphinx,>=2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2020-11023,<3.0.4,Sphinx 3.0.4 updates jQuery version from 3.4.1 to 3.5.1 for security reasons.
48,sphinx,>=2.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,CVE-2020-11022,<3.0.4,Sphinx 3.0.4 updates jQuery version from 3.4.1 to 3.5.1 for security reasons.
49,sphinx-gallery,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
50,sphinx_rtd_theme,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/setup.py,False,no one,no one,no one
51,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
52,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
53,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
54,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
55,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
56,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
57,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
58,numpy,>=1.7,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
59,multipledispatch,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,no one,no one,no one
60,opt_einsum,>=2.3.2,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,no one,no one,no one
61,sphinx-gallery,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,no one,no one,no one
62,typing_extensions,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,no one,no one,no one
63,pytest,>=4.1,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,no one,no one,no one
64,nbsphinx,==0.8.9,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,no one,no one,no one
65,makefun,==*,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,no one,no one,no one
66,ipython,<=8.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,CVE-2023-24816,<8.10.0,"IPython 8.10.0 includes a fix for CVE-2023-24816: Versions prior to 8.10.0 are subject to a command injection vulnerability with very specific prerequisites. This vulnerability requires that the function 'IPython.utils.terminal.set_term_title' be called on Windows in a Python environment where ctypes is not available. The dependency on 'ctypes' in 'IPython.utils._process_win32' prevents the vulnerable code from ever being reached in the ipython binary. However, as a library that could be used by another tool 'set_term_title' could be called and hence introduce a vulnerability. If an attacker get untrusted input to an instance of this function they would be able to inject shell commands as current process and limited to the scope of the current process. As a workaround, users should ensure that any calls to the 'IPython.utils.terminal.set_term_title' function are done with trusted or filtered input.
https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7"
67,ipython,<=8.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,CVE-2014-3429,">=0.12,<1.2","IPython Notebook 0.12 through 1.x before 1.2 does not validate the origin of websocket requests, which allows remote attackers to execute arbitrary code by leveraging knowledge of the kernel id and a crafted page."
68,ipython,<=8.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,CVE-2016-6524,">=2.0.0,<4.0.0",Ipython 4.0 includes a fix for CVE-2016-6524: Untrusted LaTeX output could be added to the page in a way that could execute javascript.
69,ipython,<=8.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,CVE-2015-4706,">=3.0.0,<3.2.0",Cross-site scripting (XSS) vulnerability in IPython 3.x before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/contents path.
70,ipython,<=8.6.0,/home/daniele/git/NICHE_projects/Repo/Cloneables/funsor/docs/requirements.txt,False,CVE-2022-21699,">=8.0.0a0,<8.0.1,>=7.17.0,<7.31.1,>=6.0.0a0,<7.16.3,<5.11","Ipython versions 8.0.1, 7.31.1, 7.16.3 and 5.11 include a fix for CVE-2022-21699: Affected versions are subject to an arbitrary code execution vulnerability achieved by not properly managing cross user temporary files. This vulnerability allows one user to run code as another on the same machine.
https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x"
