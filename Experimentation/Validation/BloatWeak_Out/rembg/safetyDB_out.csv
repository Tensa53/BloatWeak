,dep,version,filepath,bloated,cve,affected versions,advisory
0,numpy,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2017-12852,<1.13.2,"Numpy 1.13.2 includes a fix for CVE-2017-12852: The numpy.pad function in Numpy 1.13.1 and older versions is missing input validation. An empty list or ndarray will stick into an infinite loop, which can allow attackers to cause a DoS attack.
https://github.com/numpy/numpy/issues/9560#issuecomment-322395292"
1,numpy,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2019-6446,<1.16.3,"Numpy 1.16.3 includes a fix for CVE-2019-6446: It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.
https://github.com/numpy/numpy/commit/89b688732b37616c9d26623f81aaee1703c30ffb"
2,numpy,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-33430,<1.21.0rc1,"Numpy 1.21.0rc1 includes a fix for CVE-2021-33430: A Buffer Overflow vulnerability in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service. 
NOTE: The vendor does not agree this is a vulnerability. In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.
https://github.com/numpy/numpy/issues/18939"
3,numpy,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-34141,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-34141: An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. 
NOTE: the vendor states that this reported code behavior is ""completely harmless.""
https://github.com/numpy/numpy/issues/18993"
4,numpy,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-41496,<1.22.0,"Numpy 1.22.0 includes a fix for CVE-2021-41496: Buffer overflow in the array_from_pyobj function of fortranobject.c, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. 
NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).
https://github.com/numpy/numpy/issues/19000"
5,numpy,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-41495,<1.22.2,"Numpy 1.22.2  includes a fix for CVE-2021-41495: Null Pointer Dereference vulnerability exists in numpy.sort in NumPy in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. 
NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.
https://github.com/numpy/numpy/issues/19038"
6,numpy,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2014-1859,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1859: (1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/pull/4262"
7,numpy,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2014-1858,<1.8.1,"Numpy 1.8.1 includes a fix for CVE-2014-1858: __init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.
https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
8,onnxruntime,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2022-1941,<1.13.1,Onnxruntime 1.13.1 updates 'protobuf' to v3.18.3 to include a security fix.
9,onnxruntime,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2022-25882,<1.13.1,"Onnxruntime 1.13.1 updates 'onnx' to v1.12.1 to fix a vulnerability that allows reading of tensor_data outside the model directory.
https://github.com/microsoft/onnxruntime/pull/12915"
10,opencv-python-headless,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2019-14493,">=0,<4.1.1.26",An issue was discovered in OpenCV before 4.1.1 (OpenCV-Python before 4.1.1.26). There is a NULL pointer dereference in the function cv::XMLParser::parse at modules/core/src/persistence.cpp.
11,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2014-1932,<2.3.1,pillow before 2.3.1 makes insecure use of tempfile.mktemp (CVE-2014-1932).
12,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2014-1933,<2.3.1,pillow before 2.3.1 makes insecure use of tempfile.mktemp (CVE-2014-1933).
13,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2014-3589,"<2.3.2,>=2.5.0,<2.5.2","Pillow versions 2.3.2 and 2.5.2 include a fix for CVE-2014-3589: PIL/IcnsImagePlugin.py in Python Imaging Library (PIL) and Pillow before 2.3.2 and 2.5.x before 2.5.2 allows remote attackers to cause a denial of service via a crafted block size.
https://github.com/python-pillow/Pillow/commit/205e056f8f9b06ed7b925cf8aa0874bc4aaf8a7d"
14,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2014-3007,<2.5.0,"Pillow 2.5.0 includes a fix that prevents shell injection.
https://github.com/python-pillow/Pillow/pull/731"
15,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2014-3598,<2.5.3,pillow before 2.5.3 is vulnerable to a DoS in the Jpeg2KImagePlugin.
16,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2014-9601,<2.6.2,Pillow before 2.6.2 is vulnerable to a PNG decompression DoS (CVE-2014-9601).
17,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2016-0775,<3.1.1,Buffer overflow in the ImagingFliDecode function in libImaging/FliDecode.c in Pillow before 3.1.1 allows remote attackers to cause a denial of service (crash) via a crafted FLI file.
18,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2016-0740,<3.1.1,Buffer overflow in the ImagingLibTiffDecode function in libImaging/TiffDecode.c in Pillow before 3.1.1 allows remote attackers to overwrite memory via a crafted TIFF file.
19,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2016-2533,<3.1.1,Buffer overflow in the ImagingPcdDecode function in PcdDecode.c in Pillow before 3.1.1 and Python Imaging Library (PIL) 1.1.7 and earlier allows remote attackers to cause a denial of service (crash) via a crafted PhotoCD file.
20,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2016-4009,<3.1.1,"Integer overflow in the ImagingResampleHorizontal function in libImaging/Resample.c in Pillow before 3.1.1 allows remote attackers to have unspecified impact via negative values of the new size, which triggers a heap-based buffer overflow."
21,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2016-3076,<3.1.2,pillow before 3.1.2 is vulnerable to an integer overflow in Jpeg2KEncode.c causing a buffer overflow. CVE-2016-3076.
22,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2016-9189,<3.3.2,"Pillow before 3.3.2 allows context-dependent attackers to obtain sensitive information by using the ""crafted image file"" approach, related to an ""Integer Overflow"" issue affecting the Image.core.map_buffer in map.c component."
23,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2016-9190,<3.3.2,"Pillow before 3.3.2 allows context-dependent attackers to execute arbitrary code by using the ""crafted image file"" approach, related to an ""Insecure Sign Extension"" issue affecting the ImagingNew in Storage.c component."
24,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2019-16865,<6.2.0,"Pillow 6.2.0 includes a fix for CVE-2019-16865: An issue was discovered in Pillow before 6.2.0. When reading specially crafted invalid image files, the library can either allocate very large amounts of memory or take an extremely long period of time to process the image."
25,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-5310,<6.2.2,"libImaging/TiffDecode.c in Pillow before 6.2.2 has a TIFF decoding integer overflow, related to realloc."
26,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-5311,<6.2.2,libImaging/SgiRleDecode.c in Pillow before 6.2.2 has an SGI buffer overflow.
27,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-5313,<6.2.2,libImaging/FliDecode.c in Pillow before 6.2.2 has an FLI buffer overflow.
28,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-5312,<6.2.2,libImaging/PcxDecode.c in Pillow before 6.2.2 has a PCX P mode buffer overflow.
29,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2019-19911,<6.2.2,"There is a DoS vulnerability in Pillow before 6.2.2 caused by FpxImagePlugin.py calling the range function on an unvalidated 32-bit integer if the number of bands is large. On Windows running 32-bit Python, this results in an OverflowError or MemoryError due to the 2 GB limit. However, on Linux running 64-bit Python this results in the process being terminated by the OOM killer."
30,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-10177,<7.1.0,Pillow before 7.1.0 has multiple out-of-bounds reads in libImaging/FliDecode.c.
31,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-10994,<7.1.0,"In libImaging/Jpeg2KDecode.c in Pillow before 7.1.0, there are multiple out-of-bounds reads via a crafted JP2 file."
32,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-10379,<7.1.0,"In Pillow before 7.1.0, there are two Buffer Overflows in libImaging/TiffDecode.c."
33,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-10378,<7.1.0,"In libImaging/PcxDecode.c in Pillow before 7.1.0, an out-of-bounds read can occur when reading PCX files where state->shuffle is instructed to read beyond state->buffer."
34,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-15999,<8.0.1,Pillow 8.0.1 updates 'FreeType' used in binary wheels to v2.10.4 to include a security fix.
35,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-35654,<8.1.0,Pillow 8.1.0 fixes TIFF OOB Write error. CVE-2020-35654 #5175.
36,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-35653,<8.1.0,"In Pillow before 8.1.0, PcxDecode has a buffer over-read when decoding a crafted PCX file because the user-supplied stride value is trusted for buffer calculations."
37,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-35655,<8.1.0,Pillow 8.1.0 includes a fix for SGI Decode buffer overrun. CVE-2020-35655 #5173.
38,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-25289,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25289: TiffDecode has a heap-based buffer overflow when decoding crafted YCbCr files because of certain interpretation conflicts with LibTIFF in RGBA mode. NOTE: this issue exists because of an incomplete fix for CVE-2020-35654.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
39,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-25290,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25290: In TiffDecode.c, there is a negative-offset memcpy with an invalid size.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
40,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-27922,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-27922: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICNS container, and thus an attempted memory allocation can be very large.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
41,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-25291,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25291: In TiffDecode.c, there is an out-of-bounds read in TiffreadRGBATile via invalid tile boundaries.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
42,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-27921,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-27921: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
43,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-25293,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25293: There is an out-of-bounds read in SGIRleDecode.c.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
44,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-25292,<8.1.1,"Pillow 8.1.1 includes a fix for CVE-2021-25292: The PDF parser allows a regular expression DoS (ReDoS) attack via a crafted PDF file because of a catastrophic backtracking regex.
https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"
45,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-25288,<8.2.0,"Pillow 8.2.0 includes a fix for CVE-2021-25288: There is an out-of-bounds read in J2kDecode, in j2ku_gray_i.
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-25287-cve-2021-25288-fix-oob-read-in-jpeg2kdecode"
46,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-28677,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28677: For EPS data, the readline implementation used in EPSImageFile has to deal with any combination of \r and \n as line endings. It used an accidentally quadratic method of accumulating lines while looking for a line ending. A malicious EPS file could use this to perform a DoS of Pillow in the open phase, before an image was accepted for opening.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28677-fix-eps-dos-on-open"
47,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-28678,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28678: For BLP data, BlpImagePlugin did not properly check that reads (after jumping to file offsets) returned data. This could lead to a DoS where the decoder could be run a large number of times on empty data.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28678-fix-blp-dos"
48,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-28676,<8.2.0,"Pillow version 8.2.0 includes a fix for CVE-2021-28676: For FLI data, FliDecode did not properly check that the block advance was non-zero, potentially leading to an infinite loop on load.
https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MQHA5HAIBOYI3R6HDWCLAGFTIQP767FL/
https://github.com/python-pillow/Pillow/pull/5377
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-28676-fix-fli-dos"
49,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-25287,<8.2.0,"Pillow 8.2.0 includes a fix for CVE-2021-25287: There is an out-of-bounds read in J2kDecode, in j2ku_graya_la.
https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html#cve-2021-25287-cve-2021-25288-fix-oob-read-in-jpeg2kdecode"
50,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-34552,<8.3.0,"Pillow 8.3.0 includes a fix for CVE-2021-34552: Pillow through 8.2.0 and PIL (also known as Python Imaging Library) through 1.1.7 allow an attacker to pass controlled parameters directly into a convert function to trigger a buffer overflow in Convert.c
https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html#buffer-overflow
https://pillow.readthedocs.io/en/stable/releasenotes/index.html"
51,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2022-22816,<9.0.0,"Pillow 9.0.0 includes a fix for CVE-2022-22816: path_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling"
52,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,PVE-2021-44525,<9.0.0,"Pillow 9.0.0 excludes carriage return in PDF regex to help prevent ReDoS.
https://github.com/python-pillow/Pillow/pull/5912
https://github.com/python-pillow/Pillow/commit/43b800d933c996226e4d7df00c33fcbe46d97363"
53,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,PVE-2022-44524,<9.0.0,"Pillow 9.0.0 ensures JpegImagePlugin stops at the end of a truncated file to avoid Denial of Service attacks.
https://github.com/python-pillow/Pillow/pull/5921
https://github.com/advisories/GHSA-4fx9-vc88-q2xc"
54,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2022-22815,<9.0.0,"Pillow 9.0.0 includes a fix for CVE-2022-22815: path_getbbox in path.c in Pillow before 9.0.0 improperly initializes ImagePath.Path.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling"
55,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2022-24303,<9.0.1,Pillow before 9.0.1 allows attackers to delete files because spaces in temporary pathnames are mishandled.
56,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2022-22817,<9.0.1,"Pillow 9.0.1 includes a fix for CVE-2022-22817: PIL.ImageMath.eval in Pillow before 9.0.0 allows evaluation of arbitrary expressions, such as ones that use the Python exec method. A first patch was issued for version 9.0.0 but it did not prevent builtins available to lambda expressions.
https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html#security"
57,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2022-45198,<9.2.0,Pillow before 9.2.0 performs Improper Handling of Highly Compressed GIF Data (Data Amplification).
58,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-11538,<=7.0.0,"In libImaging/SgiRleDecode.c in Pillow through 7.0.0, a number of out-of-bounds reads exist in the parsing of SGI image files, a different issue than CVE-2020-5311."
59,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-28675,">=0,<8.2.0",An issue was discovered in Pillow before 8.2.0. PSDImagePlugin.PsdImageFile lacked a sanity check on the number of input layers relative to the size of the data block. This could lead to a DoS on Image.open prior to Image.load.
60,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-27923,">=4.3.0,<8.1.1","Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large."
61,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-23437,">=5.2.0,<8.3.2","Pillow from 5.2.0 and before 8.3.2 is vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function.
https://github.com/python-pillow/Pillow/commit/9e08eb8f78fdfd2f476e1b20b7cf38683754866b
https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html"
62,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2022-30595,">=9.1.0,<9.1.1",libImaging/TgaRleDecode.c in Pillow 9.1.0 has a heap buffer overflow in the processing of invalid TGA image files.
63,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,PVE-2023-55182,">=9.1.0,<9.3.0","Pillow 9.3.0 includes a security fix: Pillow will now decode the data in its natural CMYK mode, then convert it to RGB and rearrange the channels afterwards. Trying to load the data in an incorrect mode could result in a segmentation fault.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#decode-jpeg-compressed-blp1-data-in-original-mode"
64,pillow,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2022-45199,">=9.2.0,<9.3.0","Pillow before 9.3.0 allows denial of service via SAMPLESPERPIXEL.
https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html#limit-samplesperpixel-to-avoid-runtime-dos"
65,pooch,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,no one,no one,no one
66,pymatting,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,no one,no one,no one
67,scikit-image,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,True,no one,no one,no one
68,scipy,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2013-4251,">=0,<0.12.1",The scipy.weave component in SciPy before 0.12.1 creates insecure temporary directories.
69,tqdm,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2016-10075,<4.11.2,The tqdm._version module in tqdm versions before 4.11.2 allows local users to execute arbitrary code via a crafted repo with a malicious git log in the current working directory.
70,bandit,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2017-18342,<1.6.3,Bandit 1.6.3 updates its dependency 'pyyaml' to v5.3.1 to include security fixes.
71,bandit,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-1747,<1.6.3,Bandit 1.6.3 updates its dependency 'pyyaml' to v5.3.1 to include security fixes.
72,black,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,no one,no one,no one
73,flake8,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,no one,no one,no one
74,imagehash,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,no one,no one,no one
75,isort,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,no one,no one,no one
76,mypy,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,no one,no one,no one
77,pytest,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,no one,no one,no one
78,setuptools,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2013-1633,<0.7,"Setuptools version 0.7 includes a fix for CVE-2013-1633: Easy_install in setuptools before 0.7 uses HTTP to retrieve packages from the PyPI repository, and does not perform integrity checks on package contents, which allows man-in-the-middle attackers to execute arbitrary code via a crafted response to the default use of the product."
79,setuptools,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,PVE-2021-26129,<0.9.5,setuptools 0.9.5 fixes a security vulnerability in SSL certificate validation.
80,setuptools,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,PVE-2021-26132,<1.3,"Setuptools before 1.3 has a security vulnerability in SSL match_hostname check, similar to CVE-2013-7440."
81,setuptools,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,PVE-2021-26133,<3.0,setuptools 3.0 avoids the potential security vulnerabilities presented by use of tar archives in ez_setup.py. It also leverages the security features added to ZipFile.extract in Python 2.7.4.
82,setuptools,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2022-40897,<65.5.1,"Python Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py.
https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-in-top-python-packages"
83,twine,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2018-18074,<2.0.0,Twine 2.0.0 updates requests to 2.20 (or later) to include a security fix.
84,wheel,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2022-40898,<0.38.1,"Wheel 0.38.1 includes a fix for CVE-2022-40898: An issue discovered in Python Packaging Authority (PyPA) Wheel 0.37.1 and earlier allows remote attackers to cause a denial of service via attacker controlled input to wheel cli.
https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-in-top-python-packages"
85,onnxruntime-gpu,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,no one,no one,no one
86,aiohttp,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,PVE-2021-25613,<0.16.3,"Aiohttp 0.16.3 fixes a directory traversal vulnerability by making changes in StaticRoute class of web_urldispatcher.py.
https://github.com/aio-libs/aiohttp/pull/383"
87,aiohttp,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-21330,<3.7.4,Aiohttp 3.7.4 includes a fix for CVE-2021-21330: In aiohttp before version 3.7.4 there is an open redirect vulnerability. A maliciously crafted link to an aiohttp-based web-server could redirect the browser to a different website. It is caused by a bug in the 'aiohttp.web_middlewares.normalize_path_middleware' middleware. A workaround can be to avoid using 'aiohttp.web_middlewares.normalize_path_middleware' in your applications.
88,aiohttp,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,PVE-2021-42692,<3.8.0,"Aiohttp 3.8.0 adds validation of HTTP header keys and values to prevent header injection.
https://github.com/aio-libs/aiohttp/issues/4818"
89,asyncer,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,no one,no one,no one
90,click,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,PVE-2022-47833,<8.0.0,"Click 8.0.0 uses 'mkstemp()' instead of the deprecated & insecure 'mktemp()'.
https://github.com/pallets/click/issues/1752"
91,fastapi,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2019-11324,<0.18.0,Fastapi 0.18.0 updates its dependency 'urllib3' to v1.24.2 to include a security fix.
92,fastapi,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,PVE-2021-37231,<0.30.0,"Fastapi 0.30.0 avoids/fixes a potential security issue: as the returned object is passed directly to Pydantic, if the returned object was a subclass of the `response_model` (e.g. you return a `UserInDB` that inherits from `User` but contains extra fields, like `hashed_password`, and `User` is used in the `response_model`), it would still pass the validation (because `UserInDB` is a subclass of `User`) and the object would be returned as-is, including the `hashed_password`. To fix this, the declared `response_model` is cloned, if it is a Pydantic model class (or contains Pydantic model classes in it, e.g. in a `List[Item]`), the Pydantic model class(es) will be a different one (the ""cloned"" one). So, an object that is a subclass won't simply pass the validation and returned as-is, because it is no longer a sub-class of the cloned `response_model`. Instead, a new Pydantic model object will be created with the contents of the returned object. So, it will be a new object (made with the data from the returned one), and will be filtered by the cloned `response_model`, containing only the declared fields as normally."
93,fastapi,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,PVE-2021-37428,<0.37.0,Fastapi 0.37.0 fixes a security issue: when returning a sub-class of a response model and using `skip_defaults` it could leak information. See: https://github.com/tiangolo/fastapi/pull/485
94,fastapi,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-29510,<0.65.1,"Fastapi 0.65.1 upgrades pydantic pin, to handle CVE-2021-29510."
95,fastapi,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-32677,<0.65.2,"Fastapi version 0.65.2 includes a security fix for CVE-2021-32677: FastAPI versions lower than 0.65.2 that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack. In versions lower than 0.65.2, FastAPI would try to read the request payload as JSON even if the content-type header sent was not set to application/json or a compatible JSON media type (e.g. application/geo+json). A request with a content type of text/plain containing JSON data would be accepted and the JSON data would be extracted. Requests with content type text/plain are exempt from CORS preflights, for being considered Simple requests. The browser will execute them right away including cookies, and the text content could be a JSON string that would be parsed and accepted by the FastAPI application. The request data is now parsed as JSON only if the content-type header is application/json or another JSON compatible media type like application/geo+json. It's best to upgrade to the latest FastAPI, but if updating is not possible then a middleware or a dependency that checks the content-type header and aborts the request if it is not application/json or another JSON compatible content type can act as a mitigating workaround.
https://github.com/tiangolo/fastapi/security/advisories/GHSA-8h2j-cgx8-6xv7
https://github.com/tiangolo/fastapi/commit/fa7e3c996edf2d5482fff8f9d890ac2390dede4d"
96,fastapi,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-46708,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
97,fastapi,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2018-25031,<0.75.2,Fastapi 0.75.2 updates its NPM dependency 'swagger-ui' to include security fixes.
98,fastapi,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-45958,<0.75.2,Fastapi 0.75.2 updates its dependency 'ujson' ranges to include a security fix.
99,fastapi,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2023-30798,<0.92.0,Fastapi 0.92.0 updates its dependency 'Starlette' to v0.25.0 to include a security fix.
100,fastapi,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2023-29159,<0.95.2,Fastapi 0.95.2 updates its dependency 'Starlette' to versions '>=0.27.0' to include a security fix.
101,filetype,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,no one,no one,no one
102,gradio,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,PVE-2021-43619,<2.6.0,"Gradio 2.6.0 fixes arbitrary file read vulnerabilities.
https://github.com/gradio-app/gradio/pull/406"
103,gradio,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,PVE-2022-52426,<3.13.1,"Gradio 3.13.1 adds HTTPS for the share links.
https://github.com/gradio-app/gradio/pull/2509"
104,gradio,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2023-25823,<3.19.1,"Gradio 3.19.1 includes a fix for CVE-2023-25823: When using Gradio's share links (i.e. creating a Gradio app and then setting 'share=True'), a private SSH key is sent to any user that connects to the Gradio machine, which means that a user could access other users' shared Gradio demos. From there, other exploits are possible depending on the level of access/exposure the Gradio app provides. This issue is patched in version 3.13.1, however, users are recommended to update to 3.19.1 or later where the FRP solution has been properly tested.
https://github.com/gradio-app/gradio/security/advisories/GHSA-3x5j-9vwr-8rr5"
105,gradio,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2023-34239,<=3.33.1,Gradio is an open-source Python library that is used to build machine learning and data science. Due to a lack of path filtering Gradio does not properly restrict file access to users. Additionally Gradio does not properly restrict the what URLs are proxied. These issues have been addressed in version 3.34.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.
106,gradio,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2021-43831,">=0,<2.5.0",Gradio is an open source framework for building interactive machine learning models and demos. In versions prior to 2.5.0 there is a vulnerability that affects anyone who creates and publicly shares Gradio interfaces. File paths are not restricted and users who receive a Gradio link can access any files on the host computer if they know the file names or file paths. This is limited only by the host operating system. Paths are opened in read only mode. The problem has been patched in gradio 2.5.0.
107,gradio,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2022-24770,">=0,<2.8.11","`gradio` is an open source framework for building interactive machine learning models and demos. Prior to version 2.8.11, `gradio` suffers from Improper Neutralization of Formula Elements in a CSV File. The `gradio` library has a flagging functionality which saves input/output data into a CSV file on the developer's computer. This can allow a user to save arbitrary text into the CSV file, such as commands. If a program like MS Excel opens such a file, then it automatically runs these commands, which could lead to arbitrary commands running on the user's computer. The problem has been patched as of `2.8.11`, which escapes the saved csv with single quotes. As a workaround, avoid opening csv files generated by `gradio` with Excel or similar spreadsheet programs."
108,python-multipart,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,no one,no one,no one
109,uvicorn,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-7695,<0.11.7,"Uvicorn before 0.11.7 is vulnerable to HTTP response splitting. CRLF sequences are not escaped in the value of HTTP headers. Attackers can exploit this to add arbitrary headers to HTTP responses, or even return an arbitrary response body, whenever crafted input is used to construct HTTP headers."
110,uvicorn,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,CVE-2020-7694,<0.11.7,"The request logger provided by Uvicorn prior to version 0.11.7 is vulnerable to ASNI escape sequence injection. Whenever any HTTP request is received, the default behaviour of uvicorn is to log its details to either the console or a log file. When attackers request crafted URLs with percent-encoded escape sequences, the logging component will log the URL after it's been processed with urllib.parse.unquote, therefore converting any percent-encoded characters into their single-character equivalent, which can have special meaning in terminal emulators. By requesting URLs with crafted paths, attackers can: * Pollute uvicorn's access logs, therefore jeopardising the integrity of such files. * Use ANSI sequence codes to attempt to interact with the terminal emulator that's displaying the logs (either in real time or from a file). See: CVE-2020-7694."
111,watchdog,==*,/home/daniele/git/Validation/Repo/rembg/setup.py,False,no one,no one,no one
