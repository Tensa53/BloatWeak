,dep,version,filepath,bloated,cve,affected versions,advisory
0,pytest-cov,>=2.4.0,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,no one,no one,no one
1,pyaes,>=1.6.1,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,no one,no one,no one
2,paramiko,==2.11.0,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,CVE-2018-7750,"<1.17.6,>=2.0.0,<2.0.8,>=2.1.0,<2.1.5,>=2.2.0,<2.2.3,>=2.3.0,<2.3.2,==2.4.0,>=1.18.0,<1.18.5","transport.py in the SSH server implementation of Paramiko before 1.17.6, 1.18.x before 1.18.5, 2.0.x before 2.0.8, 2.1.x before 2.1.5, 2.2.x before 2.2.3, 2.3.x before 2.3.2, and 2.4.x before 2.4.1 does not properly check whether authentication is completed before processing other requests, as demonstrated by channel-open. A customized SSH client can simply skip the authentication step."
3,paramiko,==2.11.0,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,CVE-2022-24302,">=0,<2.9.3,>=2.10.0,<2.10.1","In Paramiko before 2.10.1, a race condition (between creation and chmod) in the write_private_key_file function could allow unauthorized information disclosure."
4,pytest,>=3.3.0,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,no one,no one,no one
5,tox,==*,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,no one,no one,no one
6,coverage,>=5.0.4,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,no one,no one,no one
7,importlib_resources,>=5.0.0,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,no one,no one,no one
8,colorama,>=0.4.1,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,no one,no one,no one
9,behave,>=1.2.4,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,no one,no one,no one
10,pexpect,>=3.3,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,no one,no one,no one
11,pep8radius,==*,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,no one,no one,no one
12,pyperclip,>=1.8.1,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,no one,no one,no one
13,autopep8,==1.3.3,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,no one,no one,no one
14,click,>=7.0,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,PVE-2022-47833,<8.0.0,"Click 8.0.0 uses 'mkstemp()' instead of the deprecated & insecure 'mktemp()'.
https://github.com/pallets/click/issues/1752"
15,sqlglot,>=5.1.3,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,no one,no one,no one
16,twine,>=1.12.1,/home/daniele/git/Validation/Repo/mycli/requirements-dev.txt,False,CVE-2018-18074,<2.0.0,Twine 2.0.0 updates requests to 2.20 (or later) to include a security fix.
17,importlib_resources,>= 5.0.0,/home/daniele/git/Validation/Repo/mycli/setup.py,False,no one,no one,no one
18,paramiko,==*,/home/daniele/git/Validation/Repo/mycli/setup.py,False,CVE-2018-7750,"<1.17.6,>=2.0.0,<2.0.8,>=2.1.0,<2.1.5,>=2.2.0,<2.2.3,>=2.3.0,<2.3.2,==2.4.0,>=1.18.0,<1.18.5","transport.py in the SSH server implementation of Paramiko before 1.17.6, 1.18.x before 1.18.5, 2.0.x before 2.0.8, 2.1.x before 2.1.5, 2.2.x before 2.2.3, 2.3.x before 2.3.2, and 2.4.x before 2.4.1 does not properly check whether authentication is completed before processing other requests, as demonstrated by channel-open. A customized SSH client can simply skip the authentication step."
19,paramiko,==*,/home/daniele/git/Validation/Repo/mycli/setup.py,False,CVE-2008-0299,<1.7.2,"Paramiko 1.7.2 includes a fix for CVE-2008-0299: common.py in Paramiko 1.7.1 and earlier, when using threads or forked processes, does not properly use RandomPool, which allows one session to obtain sensitive information from another session by predicting the state of the pool."
20,paramiko,==*,/home/daniele/git/Validation/Repo/mycli/setup.py,False,CVE-2022-24302,">=0,<2.9.3,>=2.10.0,<2.10.1","In Paramiko before 2.10.1, a race condition (between creation and chmod) in the write_private_key_file function could allow unauthorized information disclosure."
21,click,>= 7.0,/home/daniele/git/Validation/Repo/mycli/setup.py,False,PVE-2022-47833,<8.0.0,"Click 8.0.0 uses 'mkstemp()' instead of the deprecated & insecure 'mktemp()'.
https://github.com/pallets/click/issues/1752"
22,cryptography,==36.0.2,/home/daniele/git/Validation/Repo/mycli/setup.py,True,CVE-2023-0215,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
23,cryptography,==36.0.2,/home/daniele/git/Validation/Repo/mycli/setup.py,True,CVE-2023-0401,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
24,cryptography,==36.0.2,/home/daniele/git/Validation/Repo/mycli/setup.py,True,CVE-2023-0217,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
25,cryptography,==36.0.2,/home/daniele/git/Validation/Repo/mycli/setup.py,True,CVE-2022-3996,<39.0.1,"Cryptography 39.0.1 includes a fix for CVE-2022-3996, a DoS vulnerability affecting openssl.
https://github.com/pyca/cryptography/issues/7940"
26,cryptography,==36.0.2,/home/daniele/git/Validation/Repo/mycli/setup.py,True,CVE-2023-0216,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
27,cryptography,==36.0.2,/home/daniele/git/Validation/Repo/mycli/setup.py,True,CVE-2022-4203,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
28,cryptography,==36.0.2,/home/daniele/git/Validation/Repo/mycli/setup.py,True,CVE-2022-4304,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
29,cryptography,==36.0.2,/home/daniele/git/Validation/Repo/mycli/setup.py,True,CVE-2023-0286,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
30,cryptography,==36.0.2,/home/daniele/git/Validation/Repo/mycli/setup.py,True,CVE-2022-4450,<39.0.1,"Cryptography 39.0.1 updates its dependency 'OpenSSL' to v3.0.8 to include security fixes.
https://github.com/pyca/cryptography/issues/8229"
31,cryptography,==36.0.2,/home/daniele/git/Validation/Repo/mycli/setup.py,True,CVE-2023-2650,<41.0.0,"Cryptography 41.0.0 updates its dependency 'OpenSSL' to v3.1.1 to include a security fix.
https://github.com/pyca/cryptography/commit/8708245ccdeaff21d65eea68a4f8d2a7c5949a22"
32,cryptography,==36.0.2,/home/daniele/git/Validation/Repo/mycli/setup.py,True,CVE-2023-23931,">=1.8,<39.0.1","Cryptography 39.0.1 includes a fix for CVE-2023-23931: In affected versions 'Cipher.update_into' would accept Python objects which implement the buffer protocol, but provide only immutable buffers. This would allow immutable objects (such as 'bytes') to be mutated, thus violating fundamental rules of Python and resulting in corrupted output. This issue has been present since 'update_into' was originally introduced in cryptography 1.8.
https://github.com/pyca/cryptography/security/advisories/GHSA-w7pp-m8wf-vj6r"
33,cryptography,==36.0.2,/home/daniele/git/Validation/Repo/mycli/setup.py,True,CVE-2018-10903,">=1.9.0,<2.3",A flaw was found in python-cryptography versions between >=1.9.0 and <2.3. The finalize_with_tag API did not enforce a minimum tag length. If a user did not validate the input length prior to passing it to finalize_with_tag an attacker could craft an invalid payload with a shortened tag (e.g. 1 byte) such that they would have a 1 in 256 chance of passing the MAC check. GCM tag forgeries can cause key leakage. See: CVE-2018-10903.
34,cryptography,==36.0.2,/home/daniele/git/Validation/Repo/mycli/setup.py,True,CVE-2022-3786,">=37.0.0,<38.0.3","Cryptography versions from 37.0.0 and before 38.0.2 include a statically linked copy of OpenSSL that has known vulnerabilities.
https://github.com/pyca/cryptography/security/advisories/GHSA-39hc-v87j-747x"
35,cryptography,==36.0.2,/home/daniele/git/Validation/Repo/mycli/setup.py,True,CVE-2022-3602,">=37.0.0,<38.0.3","Cryptography versions from 37.0.0 and before 38.0.2 include a statically linked copy of OpenSSL that has known vulnerabilities.
https://github.com/pyca/cryptography/security/advisories/GHSA-39hc-v87j-747x"
36,Pygments,>=1.6,/home/daniele/git/Validation/Repo/mycli/setup.py,False,CVE-2022-40896,<2.15.0,"Pygments 2.15.0 includes a fix for CVE-2022-40896: In Pygments before 2.15.0 the lexers processing Smithy, SQL/SQL+Jinja or Java properties files from untrusted source are vulnerable to ReDoS."
37,Pygments,>=1.6,/home/daniele/git/Validation/Repo/mycli/setup.py,False,CVE-2021-27291,">=1.1,<2.7.4","Pygments 2.7.4 includes a fix for CVE-2021-27291: In pygments 1.1+, fixed in 2.7.4, the lexers used to parse programming languages rely heavily on regular expressions. Some of the regular expressions have exponential or cubic worst-case complexity and are vulnerable to ReDoS. By crafting malicious input, an attacker can cause a denial of service."
38,Pygments,>=1.6,/home/daniele/git/Validation/Repo/mycli/setup.py,False,CVE-2015-8557,">=1.2.2,<2.1",Pygments 2.1 includes a fix for CVE-2015-8557: The FontManager._get_nix_font_path function in formatters/img.py in pygments 1.2.2 through 2.0.2 allows remote attackers to execute arbitrary commands via shell metacharacters in a font name.
39,Pygments,>=1.6,/home/daniele/git/Validation/Repo/mycli/setup.py,False,CVE-2021-20270,">=1.5,<2.7.4","Pygments 2.7.4 includes a fix for CVE-2021-20270: An infinite loop in SMLLexer in Pygments versions 1.5 to 2.7.3 may lead to denial of service when performing syntax highlighting of a Standard ML (SML) source file, as demonstrated by input that only contains the ""exception"" keyword."
40,prompt_toolkit,">=3.0.6,<4.0.0",/home/daniele/git/Validation/Repo/mycli/setup.py,False,no one,no one,no one
41,PyMySQL,>= 0.9.2,/home/daniele/git/Validation/Repo/mycli/setup.py,False,no one,no one,no one
42,sqlparse,">=0.3.0,<0.5.0",/home/daniele/git/Validation/Repo/mycli/setup.py,False,CVE-2023-30608,">=0.1.15,<0.4.4","Sqlparse 0.4.4 includes a fix for CVE-2023-30608: Parser contains a regular expression that is vulnerable to ReDOS (Regular Expression Denial of Service).
https://github.com/andialbrecht/sqlparse/security/advisories/GHSA-rrm6-wvj7-cwh2"
43,sqlparse,">=0.3.0,<0.5.0",/home/daniele/git/Validation/Repo/mycli/setup.py,False,CVE-2021-32839,">=0.4.0,<0.4.2","Sqlparse version 0.4.2 includes a fix for CVE-2021-32839: In sqlparse versions 0.4.0 and 0.4.1 there is a Regular Expression Denial of Service vulnerability. The regular expression may cause exponential backtracking on strings containing many repetitions of ""\r\n"" in SQL comments. Only the formatting feature that removes comments from SQL statements is affected by this regular expression. As a workaround, avoid using the sqlformat.format function with keyword strip_comments=True or the --strip-comments command line flag when using the sqlformat command line tool.
https://github.com/andialbrecht/sqlparse/security/advisories/GHSA-p5w8-wqhj-9hhf
https://github.com/andialbrecht/sqlparse/commit/8238a9e450ed1524e40cb3a8b0b3c00606903aeb"
44,sqlglot,>=5.1.3,/home/daniele/git/Validation/Repo/mycli/setup.py,False,no one,no one,no one
45,configobj,>= 5.0.5,/home/daniele/git/Validation/Repo/mycli/setup.py,False,CVE-2023-26112,>=0,"All versions of the package configobj are vulnerable to Regular Expression Denial of Service (ReDoS) via the validate function, using (.+?)\((.*)\). **Note:** This is only exploitable in the case of a developer, putting the offending value in a server side configuration file."
46,cli_helpers,>= 2.2.1,/home/daniele/git/Validation/Repo/mycli/setup.py,False,no one,no one,no one
47,pyperclip,>= 1.8.1,/home/daniele/git/Validation/Repo/mycli/setup.py,False,no one,no one,no one
48,pyaes,>= 1.6.1,/home/daniele/git/Validation/Repo/mycli/setup.py,False,no one,no one,no one
